{
  "meta": {
    "total_articles": 122,
    "last_updated": "2025-08-16T14:41:01.055347+00:00",
    "entries_per_page": 20,
    "categories": {
      "技术": {
        "icon": "💻",
        "color": "#4A90E2",
        "count": 60,
        "sources": {
          "美团技术团队": {
            "icon": "🚀",
            "color": "#FFD93D",
            "description": "美团技术团队博客",
            "count": 10
          },
          "V2EX技术专区": {
            "icon": "🔧",
            "color": "#A5B4FC",
            "description": "V2EX技术讨论区",
            "count": 50
          }
        }
      },
      "工作": {
        "icon": "🏢",
        "color": "#50C878",
        "count": 50,
        "sources": {
          "V2EX酷工作": {
            "icon": "💼",
            "color": "#A7F3D0",
            "description": "V2EX招聘信息",
            "count": 50
          }
        }
      },
      "资讯": {
        "icon": "🌐",
        "color": "#FF6B6B",
        "count": 12,
        "sources": {
          "潮流周刊": {
            "icon": "📰",
            "color": "#FCA5A5",
            "description": "前端潮流技术周刊",
            "count": 12
          }
        }
      }
    }
  },
  "articles": [
    {
      "id": "77937d50b20c",
      "blog_name": "V2EX技术专区",
      "title": "有没有懂航旅纵横的",
      "link": "https://www.v2ex.com/t/1152903#reply0",
      "published": "2025-08-16T14:34:18+00:00",
      "timestamp": 1755354858,
      "summary": "<p>拿了中航信移动科技的 offer ，在北京薪资低的可怜，有没有在里面的哥们讲下能去吗。</p>",
      "content": "<p>拿了中航信移动科技的 offer ，在北京薪资低的可怜，有没有在里面的哥们讲下能去吗。</p>",
      "author": "rhlyym",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "4205111b8aac",
      "blog_name": "V2EX技术专区",
      "title": "咪咕体育的蛋疼 HDR...有没有在这上班的..",
      "link": "https://www.v2ex.com/t/1152902#reply0",
      "published": "2025-08-16T14:32:47+00:00",
      "timestamp": 1755354767,
      "summary": "咪咕视频(体育)的 hdr 直播真的是太扯了<br><br>没正确处理 hdr 码流, 到客户端, 无论是 web, 手机 app, 都是颜色都快-255 饱和度了...<br><br>好久的问题也没人解决<br><br>客服统一答复: 前方信号问题, 跟我们没关系<br><br>全球所有版权方就你家直播是这个破色的 还各种 hdr 专利呢...<br><br>有啥办法能强制怎么处理让颜色正常点么<br><br>他所有信号源有 hdr 的都这个破样, 信号源是标准 sdr 的,饱和度都正常",
      "content": "咪咕视频(体育)的 hdr 直播真的是太扯了<br><br>没正确处理 hdr 码流, 到客户端, 无论是 web, 手机 app, 都是颜色都快-255 饱和度了...<br><br>好久的问题也没人解决<br><br>客服统一答复: 前方信号问题, 跟我们没关系<br><br>全球所有版权方就你家直播是这个破色的 还各种 hdr 专利呢...<br><br>有啥办法能强制怎么处理让颜色正常点么<br><br>他所有信号源有 hdr 的都这个破样, 信号源是标准 sdr 的,饱和度都正常",
      "author": "realpg",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "d931c6355fe5",
      "blog_name": "V2EX酷工作",
      "title": "上海招兼职 Flutter 工程师",
      "link": "https://www.v2ex.com/t/1152895#reply2",
      "published": "2025-08-16T13:43:44+00:00",
      "timestamp": 1755351824,
      "summary": "工作内容：<br>开发一个会员 APP<br><br>工期：<br>项目预计 5~8 个月<br><br>地点要求：<br>工作地点为上海<br>优先不在职，可以线下办公的（具体一周来几天，看双方实际情况，可以协商）<br><br>工作经验：<br>3~5 年<br><br>招聘人数：<br>2<br><br>薪水：<br>按月结算，1.2W~2W<br><br>有意的，请加微信发简历，aGF2ZS1hLXN1bW1lcgo=",
      "content": "工作内容：<br>开发一个会员 APP<br><br>工期：<br>项目预计 5~8 个月<br><br>地点要求：<br>工作地点为上海<br>优先不在职，可以线下办公的（具体一周来几天，看双方实际情况，可以协商）<br><br>工作经验：<br>3~5 年<br><br>招聘人数：<br>2<br><br>薪水：<br>按月结算，1.2W~2W<br><br>有意的，请加微信发简历，aGF2ZS1hLXN1bW1lcgo=",
      "author": "NonClockworkChen",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "8fc2dd703c78",
      "blog_name": "V2EX酷工作",
      "title": "老哥们，现在广州 3 年后端开发什么行情啊",
      "link": "https://www.v2ex.com/t/1152891#reply1",
      "published": "2025-08-16T12:43:52+00:00",
      "timestamp": 1755348232,
      "summary": "<p>坐标广州，想跳了，不想去大厂压力太大，想找个中厂或者外企</p>",
      "content": "<p>坐标广州，想跳了，不想去大厂压力太大，想找个中厂或者外企</p>",
      "author": "alexleee",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "e67cd6b9a4cc",
      "blog_name": "V2EX技术专区",
      "title": "请教一个安全问题",
      "link": "https://www.v2ex.com/t/1152880#reply6",
      "published": "2025-08-16T10:35:54+00:00",
      "timestamp": 1755340554,
      "summary": "<p>1.浏览器开着 SwitchyOmega,连人了 sock5</p>\n<p>2.浏览器打开了自建 bitwarden</p>\n<p>3.edge 和 chrome 导出了密码到本地</p>\n<p>4.浏览器导入了这一批密码</p>\n<p>请问,这里有安全隐患吗,比如 ji 场会不会拦截到我的这些密码 csv 文件</p>",
      "content": "<p>1.浏览器开着 SwitchyOmega,连人了 sock5</p>\n<p>2.浏览器打开了自建 bitwarden</p>\n<p>3.edge 和 chrome 导出了密码到本地</p>\n<p>4.浏览器导入了这一批密码</p>\n<p>请问,这里有安全隐患吗,比如 ji 场会不会拦截到我的这些密码 csv 文件</p>",
      "author": "yifanes",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "0f769e9134cd",
      "blog_name": "V2EX酷工作",
      "title": "劳烦各位大佬指点一下简历",
      "link": "https://www.v2ex.com/t/1152871#reply3",
      "published": "2025-08-16T09:13:18+00:00",
      "timestamp": 1755335598,
      "summary": "<p>大佬们好，2 年的菜鸡 Javaer 想看看机会了。校招进了深圳某国企，图稳定，一开始还行，今年环境不好薪酬和福利都砍了很多，有些难以接受。</p>\n<p>下面是简历，各位大佬有啥指正和批评，请直说。\n<a href=\"https://imgur.com/a/x-6QgmluG\">https://imgur.com/a/x-6QgmluG</a></p>",
      "content": "<p>大佬们好，2 年的菜鸡 Javaer 想看看机会了。校招进了深圳某国企，图稳定，一开始还行，今年环境不好薪酬和福利都砍了很多，有些难以接受。</p>\n<p>下面是简历，各位大佬有啥指正和批评，请直说。\n<a href=\"https://imgur.com/a/x-6QgmluG\">https://imgur.com/a/x-6QgmluG</a></p>",
      "author": "kujumper",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "e44588039ca1",
      "blog_name": "V2EX技术专区",
      "title": "有没有给英文视频生成多语言字幕的工具？",
      "link": "https://www.v2ex.com/t/1152858#reply8",
      "published": "2025-08-16T07:41:28+00:00",
      "timestamp": 1755330088,
      "summary": "<p>手上有一些外语资料，想给它们生成字幕，并且能翻译成其他语言，有没有好用的工具？</p>\n<p>先谢谢了!</p>",
      "content": "<p>手上有一些外语资料，想给它们生成字幕，并且能翻译成其他语言，有没有好用的工具？</p>\n<p>先谢谢了!</p>",
      "author": "importmeta",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "92370b95d62b",
      "blog_name": "V2EX酷工作",
      "title": "你会让你的孩子未来从事你的行业么？",
      "link": "https://www.v2ex.com/t/1152855#reply13",
      "published": "2025-08-16T07:35:11+00:00",
      "timestamp": 1755329711,
      "summary": "关于可以资源继承的行业和资源不可继承的行业，态度应该是不一样的~<br><br>比如公职人员大概率会逼着自己的小孩成为公职人员，甚至还会蔓延到家族，蔓延到城市，和省份~<br><br>强技术工种且需要大量学习积累，后续还没办法让小孩直接继承资源的，大概率不愿意让小孩走自己的老路~<br><br>以上是我的一点小想法，想听听大家的意见~",
      "content": "关于可以资源继承的行业和资源不可继承的行业，态度应该是不一样的~<br><br>比如公职人员大概率会逼着自己的小孩成为公职人员，甚至还会蔓延到家族，蔓延到城市，和省份~<br><br>强技术工种且需要大量学习积累，后续还没办法让小孩直接继承资源的，大概率不愿意让小孩走自己的老路~<br><br>以上是我的一点小想法，想听听大家的意见~",
      "author": "luolink",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "2d185704e60f",
      "blog_name": "V2EX技术专区",
      "title": "防火墙 5788 电视剧",
      "link": "https://www.v2ex.com/t/1152845#reply2",
      "published": "2025-08-16T06:38:32+00:00",
      "timestamp": 1755326312,
      "summary": "<p>有没有人因为小时候看了这部电视剧《防火墙 5788 》才决心长大了要当程序员的？</p>",
      "content": "<p>有没有人因为小时候看了这部电视剧《防火墙 5788 》才决心长大了要当程序员的？</p>",
      "author": "qpwoeiruty",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "00128789ae5f",
      "blog_name": "V2EX技术专区",
      "title": "安卓 AVF 框架能用来做什么？",
      "link": "https://www.v2ex.com/t/1152841#reply0",
      "published": "2025-08-16T06:11:17+00:00",
      "timestamp": 1755324677,
      "summary": "<p>比如 Android 16 的 Terminal App 可以启动带 GPU 加速的 Debian 镜像，除了这些 AVF 还能干什么？</p>",
      "content": "<p>比如 Android 16 的 Terminal App 可以启动带 GPU 加速的 Debian 镜像，除了这些 AVF 还能干什么？</p>",
      "author": "professionaler",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "cd1e5d2a1dce",
      "blog_name": "V2EX酷工作",
      "title": "[求助] 刚毕业第一份工作，公司要求 1 个人 1 个月用微服务架构开发一个分销系统，这合理吗？",
      "link": "https://www.v2ex.com/t/1152832#reply97",
      "published": "2025-08-16T05:08:10+00:00",
      "timestamp": 1755320890,
      "summary": "<p>V 友们好，我是今年刚毕业初入职场的职场新人。一进公司第一天就给安排了个新项目，要我一个人在一个月内完成一个分销系统的全栈开发，想请教一下大家的看法。</p>\n<p>具体情况如下：</p>\n<ul>\n<li><strong>项目：</strong> 分销系统</li>\n<li><strong>时间：</strong> 1 个月</li>\n<li><strong>人员：</strong> 我一个人负责全栈开发</li>\n<li><strong>技术栈：</strong></li>\n<li><strong>架构：</strong> 微服务架构</li>\n<li><strong>前端：</strong> Vue + shadcn/ui</li>\n<li><strong>后端：</strong> Spring Boot 全家桶，MySQL, Redis, RabbitMQ, Nacos, Swagger, MyBatis, Kubernetes (K8s)</li>\n</ul>\n<p>项目划分了 9 个模块：    </p>\n<ol>\n<li><code>common</code> (公共模块)    </li>\n<li><code>auth</code> (认证授权)    </li>\n<li><code>user</code> (用户体系)    </li>\n<li><code>agent</code> (代理商体系，涉及层级关系) </li>\n<li><code>product</code> (商品管理)    </li>\n<li><code>deal</code> (交易订单)    </li>\n<li><code>promotion</code> (推广活动)    </li>\n<li><code>reward</code> (佣金奖励结算)    </li>\n<li><code>lead</code> (客资模块)</li>\n</ol>\n<p><strong>我的背景：</strong> 双非一本刚毕业，这是第一份正式工作，之前只个人开发过一些小项目，工作经验比较欠缺。目前薪资是 5k ，50 人以下的小公司。之前说好转正再谈薪（当时暗示有 8k ），但转正合同下来还是 5k ，心里落差很大。</p>\n<p><strong>我的困惑：</strong></p>\n<ol>\n<li>\n<p>对于这样一个分销系统，要求一个人在一个月内完成，从需求分析、设计、开发、测试到部署，合理吗？</p>\n</li>\n<li>\n<p>如果是一个有经验的开发者独立完成，这样一个项目大概需要多久？如果是一个小团队（比如 1 前端 2 后端 1 测试）呢？</p>\n</li>\n<li>\n<p>在二线城市，承担这样职责的全栈开发，5k 的薪资是否合理？情况就是这样，感觉压力很大，有点迷茫。</p>\n</li>\n</ol>\n<p>希望各位大佬能帮忙分析一下，指点迷津，不胜感激！</p>",
      "content": "<p>V 友们好，我是今年刚毕业初入职场的职场新人。一进公司第一天就给安排了个新项目，要我一个人在一个月内完成一个分销系统的全栈开发，想请教一下大家的看法。</p>\n<p>具体情况如下：</p>\n<ul>\n<li><strong>项目：</strong> 分销系统</li>\n<li><strong>时间：</strong> 1 个月</li>\n<li><strong>人员：</strong> 我一个人负责全栈开发</li>\n<li><strong>技术栈：</strong></li>\n<li><strong>架构：</strong> 微服务架构</li>\n<li><strong>前端：</strong> Vue + shadcn/ui</li>\n<li><strong>后端：</strong> Spring Boot 全家桶，MySQL, Redis, RabbitMQ, Nacos, Swagger, MyBatis, Kubernetes (K8s)</li>\n</ul>\n<p>项目划分了 9 个模块：    </p>\n<ol>\n<li><code>common</code> (公共模块)    </li>\n<li><code>auth</code> (认证授权)    </li>\n<li><code>user</code> (用户体系)    </li>\n<li><code>agent</code> (代理商体系，涉及层级关系) </li>\n<li><code>product</code> (商品管理)    </li>\n<li><code>deal</code> (交易订单)    </li>\n<li><code>promotion</code> (推广活动)    </li>\n<li><code>reward</code> (佣金奖励结算)    </li>\n<li><code>lead</code> (客资模块)</li>\n</ol>\n<p><strong>我的背景：</strong> 双非一本刚毕业，这是第一份正式工作，之前只个人开发过一些小项目，工作经验比较欠缺。目前薪资是 5k ，50 人以下的小公司。之前说好转正再谈薪（当时暗示有 8k ），但转正合同下来还是 5k ，心里落差很大。</p>\n<p><strong>我的困惑：</strong></p>\n<ol>\n<li>\n<p>对于这样一个分销系统，要求一个人在一个月内完成，从需求分析、设计、开发、测试到部署，合理吗？</p>\n</li>\n<li>\n<p>如果是一个有经验的开发者独立完成，这样一个项目大概需要多久？如果是一个小团队（比如 1 前端 2 后端 1 测试）呢？</p>\n</li>\n<li>\n<p>在二线城市，承担这样职责的全栈开发，5k 的薪资是否合理？情况就是这样，感觉压力很大，有点迷茫。</p>\n</li>\n</ol>\n<p>希望各位大佬能帮忙分析一下，指点迷津，不胜感激！</p>",
      "author": "Edom",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "999b4b187924",
      "blog_name": "V2EX技术专区",
      "title": "宝塔又被抄袭了？ GMSSH？",
      "link": "https://www.v2ex.com/t/1152822#reply36",
      "published": "2025-08-16T04:22:33+00:00",
      "timestamp": 1755318153,
      "summary": "<p>最近在某站无意中刷到了一个号称新一代的运维面板—GMSSH ，抱着试一试的想法我打开了 GitHub 发现他们并没有开源，此时我已经打算放弃了毕竟不开源我是真不敢用。但是就在昨天我的一位朋友给我发来一则 v 站的帖子，疑似是这个面板的作者发出的，内容有些对标宝塔面板的成分引起了我的强烈好奇，毕竟谁不喜欢看热闹呢。于是我便打开了他们的演示站和我的宝塔面板准备来一波跟风对比，没想到的是这一下就给我感受到了互联网这极强的包容性。</p>\n<p>首先我们对比的就是每个人都要用到，且每一家面板都不太一样的功能——防火墙。\n可惜 GMSSH 的演示站没有开放防火墙权限，但是为了蹭这波流量，我还是斥巨资，买了一台小机用于对比双方的防火墙。</p>\n<p>让我没想到的是这开局就是王炸，双方的规则竟然只在关键字 BT 和 GMSSH 中存在差异\n<img alt=\"b6e7df402ae56529d6ee662f40b9ff92.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/b6e7df402ae56529d6ee662f40b9ff92.png\">\n<img alt=\"9490a6de250497c6a97cb67fdb203fcf.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/9490a6de250497c6a97cb67fdb203fcf.png\">\n此时我已经嗅到了一丝不对劲的味道，抱着强烈的好奇心，我打开了双方的源码</p>\n<p>首先来看第一轮的对比\n这个文件名没什么好说的全世界都一样\n<img alt=\"f3224550cbcf8f8a9c2490cccd5f0c94.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/f3224550cbcf8f8a9c2490cccd5f0c94.png\">\n就是这个文件内容差点让我没分清\n<img alt=\"9cd40c326b2ebbeafa41c1e1e8f13fa0.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/9cd40c326b2ebbeafa41c1e1e8f13fa0.png\">\n这里我仿佛看到了一个新的产品即将崛起——代码翻译器，编程语言也是语言 py-&gt;sh\n<img alt=\"2a889e2845a610756b8b542e8ef4dbfe.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/2a889e2845a610756b8b542e8ef4dbfe.png\">\n怎么说呢看到这的时候我其实都已经不想对比下去了，有种让我左手和右手互博的无力感，这完全就是一模一样，但是都开始了就是一坨翔也得咽下去不是</p>\n<p>于是我来到了双方的 data 目录，想着数据总该不能一样了吧\n您猜怎么着，诶嘿，左脑攻击右脑了，一不小心对比变成了照镜子\n<img alt=\"32900fdb660fad46d8fb46d44e03ca1d.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/32900fdb660fad46d8fb46d44e03ca1d.png\">\n<img alt=\"3477c2dacc0ac160aa7f1af0a5e274bf.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/3477c2dacc0ac160aa7f1af0a5e274bf.png\">\n到这我终于是死心了，这对比我是做不下去了</p>\n<p>但是聪明的我换了个角度，一不小心看到了他 main 文件里面的东西，于是我就在大量的宝塔种发现了微量的 GMSSH ，令人震惊的是我一不小心看到了源码作者的名字，好难猜呀 wzz 是谁呀，怎么两家都有 wzz ，好奇怪呀\n<img alt=\"93ec3228006454d534b10de008fbfb97.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/93ec3228006454d534b10de008fbfb97.png\"></p>\n<p>希望大家多多评论、转发、关注支持主包，主包将继续实锤某新一代面板抄袭</p>\n<p>最后隔空喊话某新一代面板，抄人家就算了还要一边用人家的代码一边说人家坏话</p>\n<p>附录：\n<img alt=\"ec21dfae4159410b854a33dbdcac9757.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/ec21dfae4159410b854a33dbdcac9757.png\">\n最最后附上几张来自计划任务的</p>\n<p><img alt=\"23d6c5364891cb47650e50f10f48415f.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/23d6c5364891cb47650e50f10f48415f.png\">\n<img alt=\"d5725eb290cf62755b743c84de181199.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/d5725eb290cf62755b743c84de181199.png\">\n<img alt=\"60a44afdb4c9a8fcfdf03e9496f0c72f.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/60a44afdb4c9a8fcfdf03e9496f0c72f.png\"></p>",
      "content": "<p>最近在某站无意中刷到了一个号称新一代的运维面板—GMSSH ，抱着试一试的想法我打开了 GitHub 发现他们并没有开源，此时我已经打算放弃了毕竟不开源我是真不敢用。但是就在昨天我的一位朋友给我发来一则 v 站的帖子，疑似是这个面板的作者发出的，内容有些对标宝塔面板的成分引起了我的强烈好奇，毕竟谁不喜欢看热闹呢。于是我便打开了他们的演示站和我的宝塔面板准备来一波跟风对比，没想到的是这一下就给我感受到了互联网这极强的包容性。</p>\n<p>首先我们对比的就是每个人都要用到，且每一家面板都不太一样的功能——防火墙。\n可惜 GMSSH 的演示站没有开放防火墙权限，但是为了蹭这波流量，我还是斥巨资，买了一台小机用于对比双方的防火墙。</p>\n<p>让我没想到的是这开局就是王炸，双方的规则竟然只在关键字 BT 和 GMSSH 中存在差异\n<img alt=\"b6e7df402ae56529d6ee662f40b9ff92.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/b6e7df402ae56529d6ee662f40b9ff92.png\">\n<img alt=\"9490a6de250497c6a97cb67fdb203fcf.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/9490a6de250497c6a97cb67fdb203fcf.png\">\n此时我已经嗅到了一丝不对劲的味道，抱着强烈的好奇心，我打开了双方的源码</p>\n<p>首先来看第一轮的对比\n这个文件名没什么好说的全世界都一样\n<img alt=\"f3224550cbcf8f8a9c2490cccd5f0c94.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/f3224550cbcf8f8a9c2490cccd5f0c94.png\">\n就是这个文件内容差点让我没分清\n<img alt=\"9cd40c326b2ebbeafa41c1e1e8f13fa0.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/9cd40c326b2ebbeafa41c1e1e8f13fa0.png\">\n这里我仿佛看到了一个新的产品即将崛起——代码翻译器，编程语言也是语言 py-&gt;sh\n<img alt=\"2a889e2845a610756b8b542e8ef4dbfe.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/2a889e2845a610756b8b542e8ef4dbfe.png\">\n怎么说呢看到这的时候我其实都已经不想对比下去了，有种让我左手和右手互博的无力感，这完全就是一模一样，但是都开始了就是一坨翔也得咽下去不是</p>\n<p>于是我来到了双方的 data 目录，想着数据总该不能一样了吧\n您猜怎么着，诶嘿，左脑攻击右脑了，一不小心对比变成了照镜子\n<img alt=\"32900fdb660fad46d8fb46d44e03ca1d.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/32900fdb660fad46d8fb46d44e03ca1d.png\">\n<img alt=\"3477c2dacc0ac160aa7f1af0a5e274bf.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/3477c2dacc0ac160aa7f1af0a5e274bf.png\">\n到这我终于是死心了，这对比我是做不下去了</p>\n<p>但是聪明的我换了个角度，一不小心看到了他 main 文件里面的东西，于是我就在大量的宝塔种发现了微量的 GMSSH ，令人震惊的是我一不小心看到了源码作者的名字，好难猜呀 wzz 是谁呀，怎么两家都有 wzz ，好奇怪呀\n<img alt=\"93ec3228006454d534b10de008fbfb97.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/93ec3228006454d534b10de008fbfb97.png\"></p>\n<p>希望大家多多评论、转发、关注支持主包，主包将继续实锤某新一代面板抄袭</p>\n<p>最后隔空喊话某新一代面板，抄人家就算了还要一边用人家的代码一边说人家坏话</p>\n<p>附录：\n<img alt=\"ec21dfae4159410b854a33dbdcac9757.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/ec21dfae4159410b854a33dbdcac9757.png\">\n最最后附上几张来自计划任务的</p>\n<p><img alt=\"23d6c5364891cb47650e50f10f48415f.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/23d6c5364891cb47650e50f10f48415f.png\">\n<img alt=\"d5725eb290cf62755b743c84de181199.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/d5725eb290cf62755b743c84de181199.png\">\n<img alt=\"60a44afdb4c9a8fcfdf03e9496f0c72f.png\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/60a44afdb4c9a8fcfdf03e9496f0c72f.png\"></p>",
      "author": "cnlinkin",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "8f1590a978e8",
      "blog_name": "V2EX技术专区",
      "title": "gitpod 老玩家，拿到 gitpod ona 的 ea 测试资格了",
      "link": "https://www.v2ex.com/t/1152820#reply1",
      "published": "2025-08-16T04:16:21+00:00",
      "timestamp": 1755317781,
      "summary": "之前重度 gitpod 用户，gitpod 转型为公有云托管后就没怎么使用了，这次又出了个 ona ea,感觉还是在之前 yun ide 基础上加了个 agent 能力，正在摸索中，不太看好。最近有一些支持本地 hosting 的 cloud ide,可以取代 gitpod/github workspace 这种产品了",
      "content": "之前重度 gitpod 用户，gitpod 转型为公有云托管后就没怎么使用了，这次又出了个 ona ea,感觉还是在之前 yun ide 基础上加了个 agent 能力，正在摸索中，不太看好。最近有一些支持本地 hosting 的 cloud ide,可以取代 gitpod/github workspace 这种产品了",
      "author": "milestance",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "c1f0d61b702f",
      "blog_name": "V2EX技术专区",
      "title": "项目中用了 R2DBC，没有逻辑删除太痛苦了",
      "link": "https://www.v2ex.com/t/1152809#reply8",
      "published": "2025-08-16T03:40:39+00:00",
      "timestamp": 1755315639,
      "summary": "<p>最近想学习新技术，想用纯响应式去做项目，选了 R2DBC+Spring Webflux+jdk24</p>\n<p>别的问题都还好，但是没有逻辑删除，这个对我来讲太重要了。市面上还没有合适的扩展实现，我想自己实现一个，又要考虑事务、回滚、级联这些。</p>\n<p>用 jpa 我又不甘心</p>\n<p>有没有熟悉响应式的大佬，出来帮我分析一下啊</p>",
      "content": "<p>最近想学习新技术，想用纯响应式去做项目，选了 R2DBC+Spring Webflux+jdk24</p>\n<p>别的问题都还好，但是没有逻辑删除，这个对我来讲太重要了。市面上还没有合适的扩展实现，我想自己实现一个，又要考虑事务、回滚、级联这些。</p>\n<p>用 jpa 我又不甘心</p>\n<p>有没有熟悉响应式的大佬，出来帮我分析一下啊</p>",
      "author": "fingerxie",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "5a10b6e627f2",
      "blog_name": "V2EX技术专区",
      "title": "AWS Kiro 付费订阅已经上线",
      "link": "https://www.v2ex.com/t/1152789#reply22",
      "published": "2025-08-16T01:20:54+00:00",
      "timestamp": 1755307254,
      "summary": "订阅价格如下 <br><a href=\"https://i.imgur.com/YE7b3yX.png\" target=\"_blank\"><img class=\"embedded_image\" src=\"https://i.imgur.com/YE7b3yX.png\"></a><br><br>Q: Kiro 的 Spec 和 Vibe 请求由哪些模型驱动？<br>A: Kiro 的规格与氛围要求由 Claude 4 Sonnet ，及 Claude 3.7 Sonnet 高级模型驱动实现<br>要是 20 刀或者 40 刀能体验 4.1 的模型就好了，但是连 200 刀的订阅都体验不了，20 或者 40 就别想了<br><br>这几天体验了一下 kiro ，它的优点是 specs 模式，先提出需求，让 AI 帮你进行设计大概的框架，最后生成任务列表，让用户自行选择运行任务，能够让架构和功能更加可控。<br>它的缺点：<br>1. 没有全局的回复语言设置，导致每次回答有可能是英文回答，或者是代码注释使用英文注释，只能在每个项目的 AGENT STEERING 添加 使用中文回复的提示。 <br>2. 无法进行代码退回，我遇到执行任务后，一直在处理代码 运行测试，然后 AI 把自己玩崩了，代码全部爆红，注释全部乱码，最后在任务列表上 打个勾 表明我已经完成任务了，无语，我想将代码回退到 上一个任务结束点，但是没有找到按钮，明明能在任务列表 view change 上看到 每个任务的代码变动信息，但是没有回退按钮（ 0.2.13 最新上线付费订阅版 还是没有），我让 AI 执行回退命令，但只回退了一小部分代码，大部分代码还是爆红。<br>3. 虽然是同样的 Claude 4 Sonnet ，但总感觉生成的代码质量 比不上 没有降智的 Cursor ，也比不上 AugmentCode （ Claude Code 没体验过 无法判断，但大概率比 kiro 好），写 Go 代码，生成了一个和引入包名 一样的变量，导致运行失败，AI 自己运行测试 各种办法处理 还是没有解决，后来还是我查看代码 手动解决的。<br><br>就目前 kiro 的表现而言，我觉得不是很好用，追求生成的代码质量 比不过 Cursor AugmentCode ，追求价格又比不过 Trae 国际版（还可以使用 GPT5 ），一个 Specs 模式 任务执行出错了还没办法 快速回退 只能依靠 Git (你可是一个 IDE 啊)，上不去下不来 卡在白银分段了。",
      "content": "订阅价格如下 <br><a href=\"https://i.imgur.com/YE7b3yX.png\" target=\"_blank\"><img class=\"embedded_image\" src=\"https://i.imgur.com/YE7b3yX.png\"></a><br><br>Q: Kiro 的 Spec 和 Vibe 请求由哪些模型驱动？<br>A: Kiro 的规格与氛围要求由 Claude 4 Sonnet ，及 Claude 3.7 Sonnet 高级模型驱动实现<br>要是 20 刀或者 40 刀能体验 4.1 的模型就好了，但是连 200 刀的订阅都体验不了，20 或者 40 就别想了<br><br>这几天体验了一下 kiro ，它的优点是 specs 模式，先提出需求，让 AI 帮你进行设计大概的框架，最后生成任务列表，让用户自行选择运行任务，能够让架构和功能更加可控。<br>它的缺点：<br>1. 没有全局的回复语言设置，导致每次回答有可能是英文回答，或者是代码注释使用英文注释，只能在每个项目的 AGENT STEERING 添加 使用中文回复的提示。 <br>2. 无法进行代码退回，我遇到执行任务后，一直在处理代码 运行测试，然后 AI 把自己玩崩了，代码全部爆红，注释全部乱码，最后在任务列表上 打个勾 表明我已经完成任务了，无语，我想将代码回退到 上一个任务结束点，但是没有找到按钮，明明能在任务列表 view change 上看到 每个任务的代码变动信息，但是没有回退按钮（ 0.2.13 最新上线付费订阅版 还是没有），我让 AI 执行回退命令，但只回退了一小部分代码，大部分代码还是爆红。<br>3. 虽然是同样的 Claude 4 Sonnet ，但总感觉生成的代码质量 比不上 没有降智的 Cursor ，也比不上 AugmentCode （ Claude Code 没体验过 无法判断，但大概率比 kiro 好），写 Go 代码，生成了一个和引入包名 一样的变量，导致运行失败，AI 自己运行测试 各种办法处理 还是没有解决，后来还是我查看代码 手动解决的。<br><br>就目前 kiro 的表现而言，我觉得不是很好用，追求生成的代码质量 比不过 Cursor AugmentCode ，追求价格又比不过 Trae 国际版（还可以使用 GPT5 ），一个 Specs 模式 任务执行出错了还没办法 快速回退 只能依靠 Git (你可是一个 IDE 啊)，上不去下不来 卡在白银分段了。",
      "author": "surbomfla",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "db64f7ad9459",
      "blog_name": "V2EX技术专区",
      "title": "闲聊一个话题， v1.0.0，各位公司对版本号有没什么好的管理方式，还是每次新版就增加上去？",
      "link": "https://www.v2ex.com/t/1152788#reply27",
      "published": "2025-08-16T01:15:10+00:00",
      "timestamp": 1755306910,
      "summary": "如题，v1.0.0<br>想看看有没普遍认可的版本号管理规则，基本上安卓和 iOS 有版本号管理，后端和前端算是没有，当然最好的做法也是需要。<br>各位的公司是怎么制定版本号的？",
      "content": "如题，v1.0.0<br>想看看有没普遍认可的版本号管理规则，基本上安卓和 iOS 有版本号管理，后端和前端算是没有，当然最好的做法也是需要。<br>各位的公司是怎么制定版本号的？",
      "author": "wKong753900",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "389a322ad2b5",
      "blog_name": "V2EX技术专区",
      "title": "一键安装 Debian, Root on ZFS, 支持磁盘加密，支持磁盘压缩，支持远程解锁，有人感兴趣 ZFS On Debian 落地，并一起改进吗？",
      "link": "https://www.v2ex.com/t/1152782#reply1",
      "published": "2025-08-15T23:26:30+00:00",
      "timestamp": 1755300390,
      "summary": "<p>写在前面: 极其危险，慎重来玩，磁盘数据会完全清除</p>\n<p>一键安装 Debian, Root on ZFS, 支持磁盘加密， 支持磁盘压缩， 支持远程解锁。</p>\n<p>特别适合 VPS,本地虚拟机等环境</p>\n<p><a href=\"https://github.com/congzhangzh/zfs-on-debian\">https://github.com/congzhangzh/zfs-on-debian</a></p>",
      "content": "<p>写在前面: 极其危险，慎重来玩，磁盘数据会完全清除</p>\n<p>一键安装 Debian, Root on ZFS, 支持磁盘加密， 支持磁盘压缩， 支持远程解锁。</p>\n<p>特别适合 VPS,本地虚拟机等环境</p>\n<p><a href=\"https://github.com/congzhangzh/zfs-on-debian\">https://github.com/congzhangzh/zfs-on-debian</a></p>",
      "author": "MasterMonkey",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "6940c150a2f1",
      "blog_name": "V2EX技术专区",
      "title": "这种一直访问 /.git/config 的攻击是什么脚本/扫描器吗",
      "link": "https://www.v2ex.com/t/1152778#reply10",
      "published": "2025-08-15T19:15:06+00:00",
      "timestamp": 1755285306,
      "summary": "<p>没完没了的...\n<img alt=\"img\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/1c2f65d59c309e2a7b70551fccbec3cd.png\"></p>",
      "content": "<p>没完没了的...\n<img alt=\"img\" class=\"embedded_image\" src=\"https://i.mji.rip/2025/08/16/1c2f65d59c309e2a7b70551fccbec3cd.png\"></p>",
      "author": "jaded",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "7747efe53087",
      "blog_name": "V2EX酷工作",
      "title": "求求你们不要再因为找不到年薪几十万的工作过来焦虑了🥺",
      "link": "https://www.v2ex.com/t/1152774#reply14",
      "published": "2025-08-15T17:10:34+00:00",
      "timestamp": 1755277834,
      "summary": "<p>最近看的过来抱怨和焦虑的帖子大致都是：</p>\n<p>年薪 70w 焦虑找工作\n博士毕业焦虑\n春熙路手工被骗结果回头一看兜里 2000 个 w</p>\n<p>你们还来焦虑的话让不让我这种普通人活了🥺</p>",
      "content": "<p>最近看的过来抱怨和焦虑的帖子大致都是：</p>\n<p>年薪 70w 焦虑找工作\n博士毕业焦虑\n春熙路手工被骗结果回头一看兜里 2000 个 w</p>\n<p>你们还来焦虑的话让不让我这种普通人活了🥺</p>",
      "author": "darksword21",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "f83d4505a8a6",
      "blog_name": "V2EX技术专区",
      "title": "关于 oauth2 登录，前后端分离的项目，请教我这样的实现是符合安全规范和最佳实践的吗？",
      "link": "https://www.v2ex.com/t/1152768#reply3",
      "published": "2025-08-15T15:43:20+00:00",
      "timestamp": 1755272600,
      "summary": "<p>第一步：用户点击第三方登录按钮，前端向后端发送一个请求，后端生成防 CSRF 攻击的 state ，连同授权地址一块返回，假设是 <a href=\"https://github.com/authorize/?state=abcdefg\">https://github.com/authorize/?state=abcdefg</a></p>\n<p>第二步：前端获取到返回的授权地址，解析出 state ，存在 Cookie 中（或者存 LocalStorage ，但不知道通常的做法是存哪里？），将页面跳转至授权地址，地址中的 state 会在后续所有步骤中透传。</p>\n<p>第三步：用户完成授权，授权方将页面重定向到某个地址，这个地址是前端路由，前端在这个路由里解析相关参数，将授权 code ，透传的 state ，连同 Cookie 中存储的 state 发送给后端登录接口。</p>\n<p>第四步：后端接收到请求后，首先校验 Cookie 中的 state 和透传的 state 是否匹配，确保没有 CSRF 攻击。然后用 code 交换授权的用户信息，验证成功后即可登录这个用户。</p>\n<p>几个疑问：</p>\n<ol>\n<li>前后端分离的项目，授权流程是这样的吗？尤其是授权后回调地址，是不是必须得是前端的路由才行？</li>\n<li>防止 CSRF 攻击的 state ，处理方式是我说的这样吗？常规是怎么做的呢？</li>\n</ol>",
      "content": "<p>第一步：用户点击第三方登录按钮，前端向后端发送一个请求，后端生成防 CSRF 攻击的 state ，连同授权地址一块返回，假设是 <a href=\"https://github.com/authorize/?state=abcdefg\">https://github.com/authorize/?state=abcdefg</a></p>\n<p>第二步：前端获取到返回的授权地址，解析出 state ，存在 Cookie 中（或者存 LocalStorage ，但不知道通常的做法是存哪里？），将页面跳转至授权地址，地址中的 state 会在后续所有步骤中透传。</p>\n<p>第三步：用户完成授权，授权方将页面重定向到某个地址，这个地址是前端路由，前端在这个路由里解析相关参数，将授权 code ，透传的 state ，连同 Cookie 中存储的 state 发送给后端登录接口。</p>\n<p>第四步：后端接收到请求后，首先校验 Cookie 中的 state 和透传的 state 是否匹配，确保没有 CSRF 攻击。然后用 code 交换授权的用户信息，验证成功后即可登录这个用户。</p>\n<p>几个疑问：</p>\n<ol>\n<li>前后端分离的项目，授权流程是这样的吗？尤其是授权后回调地址，是不是必须得是前端的路由才行？</li>\n<li>防止 CSRF 攻击的 state ，处理方式是我说的这样吗？常规是怎么做的呢？</li>\n</ol>",
      "author": "jukanntenn",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "50fcbf340970",
      "blog_name": "V2EX酷工作",
      "title": "招聘，公司岗位内推，产品经理（链上数据），后端工程师（Web3 方向）， QA 工程师（侧重测试开发）",
      "link": "https://www.v2ex.com/t/1152767#reply0",
      "published": "2025-08-15T15:40:33+00:00",
      "timestamp": 1755272433,
      "summary": "<h2>公司岗位内推</h2>\n<p>职位类型：全职 | 工作地点：远程（ Remote ）</p>\n<p>我们致力于为 AI Agent, 交易 BOT 、量化团队及所有有链上数据需求的团队提供深度数据洞察，推动行业智能化发展。</p>\n<h3><strong>产品经理 （链上数据）</strong></h3>\n<p><strong>岗位要求</strong></p>\n<ol>\n<li>数据处理能力：熟悉数据库操作与数据分析，熟练使用 SQL 、Python ，具备处理链上数据的经验。</li>\n<li>区块链基础：了解 Solana 、EVM 生态，接触过链上数据结构或 API 工具。</li>\n<li>主动性与好奇心：极强的自我驱动力，对区块链和 API 技术充满好奇，面对复杂问题能灵活尝试多种解决方案。</li>\n<li>需求转化和战略能力：良好的逻辑表达能力，能洞察客户需求并和开发团队高效协作，有长期战略思考能力。</li>\n</ol>\n<p><strong>优先条件</strong></p>\n<ol>\n<li>熟悉主流链上数据 API （如 Helius 、QuickNode 、BirdEye ）或相关工具。</li>\n<li>有过 API 测试经验或参与过链上数据产品开发。</li>\n<li>熟练使用 AI 工具提升开发效率，会 Vibe Coding ，能快速编写脚本测试 API 数据。</li>\n</ol>\n<p><strong>岗位职责</strong></p>\n<ol>\n<li>链上数据与 API 调研：深入分析 Solana 、EVM 等区块链生态的 API 服务，对比返回数据格式、定价策略及性能，输出调研报告，为公司数据产品优化提供洞察。</li>\n<li>客户需求与战略建议：与客户沟通，了解链上数据使用场景，提出数据产品迭代和长期战略建议。</li>\n</ol>\n<h3><strong>后端工程师（ Web3 方向）</strong></h3>\n<p><strong>后端职责：</strong></p>\n<ol>\n<li>后端业务数据处理与开发：基于业务需求，设计并开发高可用、高性能的数据处理模块，实现复杂业务逻辑的高效统计与分析，支撑链上数据分析平台的核心功能。</li>\n<li>跨团队协同联动产品与前端团队，收集市场反馈与用户需求，推动后端技术方案迭代，确保技术实现与产品路线图保持一致。</li>\n</ol>\n<p><strong>理想人选：</strong></p>\n<ol>\n<li>Web3 专项经验：有 Solana 生态系统部署经验者优先，需具备 Solana 节点搭建、RPC 服务优化、链上数据高性能解析方案设计与选型能力；</li>\n<li>熟悉 Solana 生态工具链（如 solana-validator 、Anchor 框架）。</li>\n<li>容器化与部署能力：熟练使用 Docker Compose/K8s 进行容器化部署与集群管理，精通 CI/CD 流程，具备中间件组件自动化部署、配置管理及故障处理能力</li>\n<li>核心技术能力：熟练掌握 Kafka 、ClickHouse 、Postgres 、Redis 、Mongo 的底层原理、架构设计与实战应用，具备多个项目的开发与运维经验，能独立解决复杂技术问题。</li>\n<li>系统运维能力：精通 Linux 操作系统，熟练进行服务器配置、资源调度、安全加固及监控体系搭建；熟悉 Prometheus 、Grafana 等监控工具的使用。</li>\n<li>后端开发能力：精通至少一种后端开发语言（如 Go 、JS ），具备良好的代码规范、模块化开发思维及单元测试能力，能高效实现业务需求。</li>\n<li>分布式系统经验：熟悉分布式系统、微服务架构设计，具备高并发、大数据场景下的系统设计、开发与性能优化经验，保障系统的可扩展性与稳定性。</li>\n</ol>\n<h3><strong>QA 工程师（侧重测试开发）</strong></h3>\n<p><strong>职位概述</strong></p>\n<p>我们正在寻找一位具备扎实测试开发能力的全能型质量保证工程师，加入我们精干的敏捷团队。您将全面负责数据产品的端到端测试，同时主导自动化测试框架的开发，以提升整个技术栈的测试效率、覆盖率和可靠性。</p>\n<p><strong>岗位职责</strong></p>\n<ul>\n<li>设计并执行针对 API 、数据准确性及前端组件的全面测试，确保端到端质量</li>\n<li>通过自动化检查验证大规模数据集的完整性和稳定性</li>\n<li>编写详细测试用例，并与开发工程师协作定位/隔离缺陷</li>\n<li>构建并维护面向 API 、UI 及数据层的自动化测试框架</li>\n<li>搭建 CI/CD 测试流水线（ Jenkins/GitHub Actions ），实现自动化触发</li>\n<li>开发内部测试工具（如数据生成器、批量验证器等）</li>\n</ul>\n<p><strong>任职要求</strong></p>\n<ul>\n<li>精通 API 测试工具（ Postman/JMeter ）及测试策略设计</li>\n<li>掌握高级 SQL 技能，能进行复杂数据验证与分析</li>\n<li>具备 Python 或 Java 编程能力，可开发测试自动化脚本</li>\n<li>拥有 Pytest/Selenium 或同类工具的框架搭建实战经验</li>\n<li>熟悉 CI/CD 集成与自动化测试结合</li>\n<li>能够为大数据工作流设计自动化验证方案</li>\n<li>出色的远程协作、问题解决和沟通能力</li>\n</ul>\n<p>联系方式：\nTG: @<a href=\"https://www.v2ex.com/member/Ryan_ie\">Ryan_ie</a></p>",
      "content": "<h2>公司岗位内推</h2>\n<p>职位类型：全职 | 工作地点：远程（ Remote ）</p>\n<p>我们致力于为 AI Agent, 交易 BOT 、量化团队及所有有链上数据需求的团队提供深度数据洞察，推动行业智能化发展。</p>\n<h3><strong>产品经理 （链上数据）</strong></h3>\n<p><strong>岗位要求</strong></p>\n<ol>\n<li>数据处理能力：熟悉数据库操作与数据分析，熟练使用 SQL 、Python ，具备处理链上数据的经验。</li>\n<li>区块链基础：了解 Solana 、EVM 生态，接触过链上数据结构或 API 工具。</li>\n<li>主动性与好奇心：极强的自我驱动力，对区块链和 API 技术充满好奇，面对复杂问题能灵活尝试多种解决方案。</li>\n<li>需求转化和战略能力：良好的逻辑表达能力，能洞察客户需求并和开发团队高效协作，有长期战略思考能力。</li>\n</ol>\n<p><strong>优先条件</strong></p>\n<ol>\n<li>熟悉主流链上数据 API （如 Helius 、QuickNode 、BirdEye ）或相关工具。</li>\n<li>有过 API 测试经验或参与过链上数据产品开发。</li>\n<li>熟练使用 AI 工具提升开发效率，会 Vibe Coding ，能快速编写脚本测试 API 数据。</li>\n</ol>\n<p><strong>岗位职责</strong></p>\n<ol>\n<li>链上数据与 API 调研：深入分析 Solana 、EVM 等区块链生态的 API 服务，对比返回数据格式、定价策略及性能，输出调研报告，为公司数据产品优化提供洞察。</li>\n<li>客户需求与战略建议：与客户沟通，了解链上数据使用场景，提出数据产品迭代和长期战略建议。</li>\n</ol>\n<h3><strong>后端工程师（ Web3 方向）</strong></h3>\n<p><strong>后端职责：</strong></p>\n<ol>\n<li>后端业务数据处理与开发：基于业务需求，设计并开发高可用、高性能的数据处理模块，实现复杂业务逻辑的高效统计与分析，支撑链上数据分析平台的核心功能。</li>\n<li>跨团队协同联动产品与前端团队，收集市场反馈与用户需求，推动后端技术方案迭代，确保技术实现与产品路线图保持一致。</li>\n</ol>\n<p><strong>理想人选：</strong></p>\n<ol>\n<li>Web3 专项经验：有 Solana 生态系统部署经验者优先，需具备 Solana 节点搭建、RPC 服务优化、链上数据高性能解析方案设计与选型能力；</li>\n<li>熟悉 Solana 生态工具链（如 solana-validator 、Anchor 框架）。</li>\n<li>容器化与部署能力：熟练使用 Docker Compose/K8s 进行容器化部署与集群管理，精通 CI/CD 流程，具备中间件组件自动化部署、配置管理及故障处理能力</li>\n<li>核心技术能力：熟练掌握 Kafka 、ClickHouse 、Postgres 、Redis 、Mongo 的底层原理、架构设计与实战应用，具备多个项目的开发与运维经验，能独立解决复杂技术问题。</li>\n<li>系统运维能力：精通 Linux 操作系统，熟练进行服务器配置、资源调度、安全加固及监控体系搭建；熟悉 Prometheus 、Grafana 等监控工具的使用。</li>\n<li>后端开发能力：精通至少一种后端开发语言（如 Go 、JS ），具备良好的代码规范、模块化开发思维及单元测试能力，能高效实现业务需求。</li>\n<li>分布式系统经验：熟悉分布式系统、微服务架构设计，具备高并发、大数据场景下的系统设计、开发与性能优化经验，保障系统的可扩展性与稳定性。</li>\n</ol>\n<h3><strong>QA 工程师（侧重测试开发）</strong></h3>\n<p><strong>职位概述</strong></p>\n<p>我们正在寻找一位具备扎实测试开发能力的全能型质量保证工程师，加入我们精干的敏捷团队。您将全面负责数据产品的端到端测试，同时主导自动化测试框架的开发，以提升整个技术栈的测试效率、覆盖率和可靠性。</p>\n<p><strong>岗位职责</strong></p>\n<ul>\n<li>设计并执行针对 API 、数据准确性及前端组件的全面测试，确保端到端质量</li>\n<li>通过自动化检查验证大规模数据集的完整性和稳定性</li>\n<li>编写详细测试用例，并与开发工程师协作定位/隔离缺陷</li>\n<li>构建并维护面向 API 、UI 及数据层的自动化测试框架</li>\n<li>搭建 CI/CD 测试流水线（ Jenkins/GitHub Actions ），实现自动化触发</li>\n<li>开发内部测试工具（如数据生成器、批量验证器等）</li>\n</ul>\n<p><strong>任职要求</strong></p>\n<ul>\n<li>精通 API 测试工具（ Postman/JMeter ）及测试策略设计</li>\n<li>掌握高级 SQL 技能，能进行复杂数据验证与分析</li>\n<li>具备 Python 或 Java 编程能力，可开发测试自动化脚本</li>\n<li>拥有 Pytest/Selenium 或同类工具的框架搭建实战经验</li>\n<li>熟悉 CI/CD 集成与自动化测试结合</li>\n<li>能够为大数据工作流设计自动化验证方案</li>\n<li>出色的远程协作、问题解决和沟通能力</li>\n</ul>\n<p>联系方式：\nTG: @<a href=\"https://www.v2ex.com/member/Ryan_ie\">Ryan_ie</a></p>",
      "author": "sfyr111",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "ab60ad7cf59e",
      "blog_name": "V2EX酷工作",
      "title": "[广州-三七互娱-社招内推-技术最新汇总]AI 应用开发工程师、AIGC 算法工程师、高级/资深测试工程师、高级 AI 产品经理、 Java 全栈开发工程师（2 个 hc）、基础运维工程师、运维开发工程师、golang 后端开发、数据分析师",
      "link": "https://www.v2ex.com/t/1152761#reply1",
      "published": "2025-08-15T14:42:45+00:00",
      "timestamp": 1755268965,
      "summary": "AI 应用开发工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=54ba22c2-cd65-4f96-8818-e8cb9014912d&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=54ba22c2-cd65-4f96-8818-e8cb9014912d&amp;language=zh_CN</a><br><br>工作职责<br><br>负责三七互娱-37 手游 AIGC 应用开发与服务化工作，推动多模态生成能力在公司实际业务中的高效落地。持续参与视频生成、图片生成、音乐生成、AI Agent 等前沿技术在企业内外的实践与规模化应用。包括且不限于：<br>1. AIGC 平台系统开发：保障企业级模型服务的稳定性、安全性和可扩展性，包括但不限于模型/服务自动化部署、运行监控、弹性扩缩容、自动回滚、故障自愈、全链路可观测性和 SLA 管理等。<br>2. AIGC 多模态应用工作流的设计与开发：负责企业级多模态大模型工作流的设计与开发，包括流程自动化、工具链集成以及低/无代码应用平台的建设，助力业务智能化升级。<br>3. LLM 工作流编排与 Multi-agent 系统的设计与开发：构建 Multi-agent 协作系统，实现 agent 自治、分布式任务调度、任务拆解与动态规划等能力，支持复杂业务场景的自动化与智能决策。<br>任职资格<br><br>1. 本科及以上学历，计算机、电子、人工智能、数学等相关专业；<br>2. 具备扎实的计算机基础，深入理解操作系统、计算机网络、数据结构与算法等核心知识, 具备良好的编程习惯和规范；<br>3. 具备 2 年以上工程开发经验，精通 Python 编程，熟悉关系型数据库设计与优化，掌握 Docker 容器化技术及 CI/CD 流程，具备全栈开发经验者优先。<br>4. 优秀的分析问题、解决问题的能力，强烈的上进心和求知欲，较强的学习能力和沟通能力，富有团队协作精神。<br><br>==========================================================<br><br>AIGC 算法工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=e45f48aa-fa83-4740-97eb-98f97e2b9a23&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=e45f48aa-fa83-4740-97eb-98f97e2b9a23&amp;language=zh_CN</a><br><br>工作职责<br><br>1. 主导多模态生成算法（图像 / 视频 / 3D 等）的设计与优化，聚焦生成质量提升、多样性拓展、可控性强化及可编辑功能实现，攻克技术瓶颈；<br>2. 深度结合游戏研发与发行业务需求，提供通用性技术框架或定制化算法方案，解决 AIGC 在实际落地中的适配性、效率及效果问题，推动技术转化；<br>3. 密切追踪多模态与 Generative AI 领域前沿动态（如模型架构、训练策略等），结合业务痛点设计创新性算法路径，保持技术竞争力。<br>任职资格<br><br>1.计算机科学、人工智能、机器学习等相关专业本科及以上学历，具备扎实的数学基础（如概率论、线性代数）和计算机理论知识；<br>2.熟练运用至少一种主流深度学习框架（ TensorFlow/PyTorch/PaddlePaddle 等）；<br>3.精通计算机视觉（ CV ）核心算法，深入理解图像生成式模型原理（如 GAN 、Diffusion Models 、Autoregressive Models ），熟悉 ControlNet 、Ip-Adapter 等微调及控制策略；<br>4.拥有 AIGC 领域深度实践经验，如参与过图像 / 视频 / 3D 生成相关项目，能独立解决实际研发中的技术难题；<br>5.具备快速学习能力、清晰逻辑思维及高效沟通表达能力，能精准理解业务需求并转化为技术方案；<br>6.在 CVPR/ICCV/ECCV/SIGGRAPH 等顶会发表过相关论文、主导或核心参与过优秀开源项目、在高水平算法竞赛中获奖者优先。<br><br>===========================================================<br><br>高级/资深测试工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=7ba4bcef-077a-41d7-826b-aa0218c4da2c&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=7ba4bcef-077a-41d7-826b-aa0218c4da2c&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、主导测试策略与计划制定： 深入分析项目需求、架构设计和技术方案，识别潜在风险与质量瓶颈，主导制定端到端、跨系统的高阶测试策略和测试计划，确保覆盖业务场景、技术风险及非功能性需求；<br>2 、领导测试执行：主导关键路径、核心模块及高复杂度特性的测试执行（手动/自动化）；<br>3 、驱动测试技术创新与效能提升：主导测试工具、框架（包括 AI 在测试中的应用）的选型、设计、开发或引入业界先进的测试技术、工具和最佳实践，解决团队效能瓶颈；<br>4 、主导线上质量保障与复杂问题攻关：主导重大版本上线、复杂生产变更的质量保障方案制定与执行，高效定位、分析并推动解决线上复杂、疑难问题；<br>5 、与团队成员分享测试经验和最佳实践，促进持续改进；<br>8 、完成上级交办其他事项，积极配合数字化产研测团队内外部的工作。<br>任职资格<br><br>1 、5-10 年的软件测试相关工作经验，游戏行业优先；<br>2 、熟悉软件测试理论、测试流程、测试类型、测试方法；<br>3 、精通测试需求评审与分析、能制定测试计划、测试方案及测试用例的设计；<br>4 、熟悉项目管理流程，能在过程中把控好项目进度，保证项目按时按质上线，能高效通过测试数据定位性能瓶颈或设计缺陷；<br>5 、有较强的领导力和协调能力，能进行良好的跨部门沟通，辅助指导团队成员测试工作。<br><br>========================================================<br><br>高级 AI 产品经理<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=610bb946-c76b-42ec-bb4f-438efea41740&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=610bb946-c76b-42ec-bb4f-438efea41740&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责 AI 中台产品及游戏运营相关业务 AI 场景挖掘和应用落地，包括用户调研、竞品分析、AI 技术可行性评估、产品规划、产品设计、项目管理、数据分析等；<br>2 、对产品体验、AI 效果、产品价值负责，通过深入了解公司业务和算法技术，持续推动产品迭代；<br>3 、负责对接各事业线接口人、前后端开发、算法工程师等各方人员，整合资源，进行产品实施及项目跟进，确保项目高效高质完成。<br>任职资格<br><br>1 、本科及以上学历，3-5 年互联网产品或 AI 产品工作经验，熟练掌握 AI 产品相关知识和技能，熟悉 AI 技术原理（如深度学习、NLP 、CV 等），能与算法团队高效沟通技术方案；<br>2 、具有较强的自主学习能力，深度了解 AI 技术和市场 AI 产品，探索技术边界并转化为可落地的产品功能；<br>3 、具有较强逻辑思维和分析能力，对数据敏感度高；<br>4 、善于沟通与跨部门协作，具备强有力的工作执行力和推动力；<br>5 、抗压能力强，对工作有责任心，能积极主动完成工作，有较强的团队协作能力和良好的服务精神。<br><br>================================================<br><br>Java 全栈开发工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=9f98e060-3c08-43b5-8559-5c9aacb5b297&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=9f98e060-3c08-43b5-8559-5c9aacb5b297&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责公司业务/研效/OA 等系统的开发及维护工作，对内部系统产品不断完善并优化，提升产品的稳定性；<br>2 、参与探索大模型的技术，并且在系统中落地，提升企业的生产效率；<br>3 、负责开发文档编写的规范与落地，沉淀可复用的基础能力，并完成高质量的代码实现和单元测试。<br>任职资格<br><br>1 、本科及以上学历，2 年及以上 Java 开发经验，掌握主流 Java 框架 SpringBoot 开发等；<br>2 、熟悉 Vue3 前端技术栈，有前后端项目开发经验，熟悉 Mysql 、Redis 、消息队列等常用组件的使用与调优；<br>3 、具备代码重构设计能力，熟悉设计模式者优先；<br>4 、责任心强，抗压能力强，具有良好的团队沟通与部门协作能力，热爱追求前沿 Web 技术或有 AI 应用知识储备优先。<br>==============================================<br><br>Java 全栈开发工程师（业务）<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=a24973ca-3534-418a-8418-c92669b245cd&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=a24973ca-3534-418a-8418-c92669b245cd&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责公司游戏运营平台的开发及维护工作，对内部系统产品不断完善并优化，提升产品的稳定性。<br>2 、负责开发文档编写的规范与落地，沉淀可复用的基础能力，并完成高质量的代码实现和单元测试。<br>任职资格<br><br>1 、本科及以上学历，3 年及以上 Java 开发经验，掌握主流 Java 框架 Spring 开发、微服务开发等，了解使用 k8s 、docker 等容器技术；<br>2 、熟悉 Vue3 前端技术栈，有前后端项目开发经验，熟悉 Mysql 、Mongo 、Redis 、消息队列等常用组件的使用与调优；<br>3 、了解 Python 、Nodejs 者优先；<br>4 、责任心强，抗压能力强，具有良好的团队沟通与部门协作能力，热爱追求前沿 Web 技术或有 AI 应用知识储备优先。<br>==================================================<br><br>基础运维工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=63f5a43d-6d00-4445-b32d-eabde2f19c4f&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=63f5a43d-6d00-4445-b32d-eabde2f19c4f&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责运维基础资源管理工作，包括 Linux 系统管理、监控排障、云资源规划和管理等；<br>2 、负责 WEB 业务运维工作，包括 web 应用程序部署对接，组件资源选型等；<br>3 、负责监控系统管理，维护现有监控系统，参与新监控需求的建设和开发等。<br>任职资格<br><br>1 、本科及以上学历，熟练掌握 Linux 操作系统管理及性能调优，掌握 Shell/AWK 等系统诊断工具；<br>2 、掌握计算机网络技术，熟悉 TCP/IP 、HTTP 协议，掌握 Nginx/Lvs/iptables 使用 ；<br>3 、熟练使用 Python/Go 开发运维工具，有 API 服务开发实践经验；<br>4 、熟练掌握 CI/CD 自动化管理技术，掌握 ansible 等自动化工具；<br>5 、掌握 Kubernetes 容器系统管理，有云资源规划和管理经验，熟悉云原生技术和 DevOps ；<br>6 、掌握 Prometheus/Zabbix 等监控工具使用。<br><br>========================================================<br><br>运维开发工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=1beac56c-213c-4547-8bb6-178ee14ad64e&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=1beac56c-213c-4547-8bb6-178ee14ad64e&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责运维自动化体系建设，包含：分布式监控系统、CMDB 、作业系统、日志系统等；<br>2 、负责自动化运维工具开发，提高运维、开发协作效率，规范操作流程；<br>3 、负责发布和变更相关管理系统开发；<br>4 、负责新技术研究，技术文档编写及推广。<br>任职资格<br><br>1 、本科及以上学历，计算机相关专业，有 3 年以上的运维开发相关工作经验；<br>2 、熟练掌握至少一种后端开发语言，如：Python ，Golang ，有优秀的编码能力。熟悉协程、多线程、多进程编程。对网络编程有一定的了解，有实际业务开发经验更佳。熟悉常用数据库比如：Mysql 、MongoDB ；<br>3 、熟悉前端开发语言 javascript ，了解前端开发框架 vue 、react 等，能够独立完成前后端分离项目的开发；<br>4 、善于从问题出发，对新技术、中间件有较好的敏感度，快速利用到业务中解决问题；<br>5 、对自动化运维体系有一定的统筹、架构能力，有实际项目落地经验。<br><br>================================================<br><br>golang 后端开发工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=5889324d-5f5b-45b2-89ec-d21659afc840&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=5889324d-5f5b-45b2-89ec-d21659afc840&amp;language=zh_CN</a><br><br>工作职责<br><br>1. 主导平台增长业务系统的开发与优化，包括但不限于：私域运营管理中台、用户增长与活动系统、触达与用户召回平台；<br>2. 负责系统架构设计、性能优化和技术升级，确保系统高可用性、可扩展性和安全性；<br>任职资格<br><br>1. 5 年及以上服务端开发经验，精通 Golang 语言特性及生态系统；<br>2. 深入理解分布式系统架构，熟练掌握 MySQL 、Redis 、Kafka 等中间件的应用与调优；<br>3. 熟悉 Kubernetes 集群运行原理，具备微服务架构设计与治理经验；<br>4. 个人素质要求：<br>\t对技术有浓厚兴趣，具有持续学习精神；<br>\t良好的问题分析与解决能力；<br>\t优秀的团队协作与沟通能力；\t<br>5. 加分项：<br>\t有支付系统或用户增长平台开发经验；<br>\t有电商或游戏平台核心系统开发经验；<br>\t有带领大型项目经验（项目负责人职责）。<br><br>============================================================<br><br>数据分析师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=9a010c28-c09d-4ea8-b3d9-7ad09835ff45&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=9a010c28-c09d-4ea8-b3d9-7ad09835ff45&amp;language=zh_CN</a><br><br>工作职责<br><br>1.规划游戏分析重点，并独立完成数据分析相关工作，形成明确的结论及建议；<br>2.覆盖产品上线全周期，设计基础日志和业务指标体系，完成从日志采集到中间表再到报表/看板的搭建工作；<br>3.定期规划的某些游戏品类的深度分析报告，为项目组战略决策提供依据；<br>4.了解并熟悉 AI 的发展，协同数据中台产品经理，依赖 AI 设计和规划分析类产品和工具，为业务分析赋能，为流程化工具提效；<br>5.承接运营业务中台数据相关的工作流及场景化分析沉淀，对游戏中可能存在的数据异常进行及时预警，为项目组提供归因分析及应对策略；<br>任职资格<br><br>1.本科以上学历，数据、统计学、计算机、经济学等相关专业优先；<br>2.三年以上游戏数据分析经验，在市场分析、用户运营、活动运营等领域有一定的经验；<br>3.掌握统计分析方法（相关分析、线性和逻辑回归、决策树等），能够熟悉使用 SQL 语句；<br>4.有很强的责任心和主观能动性，良好的学习能力和沟通能力、项目推动能力；<br>5.热爱玩游戏，对游戏有一定的理解。",
      "content": "AI 应用开发工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=54ba22c2-cd65-4f96-8818-e8cb9014912d&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=54ba22c2-cd65-4f96-8818-e8cb9014912d&amp;language=zh_CN</a><br><br>工作职责<br><br>负责三七互娱-37 手游 AIGC 应用开发与服务化工作，推动多模态生成能力在公司实际业务中的高效落地。持续参与视频生成、图片生成、音乐生成、AI Agent 等前沿技术在企业内外的实践与规模化应用。包括且不限于：<br>1. AIGC 平台系统开发：保障企业级模型服务的稳定性、安全性和可扩展性，包括但不限于模型/服务自动化部署、运行监控、弹性扩缩容、自动回滚、故障自愈、全链路可观测性和 SLA 管理等。<br>2. AIGC 多模态应用工作流的设计与开发：负责企业级多模态大模型工作流的设计与开发，包括流程自动化、工具链集成以及低/无代码应用平台的建设，助力业务智能化升级。<br>3. LLM 工作流编排与 Multi-agent 系统的设计与开发：构建 Multi-agent 协作系统，实现 agent 自治、分布式任务调度、任务拆解与动态规划等能力，支持复杂业务场景的自动化与智能决策。<br>任职资格<br><br>1. 本科及以上学历，计算机、电子、人工智能、数学等相关专业；<br>2. 具备扎实的计算机基础，深入理解操作系统、计算机网络、数据结构与算法等核心知识, 具备良好的编程习惯和规范；<br>3. 具备 2 年以上工程开发经验，精通 Python 编程，熟悉关系型数据库设计与优化，掌握 Docker 容器化技术及 CI/CD 流程，具备全栈开发经验者优先。<br>4. 优秀的分析问题、解决问题的能力，强烈的上进心和求知欲，较强的学习能力和沟通能力，富有团队协作精神。<br><br>==========================================================<br><br>AIGC 算法工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=e45f48aa-fa83-4740-97eb-98f97e2b9a23&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=e45f48aa-fa83-4740-97eb-98f97e2b9a23&amp;language=zh_CN</a><br><br>工作职责<br><br>1. 主导多模态生成算法（图像 / 视频 / 3D 等）的设计与优化，聚焦生成质量提升、多样性拓展、可控性强化及可编辑功能实现，攻克技术瓶颈；<br>2. 深度结合游戏研发与发行业务需求，提供通用性技术框架或定制化算法方案，解决 AIGC 在实际落地中的适配性、效率及效果问题，推动技术转化；<br>3. 密切追踪多模态与 Generative AI 领域前沿动态（如模型架构、训练策略等），结合业务痛点设计创新性算法路径，保持技术竞争力。<br>任职资格<br><br>1.计算机科学、人工智能、机器学习等相关专业本科及以上学历，具备扎实的数学基础（如概率论、线性代数）和计算机理论知识；<br>2.熟练运用至少一种主流深度学习框架（ TensorFlow/PyTorch/PaddlePaddle 等）；<br>3.精通计算机视觉（ CV ）核心算法，深入理解图像生成式模型原理（如 GAN 、Diffusion Models 、Autoregressive Models ），熟悉 ControlNet 、Ip-Adapter 等微调及控制策略；<br>4.拥有 AIGC 领域深度实践经验，如参与过图像 / 视频 / 3D 生成相关项目，能独立解决实际研发中的技术难题；<br>5.具备快速学习能力、清晰逻辑思维及高效沟通表达能力，能精准理解业务需求并转化为技术方案；<br>6.在 CVPR/ICCV/ECCV/SIGGRAPH 等顶会发表过相关论文、主导或核心参与过优秀开源项目、在高水平算法竞赛中获奖者优先。<br><br>===========================================================<br><br>高级/资深测试工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=7ba4bcef-077a-41d7-826b-aa0218c4da2c&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=7ba4bcef-077a-41d7-826b-aa0218c4da2c&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、主导测试策略与计划制定： 深入分析项目需求、架构设计和技术方案，识别潜在风险与质量瓶颈，主导制定端到端、跨系统的高阶测试策略和测试计划，确保覆盖业务场景、技术风险及非功能性需求；<br>2 、领导测试执行：主导关键路径、核心模块及高复杂度特性的测试执行（手动/自动化）；<br>3 、驱动测试技术创新与效能提升：主导测试工具、框架（包括 AI 在测试中的应用）的选型、设计、开发或引入业界先进的测试技术、工具和最佳实践，解决团队效能瓶颈；<br>4 、主导线上质量保障与复杂问题攻关：主导重大版本上线、复杂生产变更的质量保障方案制定与执行，高效定位、分析并推动解决线上复杂、疑难问题；<br>5 、与团队成员分享测试经验和最佳实践，促进持续改进；<br>8 、完成上级交办其他事项，积极配合数字化产研测团队内外部的工作。<br>任职资格<br><br>1 、5-10 年的软件测试相关工作经验，游戏行业优先；<br>2 、熟悉软件测试理论、测试流程、测试类型、测试方法；<br>3 、精通测试需求评审与分析、能制定测试计划、测试方案及测试用例的设计；<br>4 、熟悉项目管理流程，能在过程中把控好项目进度，保证项目按时按质上线，能高效通过测试数据定位性能瓶颈或设计缺陷；<br>5 、有较强的领导力和协调能力，能进行良好的跨部门沟通，辅助指导团队成员测试工作。<br><br>========================================================<br><br>高级 AI 产品经理<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=610bb946-c76b-42ec-bb4f-438efea41740&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=610bb946-c76b-42ec-bb4f-438efea41740&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责 AI 中台产品及游戏运营相关业务 AI 场景挖掘和应用落地，包括用户调研、竞品分析、AI 技术可行性评估、产品规划、产品设计、项目管理、数据分析等；<br>2 、对产品体验、AI 效果、产品价值负责，通过深入了解公司业务和算法技术，持续推动产品迭代；<br>3 、负责对接各事业线接口人、前后端开发、算法工程师等各方人员，整合资源，进行产品实施及项目跟进，确保项目高效高质完成。<br>任职资格<br><br>1 、本科及以上学历，3-5 年互联网产品或 AI 产品工作经验，熟练掌握 AI 产品相关知识和技能，熟悉 AI 技术原理（如深度学习、NLP 、CV 等），能与算法团队高效沟通技术方案；<br>2 、具有较强的自主学习能力，深度了解 AI 技术和市场 AI 产品，探索技术边界并转化为可落地的产品功能；<br>3 、具有较强逻辑思维和分析能力，对数据敏感度高；<br>4 、善于沟通与跨部门协作，具备强有力的工作执行力和推动力；<br>5 、抗压能力强，对工作有责任心，能积极主动完成工作，有较强的团队协作能力和良好的服务精神。<br><br>================================================<br><br>Java 全栈开发工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=9f98e060-3c08-43b5-8559-5c9aacb5b297&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=9f98e060-3c08-43b5-8559-5c9aacb5b297&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责公司业务/研效/OA 等系统的开发及维护工作，对内部系统产品不断完善并优化，提升产品的稳定性；<br>2 、参与探索大模型的技术，并且在系统中落地，提升企业的生产效率；<br>3 、负责开发文档编写的规范与落地，沉淀可复用的基础能力，并完成高质量的代码实现和单元测试。<br>任职资格<br><br>1 、本科及以上学历，2 年及以上 Java 开发经验，掌握主流 Java 框架 SpringBoot 开发等；<br>2 、熟悉 Vue3 前端技术栈，有前后端项目开发经验，熟悉 Mysql 、Redis 、消息队列等常用组件的使用与调优；<br>3 、具备代码重构设计能力，熟悉设计模式者优先；<br>4 、责任心强，抗压能力强，具有良好的团队沟通与部门协作能力，热爱追求前沿 Web 技术或有 AI 应用知识储备优先。<br>==============================================<br><br>Java 全栈开发工程师（业务）<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=a24973ca-3534-418a-8418-c92669b245cd&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=a24973ca-3534-418a-8418-c92669b245cd&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责公司游戏运营平台的开发及维护工作，对内部系统产品不断完善并优化，提升产品的稳定性。<br>2 、负责开发文档编写的规范与落地，沉淀可复用的基础能力，并完成高质量的代码实现和单元测试。<br>任职资格<br><br>1 、本科及以上学历，3 年及以上 Java 开发经验，掌握主流 Java 框架 Spring 开发、微服务开发等，了解使用 k8s 、docker 等容器技术；<br>2 、熟悉 Vue3 前端技术栈，有前后端项目开发经验，熟悉 Mysql 、Mongo 、Redis 、消息队列等常用组件的使用与调优；<br>3 、了解 Python 、Nodejs 者优先；<br>4 、责任心强，抗压能力强，具有良好的团队沟通与部门协作能力，热爱追求前沿 Web 技术或有 AI 应用知识储备优先。<br>==================================================<br><br>基础运维工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=63f5a43d-6d00-4445-b32d-eabde2f19c4f&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=63f5a43d-6d00-4445-b32d-eabde2f19c4f&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责运维基础资源管理工作，包括 Linux 系统管理、监控排障、云资源规划和管理等；<br>2 、负责 WEB 业务运维工作，包括 web 应用程序部署对接，组件资源选型等；<br>3 、负责监控系统管理，维护现有监控系统，参与新监控需求的建设和开发等。<br>任职资格<br><br>1 、本科及以上学历，熟练掌握 Linux 操作系统管理及性能调优，掌握 Shell/AWK 等系统诊断工具；<br>2 、掌握计算机网络技术，熟悉 TCP/IP 、HTTP 协议，掌握 Nginx/Lvs/iptables 使用 ；<br>3 、熟练使用 Python/Go 开发运维工具，有 API 服务开发实践经验；<br>4 、熟练掌握 CI/CD 自动化管理技术，掌握 ansible 等自动化工具；<br>5 、掌握 Kubernetes 容器系统管理，有云资源规划和管理经验，熟悉云原生技术和 DevOps ；<br>6 、掌握 Prometheus/Zabbix 等监控工具使用。<br><br>========================================================<br><br>运维开发工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=1beac56c-213c-4547-8bb6-178ee14ad64e&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=1beac56c-213c-4547-8bb6-178ee14ad64e&amp;language=zh_CN</a><br><br>工作职责<br><br>1 、负责运维自动化体系建设，包含：分布式监控系统、CMDB 、作业系统、日志系统等；<br>2 、负责自动化运维工具开发，提高运维、开发协作效率，规范操作流程；<br>3 、负责发布和变更相关管理系统开发；<br>4 、负责新技术研究，技术文档编写及推广。<br>任职资格<br><br>1 、本科及以上学历，计算机相关专业，有 3 年以上的运维开发相关工作经验；<br>2 、熟练掌握至少一种后端开发语言，如：Python ，Golang ，有优秀的编码能力。熟悉协程、多线程、多进程编程。对网络编程有一定的了解，有实际业务开发经验更佳。熟悉常用数据库比如：Mysql 、MongoDB ；<br>3 、熟悉前端开发语言 javascript ，了解前端开发框架 vue 、react 等，能够独立完成前后端分离项目的开发；<br>4 、善于从问题出发，对新技术、中间件有较好的敏感度，快速利用到业务中解决问题；<br>5 、对自动化运维体系有一定的统筹、架构能力，有实际项目落地经验。<br><br>================================================<br><br>golang 后端开发工程师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=5889324d-5f5b-45b2-89ec-d21659afc840&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=5889324d-5f5b-45b2-89ec-d21659afc840&amp;language=zh_CN</a><br><br>工作职责<br><br>1. 主导平台增长业务系统的开发与优化，包括但不限于：私域运营管理中台、用户增长与活动系统、触达与用户召回平台；<br>2. 负责系统架构设计、性能优化和技术升级，确保系统高可用性、可扩展性和安全性；<br>任职资格<br><br>1. 5 年及以上服务端开发经验，精通 Golang 语言特性及生态系统；<br>2. 深入理解分布式系统架构，熟练掌握 MySQL 、Redis 、Kafka 等中间件的应用与调优；<br>3. 熟悉 Kubernetes 集群运行原理，具备微服务架构设计与治理经验；<br>4. 个人素质要求：<br>\t对技术有浓厚兴趣，具有持续学习精神；<br>\t良好的问题分析与解决能力；<br>\t优秀的团队协作与沟通能力；\t<br>5. 加分项：<br>\t有支付系统或用户增长平台开发经验；<br>\t有电商或游戏平台核心系统开发经验；<br>\t有带领大型项目经验（项目负责人职责）。<br><br>============================================================<br><br>数据分析师<br><br>链接： <a href=\"https://neitui.italent.cn/37wan/sharejobs/detail?shareId=9a010c28-c09d-4ea8-b3d9-7ad09835ff45&amp;language=zh_CN\" target=\"_blank\">https://neitui.italent.cn/37wan/sharejobs/detail?shareId=9a010c28-c09d-4ea8-b3d9-7ad09835ff45&amp;language=zh_CN</a><br><br>工作职责<br><br>1.规划游戏分析重点，并独立完成数据分析相关工作，形成明确的结论及建议；<br>2.覆盖产品上线全周期，设计基础日志和业务指标体系，完成从日志采集到中间表再到报表/看板的搭建工作；<br>3.定期规划的某些游戏品类的深度分析报告，为项目组战略决策提供依据；<br>4.了解并熟悉 AI 的发展，协同数据中台产品经理，依赖 AI 设计和规划分析类产品和工具，为业务分析赋能，为流程化工具提效；<br>5.承接运营业务中台数据相关的工作流及场景化分析沉淀，对游戏中可能存在的数据异常进行及时预警，为项目组提供归因分析及应对策略；<br>任职资格<br><br>1.本科以上学历，数据、统计学、计算机、经济学等相关专业优先；<br>2.三年以上游戏数据分析经验，在市场分析、用户运营、活动运营等领域有一定的经验；<br>3.掌握统计分析方法（相关分析、线性和逻辑回归、决策树等），能够熟悉使用 SQL 语句；<br>4.有很强的责任心和主观能动性，良好的学习能力和沟通能力、项目推动能力；<br>5.热爱玩游戏，对游戏有一定的理解。",
      "author": "yadoT",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "87d1a21365bd",
      "blog_name": "V2EX技术专区",
      "title": "有没有 MacBook Air 品质的 Linux 笔记本？",
      "link": "https://www.v2ex.com/t/1152760#reply44",
      "published": "2025-08-15T14:37:11+00:00",
      "timestamp": 1755268631,
      "summary": "可以自己加大内存，无风扇设计。",
      "content": "可以自己加大内存，无风扇设计。",
      "author": "idblife",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "a438a3f06dd4",
      "blog_name": "V2EX技术专区",
      "title": "现在搞一个产品官网, 要支持 i18n, 方便 seo 等, 用什么技术栈比较好",
      "link": "https://www.v2ex.com/t/1152755#reply13",
      "published": "2025-08-15T13:45:55+00:00",
      "timestamp": 1755265555,
      "summary": "<p>定好技术栈就让 ai 开搞阿</p>\n<p>大家分享下好的方案阿</p>\n<p>或者有什么现成的 github 仓库可以直接改改完事</p>",
      "content": "<p>定好技术栈就让 ai 开搞阿</p>\n<p>大家分享下好的方案阿</p>\n<p>或者有什么现成的 github 仓库可以直接改改完事</p>",
      "author": "iorilu",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "3f0b8e9e4d38",
      "blog_name": "V2EX技术专区",
      "title": "Windsurf 被收购后, 第一波牛逼功能来了: 集成 Deepwiki 🔥🔥🔥",
      "link": "https://www.v2ex.com/t/1152754#reply7",
      "published": "2025-08-15T13:45:47+00:00",
      "timestamp": 1755265547,
      "summary": "<img alt=\"windsurf\" class=\"embedded_image\" src=\"https://codesmithy.sol.build/C4E429E0-5720-4AA8-BA3E-D2ABE3BCB7B2/windsurf.png\">\n<ol>\n<li>稳定性与性能：修复了 100 多个错误并提升了可靠性。</li>\n<li>Windsurf 中的 DeepWiki：将鼠标悬停在代码符号上，即可查看由 DeepWiki 提供的智能文档。</li>\n<li>Vibe and Replace：AI 驱动的查找与替换功能，可对多处代码匹配项进行智能转换。</li>\n<li>Cascade Agent 改进：自动规划模式，无需手动切换；工具全面升级，编辑更精准；结合长上下文模型增强代码探索能力。</li>\n<li>Tab 自动补全：全新的自动补全系统，提供更频繁、更智能的建议。</li>\n<li>UI 重新设计：全新的聊天、Cascade ，以及首页面板。</li>\n<li>开发容器：通过远程 SSH 访问支持开发容器。</li>\n</ol>\n<p>我最喜欢的还是内置了 Deepwiki 功能, 鼠标悬停到代码上, 点 Read More 就可以看到详细的代码说明和例子, 比我自己写的都要详细, 以后代码注释都不用写了.</p>",
      "content": "<img alt=\"windsurf\" class=\"embedded_image\" src=\"https://codesmithy.sol.build/C4E429E0-5720-4AA8-BA3E-D2ABE3BCB7B2/windsurf.png\">\n<ol>\n<li>稳定性与性能：修复了 100 多个错误并提升了可靠性。</li>\n<li>Windsurf 中的 DeepWiki：将鼠标悬停在代码符号上，即可查看由 DeepWiki 提供的智能文档。</li>\n<li>Vibe and Replace：AI 驱动的查找与替换功能，可对多处代码匹配项进行智能转换。</li>\n<li>Cascade Agent 改进：自动规划模式，无需手动切换；工具全面升级，编辑更精准；结合长上下文模型增强代码探索能力。</li>\n<li>Tab 自动补全：全新的自动补全系统，提供更频繁、更智能的建议。</li>\n<li>UI 重新设计：全新的聊天、Cascade ，以及首页面板。</li>\n<li>开发容器：通过远程 SSH 访问支持开发容器。</li>\n</ol>\n<p>我最喜欢的还是内置了 Deepwiki 功能, 鼠标悬停到代码上, 点 Read More 就可以看到详细的代码说明和例子, 比我自己写的都要详细, 以后代码注释都不用写了.</p>",
      "author": "terryso",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "5efa90b80704",
      "blog_name": "V2EX技术专区",
      "title": "前端页面支持多语言 I8N 改造当前项目好费劲",
      "link": "https://www.v2ex.com/t/1152739#reply10",
      "published": "2025-08-15T11:43:44+00:00",
      "timestamp": 1755258224,
      "summary": "当前是先开发的中文版本 web 项目，页面数量挺多的，50 来个 VUE 页面。现在想支持英语，发现从头改造一遍好费劲。每个页面都得调整。<br><br>想了解下大家开发阶段是怎么做的？新开的项目的时候就支持还是说像我这样先国内版本后国外版本去支持呢？",
      "content": "当前是先开发的中文版本 web 项目，页面数量挺多的，50 来个 VUE 页面。现在想支持英语，发现从头改造一遍好费劲。每个页面都得调整。<br><br>想了解下大家开发阶段是怎么做的？新开的项目的时候就支持还是说像我这样先国内版本后国外版本去支持呢？",
      "author": "ljlljl0",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "45d88aaadd7f",
      "blog_name": "V2EX技术专区",
      "title": "使用 wireguard 转发跳板机上的 socks 代理，闲置 10~12 秒的 TCP 连接总是会自动关闭，怎么排查是什么原因？（客户端、服务器均在美国）",
      "link": "https://www.v2ex.com/t/1152733#reply4",
      "published": "2025-08-15T11:07:48+00:00",
      "timestamp": 1755256068,
      "summary": "<p>因为我不止一台设备要连这台跳板机，为了方便统一管理（调整服务器 IP 等），我在 NAS 上用了 socat 来进行流量转发。\nwireguard 流量途径是 客户端&lt;-&gt;NAS&lt;-&gt;家用路由器&lt;-&gt;服务器\n服务器上有一个 socks5 服务端，客户端用 wg 隧道 IP 连到这个 socks</p>\n<p>服务器: wireguard 默认配置</p>\n<p>家用路由器：已检查 </p>\n<pre><code>net.netfilter.nf_conntrack_udp_timeout = 30\nnet.netfilter.nf_conntrack_udp_timeout_stream = 120\n</code></pre>\n<p>NAS （ sourceport 用于 stateless 防火墙 drop 和此隧道无关的 UDP 数据包）：</p>\n<pre><code>socat -t34 -T34 UDP4-LISTEN:64444,reuseaddr,fork UDP:ServerIP:64443,sourceport=64445\n</code></pre>\n<p>客户端：</p>\n<pre><code>EndPoint = NASIP:64444\n\nPersistentKeepalive = 6\n</code></pre>\n<p>现在的问题是通过此 socks 代理建立的闲置 10~12 秒的 TCP 连接总是会自动关闭，不知道怎么排查哪里的问题。</p>",
      "content": "<p>因为我不止一台设备要连这台跳板机，为了方便统一管理（调整服务器 IP 等），我在 NAS 上用了 socat 来进行流量转发。\nwireguard 流量途径是 客户端&lt;-&gt;NAS&lt;-&gt;家用路由器&lt;-&gt;服务器\n服务器上有一个 socks5 服务端，客户端用 wg 隧道 IP 连到这个 socks</p>\n<p>服务器: wireguard 默认配置</p>\n<p>家用路由器：已检查 </p>\n<pre><code>net.netfilter.nf_conntrack_udp_timeout = 30\nnet.netfilter.nf_conntrack_udp_timeout_stream = 120\n</code></pre>\n<p>NAS （ sourceport 用于 stateless 防火墙 drop 和此隧道无关的 UDP 数据包）：</p>\n<pre><code>socat -t34 -T34 UDP4-LISTEN:64444,reuseaddr,fork UDP:ServerIP:64443,sourceport=64445\n</code></pre>\n<p>客户端：</p>\n<pre><code>EndPoint = NASIP:64444\n\nPersistentKeepalive = 6\n</code></pre>\n<p>现在的问题是通过此 socks 代理建立的闲置 10~12 秒的 TCP 连接总是会自动关闭，不知道怎么排查哪里的问题。</p>",
      "author": "drymonfidelia",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "9def087706f9",
      "blog_name": "V2EX技术专区",
      "title": "请教个问题，现在安卓 APP， webview 还需要接 x5 内核吗",
      "link": "https://www.v2ex.com/t/1152702#reply3",
      "published": "2025-08-15T09:02:41+00:00",
      "timestamp": 1755248561,
      "summary": "<p>主国内业务，使用 flutter 做双端 app ，很多业务节点需要嵌套 H5 的页面。</p>\n<p>计划 webview 使用<a href=\"https://pub.dev/packages/flutter_inappwebview\">flutter_inappwebview</a> 对接 H5 ，内核应该就是系统内置 webview 的版本了，2025 年了😂，还有没有必要再接入 x5 呢？</p>",
      "content": "<p>主国内业务，使用 flutter 做双端 app ，很多业务节点需要嵌套 H5 的页面。</p>\n<p>计划 webview 使用<a href=\"https://pub.dev/packages/flutter_inappwebview\">flutter_inappwebview</a> 对接 H5 ，内核应该就是系统内置 webview 的版本了，2025 年了😂，还有没有必要再接入 x5 呢？</p>",
      "author": "justwe7",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "84a5d70e1999",
      "blog_name": "V2EX技术专区",
      "title": "请教关于大模型 token 消耗的疑问，感觉随便一个任务就能消耗百万 token",
      "link": "https://www.v2ex.com/t/1152698#reply11",
      "published": "2025-08-15T08:52:24+00:00",
      "timestamp": 1755247944,
      "summary": "最近在用一些国产大模型 API ，感觉效果比 trae 官方的效果好很多，又快又好。所以是不是 trae 一些官方接入的模型，上下文被严重压缩了，以至于用起来降智特别严重。<br><br>另一个问题是，它的思考过程，是不是有可能会把整个项目文档作为输入去思考，所以一个问题直接消耗百万 token ？",
      "content": "最近在用一些国产大模型 API ，感觉效果比 trae 官方的效果好很多，又快又好。所以是不是 trae 一些官方接入的模型，上下文被严重压缩了，以至于用起来降智特别严重。<br><br>另一个问题是，它的思考过程，是不是有可能会把整个项目文档作为输入去思考，所以一个问题直接消耗百万 token ？",
      "author": "vincentqi",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "4c4e276d4462",
      "blog_name": "V2EX酷工作",
      "title": "做了 10 年乙方项目经理，甲方客户年年换，真的干不动了，又不知道前路如何，想和各位聊聊",
      "link": "https://www.v2ex.com/t/1152695#reply5",
      "published": "2025-08-15T08:48:20+00:00",
      "timestamp": 1755247700,
      "summary": "<p>做了 10 年乙方项目经理，甲方客户年年换，开始还在大厂，疫情期被裁后只能进入外包序列，虽然薪资没怎么降，福利待遇差了很多。但总归没有那么多勾心斗角，也没有太多向上的追求，索性随遇而安。今天清理旧电脑设备，才发现已经做了 10 年的项目经理，加上刚从一个奇葩项目中被换下来，心力也有损。细想来不知道未来的路怎么规划了，一直这么浑浑噩噩的干下去？还是跳出舒适区去闯一闯？</p>",
      "content": "<p>做了 10 年乙方项目经理，甲方客户年年换，开始还在大厂，疫情期被裁后只能进入外包序列，虽然薪资没怎么降，福利待遇差了很多。但总归没有那么多勾心斗角，也没有太多向上的追求，索性随遇而安。今天清理旧电脑设备，才发现已经做了 10 年的项目经理，加上刚从一个奇葩项目中被换下来，心力也有损。细想来不知道未来的路怎么规划了，一直这么浑浑噩噩的干下去？还是跳出舒适区去闯一闯？</p>",
      "author": "bubblewang",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "722e3a93e5c9",
      "blog_name": "V2EX酷工作",
      "title": "[远程] 招 TypeScript 全栈(AI Agent 方向)×2 + 开源社区运营 ×1",
      "link": "https://www.v2ex.com/t/1152692#reply15",
      "published": "2025-08-15T08:43:25+00:00",
      "timestamp": 1755247405,
      "summary": "<h1>[远程招聘]  TypeScript 全栈（ AI Agent 方向）×2 + 开源社区运营 ×1</h1>\n<p>我们专注于 <strong>AI Gateway / MCP / AI Agent</strong> 等领域的开源与企业级解决方案，</p>\n<p><strong>工作环境提供各种 AI</strong></p>\n<p><strong>面试支持共享屏幕使用 AI 辅助</strong></p>\n<p>加分项：</p>\n<ul>\n<li>熟悉 <strong>OpenRouter</strong> / <strong>Lamini</strong> / <strong>Langdb</strong> / <strong>deepset</strong> </li>\n<li>熟悉 <strong>CometAPI</strong> / <strong>LiteLLM</strong> / <strong>Requesty</strong> / <strong>Eden AI</strong> </li>\n<li>具备上述平台的 <strong>商业模式</strong> 分析能力  </li>\n<li>具备相关 <strong>开发与集成经验</strong>（ API 调用、协议兼容、负载均衡、模型路由等）</li>\n</ul>\n\n\n<h2>目前开放以下岗位（长期远程）</h2>\n<h3>TypeScript 全栈工程师（ AI Agent 方向）×2</h3>\n<p><strong>工作内容：</strong></p>\n<ul>\n<li>参与相关开源项目的开发与维护</li>\n<li>负责现有代码的企业级支持与功能优化</li>\n<li>参与 AI Agent 相关功能的设计与实现</li>\n</ul>\n<p><strong>要求：</strong></p>\n<ul>\n<li>熟悉 <strong>TypeScript</strong>、React 、Node.js 全栈开发</li>\n<li>有 <strong>LangChain / LLM / SSE / Agent / MCP /OpenRouter</strong> 等相关开发经验优先</li>\n<li>有 AI Agent / AI 应用集成 相关经验优先</li>\n<li>良好的开源协作习惯（ PR 、Code Review 、Issue 管理）</li>\n<li><strong>工作时区</strong>：亚太时区优先</li>\n</ul>\n\n\n<h3>开源社区运营 ×1</h3>\n<p><strong>工作内容：</strong></p>\n<ul>\n<li>负责开源社区的日常运营（内容更新、用户答疑、活动策划）</li>\n<li>与开发团队协作，推动社区反馈到产品迭代</li>\n<li>扩大开源项目在国内外的影响力</li>\n</ul>\n<p><strong>要求：</strong></p>\n<ul>\n<li>有开源社区运营、技术布道或相关经验</li>\n<li>英语流利（有留学/纯英语工作环境 背景优先）</li>\n<li>熟悉 GitHub 开源生态和开发者社区文化</li>\n<li><strong>其他要求</strong>：需不定期参加 AI 相关 Meetup （英语听说非常重要）</li>\n<li><strong>工作时区</strong>：北美时区优先</li>\n</ul>\n\n\n<h2>其他信息</h2>\n<ul>\n<li><strong>工作性质</strong>：全职 / 远程  </li>\n<li><strong>签证情况</strong>：暂不提供工作签证  </li>\n<li><strong>薪酬</strong>：根据经验与能力匹配  </li>\n</ul>\n\n\n<h2>申请方式</h2>\n<p>请将 <strong>简历 + 过往作品（ Github 链接 / 相关社区运营案例）</strong> 发送至：  <code>c3VwcG9ydEBtdXhzby5jb20= </code> </p>\n<p>邮件标题注明：「应聘职位 + 姓名 + 时区」  </p>\n\n\n<p>公司官网： <code><a href=\"http://muxso.com\">muxso.com</a></code></p>\n<p>初创公司，欢迎加入我们 🚀</p>",
      "content": "<h1>[远程招聘]  TypeScript 全栈（ AI Agent 方向）×2 + 开源社区运营 ×1</h1>\n<p>我们专注于 <strong>AI Gateway / MCP / AI Agent</strong> 等领域的开源与企业级解决方案，</p>\n<p><strong>工作环境提供各种 AI</strong></p>\n<p><strong>面试支持共享屏幕使用 AI 辅助</strong></p>\n<p>加分项：</p>\n<ul>\n<li>熟悉 <strong>OpenRouter</strong> / <strong>Lamini</strong> / <strong>Langdb</strong> / <strong>deepset</strong> </li>\n<li>熟悉 <strong>CometAPI</strong> / <strong>LiteLLM</strong> / <strong>Requesty</strong> / <strong>Eden AI</strong> </li>\n<li>具备上述平台的 <strong>商业模式</strong> 分析能力  </li>\n<li>具备相关 <strong>开发与集成经验</strong>（ API 调用、协议兼容、负载均衡、模型路由等）</li>\n</ul>\n\n\n<h2>目前开放以下岗位（长期远程）</h2>\n<h3>TypeScript 全栈工程师（ AI Agent 方向）×2</h3>\n<p><strong>工作内容：</strong></p>\n<ul>\n<li>参与相关开源项目的开发与维护</li>\n<li>负责现有代码的企业级支持与功能优化</li>\n<li>参与 AI Agent 相关功能的设计与实现</li>\n</ul>\n<p><strong>要求：</strong></p>\n<ul>\n<li>熟悉 <strong>TypeScript</strong>、React 、Node.js 全栈开发</li>\n<li>有 <strong>LangChain / LLM / SSE / Agent / MCP /OpenRouter</strong> 等相关开发经验优先</li>\n<li>有 AI Agent / AI 应用集成 相关经验优先</li>\n<li>良好的开源协作习惯（ PR 、Code Review 、Issue 管理）</li>\n<li><strong>工作时区</strong>：亚太时区优先</li>\n</ul>\n\n\n<h3>开源社区运营 ×1</h3>\n<p><strong>工作内容：</strong></p>\n<ul>\n<li>负责开源社区的日常运营（内容更新、用户答疑、活动策划）</li>\n<li>与开发团队协作，推动社区反馈到产品迭代</li>\n<li>扩大开源项目在国内外的影响力</li>\n</ul>\n<p><strong>要求：</strong></p>\n<ul>\n<li>有开源社区运营、技术布道或相关经验</li>\n<li>英语流利（有留学/纯英语工作环境 背景优先）</li>\n<li>熟悉 GitHub 开源生态和开发者社区文化</li>\n<li><strong>其他要求</strong>：需不定期参加 AI 相关 Meetup （英语听说非常重要）</li>\n<li><strong>工作时区</strong>：北美时区优先</li>\n</ul>\n\n\n<h2>其他信息</h2>\n<ul>\n<li><strong>工作性质</strong>：全职 / 远程  </li>\n<li><strong>签证情况</strong>：暂不提供工作签证  </li>\n<li><strong>薪酬</strong>：根据经验与能力匹配  </li>\n</ul>\n\n\n<h2>申请方式</h2>\n<p>请将 <strong>简历 + 过往作品（ Github 链接 / 相关社区运营案例）</strong> 发送至：  <code>c3VwcG9ydEBtdXhzby5jb20= </code> </p>\n<p>邮件标题注明：「应聘职位 + 姓名 + 时区」  </p>\n\n\n<p>公司官网： <code><a href=\"http://muxso.com\">muxso.com</a></code></p>\n<p>初创公司，欢迎加入我们 🚀</p>",
      "author": "0x3751",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "0dd17fb43d61",
      "blog_name": "V2EX技术专区",
      "title": "使用 claulde code 有感,请大佬多多指教",
      "link": "https://www.v2ex.com/t/1152690#reply20",
      "published": "2025-08-15T08:36:29+00:00",
      "timestamp": 1755246989,
      "summary": "```<br>之前看到朋友圈都在转发，claude code 可以帮自己打工，然后抱着试一试的态度，拼了一个月 398 元，用 max 体验一把。<br>1. 它并没有实现自动帮你干活，还是需要你自己调整代码，没有和其他 AI 助手拉开维度差距。<br>2. 它的默认模型 claude-4,发现豆包国际版也可以免费选这个模型，比它便宜多了.<br>3. 它的 opus 模型，没体验出什么牛的功能<br>4. 不知道是我给他提示不规范还是我的项目不是新启动的项目，反正体验感觉没有网上吹的那么神奇<br><br>```",
      "content": "```<br>之前看到朋友圈都在转发，claude code 可以帮自己打工，然后抱着试一试的态度，拼了一个月 398 元，用 max 体验一把。<br>1. 它并没有实现自动帮你干活，还是需要你自己调整代码，没有和其他 AI 助手拉开维度差距。<br>2. 它的默认模型 claude-4,发现豆包国际版也可以免费选这个模型，比它便宜多了.<br>3. 它的 opus 模型，没体验出什么牛的功能<br>4. 不知道是我给他提示不规范还是我的项目不是新启动的项目，反正体验感觉没有网上吹的那么神奇<br><br>```",
      "author": "longmeier90",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "318727036c91",
      "blog_name": "V2EX技术专区",
      "title": "请教大佬们一个关于激光雷达的问题，",
      "link": "https://www.v2ex.com/t/1152686#reply4",
      "published": "2025-08-15T08:18:29+00:00",
      "timestamp": 1755245909,
      "summary": "<p>各位大佬，请教一个问题，就是我遇到这么一个需求：甲方设计了一个用于机载的激光雷达。这个雷达在静止的时候，会在 1s 内对着前方场景扫描，得到 300 条重复的线，每条线上假设有 n 个点，那么这 n 个点中每个点重复 300 次。它是设计用来机载的，所以当无人机匀速飞行的时候，激光雷达就可以扫描出整个地面。这我感觉很合理。\n然后，问题来了！现在，甲方想在旁边放一个彩色相机，然后把激光雷达扫描出来的点云地面全部加上真实的色彩，这我就有点不懂了！\n我网上查了查，要想激光雷达点云数据和可见光相机数据融合，那么就得先标定外参，标定过程就不说了，对着棋盘格/有孔洞的棋盘格拍摄点云数据和可见光数据，然后就可以相互映射标定。但我发现这个点云数据都是平面的，就跟一张图一样，就是多线的，不是重复一条线的。那要是重复一条线，按照我可怜的数学知识，这应该是计算不出来的吧？\n如果不标定外参？该怎么做呢？\n郁闷中。。。\n请懂行的大佬们指点迷津！！！</p>",
      "content": "<p>各位大佬，请教一个问题，就是我遇到这么一个需求：甲方设计了一个用于机载的激光雷达。这个雷达在静止的时候，会在 1s 内对着前方场景扫描，得到 300 条重复的线，每条线上假设有 n 个点，那么这 n 个点中每个点重复 300 次。它是设计用来机载的，所以当无人机匀速飞行的时候，激光雷达就可以扫描出整个地面。这我感觉很合理。\n然后，问题来了！现在，甲方想在旁边放一个彩色相机，然后把激光雷达扫描出来的点云地面全部加上真实的色彩，这我就有点不懂了！\n我网上查了查，要想激光雷达点云数据和可见光相机数据融合，那么就得先标定外参，标定过程就不说了，对着棋盘格/有孔洞的棋盘格拍摄点云数据和可见光数据，然后就可以相互映射标定。但我发现这个点云数据都是平面的，就跟一张图一样，就是多线的，不是重复一条线的。那要是重复一条线，按照我可怜的数学知识，这应该是计算不出来的吧？\n如果不标定外参？该怎么做呢？\n郁闷中。。。\n请懂行的大佬们指点迷津！！！</p>",
      "author": "bruceche11",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "2aaa7bb3ee95",
      "blog_name": "V2EX酷工作",
      "title": "寻找一个 windows 客户端开发的 V2er 一起做项目，靠谱。",
      "link": "https://www.v2ex.com/t/1152683#reply18",
      "published": "2025-08-15T08:07:16+00:00",
      "timestamp": 1755245236,
      "summary": "<p>我是个产品经理，现在有一个游戏助手项目，游戏日活 2W ，UE 引擎的 FPS 游戏。目前我的软件用户 QQ 群两个，有 5000 人，实际用户要再多一倍，每个月赞助几百块不等。功能迭代方案都有， 总体来说属于非常健康的一个软件状态。我负责设计、运营、推广、合作关系等除了开发以外的所有工作</p>\n<p>软件下一步计划是推出正式版，基于用户期待，正式版最低 99/年，日常价格应该再 139-169 一年，基于用户数量，算是一个蛮成功的副业项目。</p>\n<p>现在的关键问题是原有的开发者朋友工作太忙，摆烂严重，没办法继续迭代下去，已经等待两个月，仍然摆烂，现在需要放弃，不能让人把项目拖死了，想直接换一个能干活的开发者来搞这摊事情。</p>\n<p>目前有 C#客户端项目源码，因为想尽可能快些上线收菜，希望能有对 WPF C#开发能力，并且有充足兼职开发时间的佬友来搞。</p>\n<p>目前分成：能再给出 30%给合适的佬友。剩余部分：我 30%，合作者 A （提供内容资源） 20%，合作者 B(提供部分模块核心开发)25%(如果能完成一些技术方面问题，可以考虑踢掉)</p>\n<p>现在的项目是，所有用户都在催着上线，但是没有开发力量，我认为比大部分什么兼职项目靠谱，有兴趣的佬友可以私信我。</p>\n<p>🛰：bWFkbGlmZXIxMzM3</p>",
      "content": "<p>我是个产品经理，现在有一个游戏助手项目，游戏日活 2W ，UE 引擎的 FPS 游戏。目前我的软件用户 QQ 群两个，有 5000 人，实际用户要再多一倍，每个月赞助几百块不等。功能迭代方案都有， 总体来说属于非常健康的一个软件状态。我负责设计、运营、推广、合作关系等除了开发以外的所有工作</p>\n<p>软件下一步计划是推出正式版，基于用户期待，正式版最低 99/年，日常价格应该再 139-169 一年，基于用户数量，算是一个蛮成功的副业项目。</p>\n<p>现在的关键问题是原有的开发者朋友工作太忙，摆烂严重，没办法继续迭代下去，已经等待两个月，仍然摆烂，现在需要放弃，不能让人把项目拖死了，想直接换一个能干活的开发者来搞这摊事情。</p>\n<p>目前有 C#客户端项目源码，因为想尽可能快些上线收菜，希望能有对 WPF C#开发能力，并且有充足兼职开发时间的佬友来搞。</p>\n<p>目前分成：能再给出 30%给合适的佬友。剩余部分：我 30%，合作者 A （提供内容资源） 20%，合作者 B(提供部分模块核心开发)25%(如果能完成一些技术方面问题，可以考虑踢掉)</p>\n<p>现在的项目是，所有用户都在催着上线，但是没有开发力量，我认为比大部分什么兼职项目靠谱，有兴趣的佬友可以私信我。</p>\n<p>🛰：bWFkbGlmZXIxMzM3</p>",
      "author": "madlifer",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "1321e164a7cf",
      "blog_name": "V2EX酷工作",
      "title": "[惠州-上海闵行] 上位机总工程师 (2 年起)",
      "link": "https://www.v2ex.com/t/1152679#reply0",
      "published": "2025-08-15T07:55:58+00:00",
      "timestamp": 1755244558,
      "summary": "🔍 职位名称 上位机总工程师（电脑散热器智能控制软件方向）<br><br>📍 工作地点<br>广东惠州博罗或上海闵行区·全职（需线下办公，暂不支持远程）<br>我们的产品<br>官网： <a href=\"https://tcomas.cn/\" target=\"_blank\">https://tcomas.cn/</a><br><br>🚀 核心职责<br>负责开发散热器智能控制软件，支持 Modbus/CAN 总线协议与硬件交互<br>设计多语言 UI 界面（中/英/德/日），实现温控算法自适应优化实现 AI 交互场景的动画效果与可视化呈现<br>搭建自动化测试平台，确保 100% 通过 EMC/CE 认证标准<br>⚡ 硬性要求 技术能力<br>▶ 本科以上学历，计算机/自动化专业<br>▶ 精通 C++/Python 及 Qt 框架<br>▶ 熟悉嵌入式系统开发流程<br>▶ 对新技术充满热情<br><br>工程经验<br>▶ 2 年以上工业控制软件开发经验，至少 1 个量产级上位机项目案例<br>▶ 熟悉嵌入式系统开发流程，有 ROS 系统开发经验者优先<br><br>🌟 加分项<br>有开源项目贡献经历（如提交 PR 、维护个人开源项目），或活跃于技术社区（如 GitHub 、掘金）者优先<br>具备良好的问题排查能力，能独立解决开发中遇到的技术问题<br>有团队协作意识，能与产品、后端等角色高效沟通，推进项目落地<br>对技术有持续学习的热情，关注行业产品领域新趋势（如竞争对手产品生态更新、产品技术发展等）<br>代码风格规范，注重可维护性，有良好的版本控制习惯<br><br>💼 我们提供<br>五险一金，周末双休，带薪年假，节日福利，工作时间：8：30-18：00<br>电脑散热器前沿产品开发，与行业技术团队协作<br>提供 15K-30K 薪资待遇<br><br>📮 申请材料 请提供：简历<br>收件地址：miki_he@tcomas.net",
      "content": "🔍 职位名称 上位机总工程师（电脑散热器智能控制软件方向）<br><br>📍 工作地点<br>广东惠州博罗或上海闵行区·全职（需线下办公，暂不支持远程）<br>我们的产品<br>官网： <a href=\"https://tcomas.cn/\" target=\"_blank\">https://tcomas.cn/</a><br><br>🚀 核心职责<br>负责开发散热器智能控制软件，支持 Modbus/CAN 总线协议与硬件交互<br>设计多语言 UI 界面（中/英/德/日），实现温控算法自适应优化实现 AI 交互场景的动画效果与可视化呈现<br>搭建自动化测试平台，确保 100% 通过 EMC/CE 认证标准<br>⚡ 硬性要求 技术能力<br>▶ 本科以上学历，计算机/自动化专业<br>▶ 精通 C++/Python 及 Qt 框架<br>▶ 熟悉嵌入式系统开发流程<br>▶ 对新技术充满热情<br><br>工程经验<br>▶ 2 年以上工业控制软件开发经验，至少 1 个量产级上位机项目案例<br>▶ 熟悉嵌入式系统开发流程，有 ROS 系统开发经验者优先<br><br>🌟 加分项<br>有开源项目贡献经历（如提交 PR 、维护个人开源项目），或活跃于技术社区（如 GitHub 、掘金）者优先<br>具备良好的问题排查能力，能独立解决开发中遇到的技术问题<br>有团队协作意识，能与产品、后端等角色高效沟通，推进项目落地<br>对技术有持续学习的热情，关注行业产品领域新趋势（如竞争对手产品生态更新、产品技术发展等）<br>代码风格规范，注重可维护性，有良好的版本控制习惯<br><br>💼 我们提供<br>五险一金，周末双休，带薪年假，节日福利，工作时间：8：30-18：00<br>电脑散热器前沿产品开发，与行业技术团队协作<br>提供 15K-30K 薪资待遇<br><br>📮 申请材料 请提供：简历<br>收件地址：miki_he@tcomas.net",
      "author": "123gnnu",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "b2099f8b4285",
      "blog_name": "V2EX技术专区",
      "title": "在和大模型对话时，发现如果上文过长，会导致答非所问，并且返回疑似广告内容",
      "link": "https://www.v2ex.com/t/1152678#reply2",
      "published": "2025-08-15T07:53:54+00:00",
      "timestamp": 1755244434,
      "summary": "我在提问 python 相关的的内容，给我返回贝壳找房了。。。。<br> <a href=\"https://i.imgur.com/cjNyaUa.jpeg\" target=\"_blank\"><img class=\"embedded_image\" src=\"https://i.imgur.com/cjNyaUa.jpeg\"></a>",
      "content": "我在提问 python 相关的的内容，给我返回贝壳找房了。。。。<br> <a href=\"https://i.imgur.com/cjNyaUa.jpeg\" target=\"_blank\"><img class=\"embedded_image\" src=\"https://i.imgur.com/cjNyaUa.jpeg\"></a>",
      "author": "testliyu",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "3fb48f839bac",
      "blog_name": "V2EX技术专区",
      "title": "有了 AI 之后 nixos 的门槛变得很低了",
      "link": "https://www.v2ex.com/t/1152668#reply3",
      "published": "2025-08-15T07:25:07+00:00",
      "timestamp": 1755242707,
      "summary": "<p>让 codex 参照最佳实践写一个就能跑起来了，哈哈</p>",
      "content": "<p>让 codex 参照最佳实践写一个就能跑起来了，哈哈</p>",
      "author": "idblife",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "eba0d387e66a",
      "blog_name": "V2EX技术专区",
      "title": "Tarui 打包安卓 App 有没有快捷的方案，排除 pakeplus",
      "link": "https://www.v2ex.com/t/1152660#reply6",
      "published": "2025-08-15T07:07:41+00:00",
      "timestamp": 1755241661,
      "summary": "<h3>寻求更友好的本地一键环境打包</h3>",
      "content": "<h3>寻求更友好的本地一键环境打包</h3>",
      "author": "Latin",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "cd17d6cac502",
      "blog_name": "V2EX技术专区",
      "title": "征求相册方案",
      "link": "https://www.v2ex.com/t/1152633#reply44",
      "published": "2025-08-15T05:57:46+00:00",
      "timestamp": 1755237466,
      "summary": "<p>先吐槽一下：用了几年的 ds920 ，突然觉得有点鸡肋，只是相册和影片需求，而且 ds video 停止更新了，最近 jellyfin 转码 4k 到手机上，就 90 度关机了，恼火。相册么也是鸡肋，备份确实省事，但是用起来也就那样，中规中矩，2025 年了还没有语言搜索功能。920 已经出掉了。遂想折腾一下 immich 。</p>\n<p>目前手机上用 resilio sync 同步相册到一台常年开机的 win 服务器上，然后是 2 个方案有点拿不准：</p>\n<ol>\n<li>开一个 hyperv 的 linux 部署 immich ，顺便将相册定期同步进去，做为 2 个备份。</li>\n<li>我有个 n150 的 openwrt ，用 docker 部署 immich ，外接一个 usb 大容量的硬盘挂载，定期同步照片。</li>\n</ol>\n<p>请问大家推荐哪种方案，谢谢！然后我还有多用户的需求，外部库每个用户是独立的，两个方案都是用多个外部库的方式，可以实现不同用户使用不同的外部库吗？</p>",
      "content": "<p>先吐槽一下：用了几年的 ds920 ，突然觉得有点鸡肋，只是相册和影片需求，而且 ds video 停止更新了，最近 jellyfin 转码 4k 到手机上，就 90 度关机了，恼火。相册么也是鸡肋，备份确实省事，但是用起来也就那样，中规中矩，2025 年了还没有语言搜索功能。920 已经出掉了。遂想折腾一下 immich 。</p>\n<p>目前手机上用 resilio sync 同步相册到一台常年开机的 win 服务器上，然后是 2 个方案有点拿不准：</p>\n<ol>\n<li>开一个 hyperv 的 linux 部署 immich ，顺便将相册定期同步进去，做为 2 个备份。</li>\n<li>我有个 n150 的 openwrt ，用 docker 部署 immich ，外接一个 usb 大容量的硬盘挂载，定期同步照片。</li>\n</ol>\n<p>请问大家推荐哪种方案，谢谢！然后我还有多用户的需求，外部库每个用户是独立的，两个方案都是用多个外部库的方式，可以实现不同用户使用不同的外部库吗？</p>",
      "author": "silomrelephant",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "e4671c535d70",
      "blog_name": "V2EX酷工作",
      "title": "[北京] [豆瓣 Douban] -招聘 iOS 开发工程师",
      "link": "https://www.v2ex.com/t/1152617#reply0",
      "published": "2025-08-15T04:45:19+00:00",
      "timestamp": 1755233119,
      "summary": "<h3>关于豆瓣</h3>\n<p>豆瓣一直致力于帮助都市人群发现生活中有用的事物，通过桌面和移动产品来服务都市日常生活的各个方面。豆瓣成立之初以图书、电影、音乐的分享和推荐见长，不断发展至今，已成为一个有趣多元的文化生活社区。</p>\n<p>在豆瓣，我们推崇简单、务实的工作方式，在轻松、快乐的工作环境中积累和分享。你不只是在豆瓣工作，是和一群志趣相投的人一起生活！</p>\n<p>关于福利：六险一金，带薪年假，带薪病假，年度体检，早餐下午茶。</p>\n<h3>iOS 开发工程师</h3>\n<p>职位描述：</p>\n<p>1 、参与豆瓣 App 的研发，编写高质量代码；</p>\n<p>2 、参与豆瓣 App 性能及体验优化；</p>\n<p>3 、和产品经理、设计师配合，深度参与产品和设计需求的讨论。</p>\n<p>职位要求：</p>\n<p>1 、本科及以上学历，1-3 年开发经验，具备良好的计算机基础知识，了解常用的数据结构和算法；</p>\n<p>2 、熟悉 Objective-C / Swift 、Cocoa Touch 和其他常用框架，经历过完整的 App 开发过程；</p>\n<p>3 、熟悉多线程编程、网络编程、面向对象编程和常用设计模式；</p>\n<p>4 、良好的代码习惯和学习能力。</p>\n<p>优先条件：</p>\n<p>1 、在意细节，对代码质量有较高要求；重视接口和模块设计；</p>\n<p>2 、开源项目贡献者；</p>\n<p>3 、在 App Store 上架过自己的应用；</p>\n<p>4 、了解一定的前端或后端知识；</p>\n<p>5 、豆瓣用户。</p>\n<h3>简历直投</h3>\n<p>team@douban.com</p>",
      "content": "<h3>关于豆瓣</h3>\n<p>豆瓣一直致力于帮助都市人群发现生活中有用的事物，通过桌面和移动产品来服务都市日常生活的各个方面。豆瓣成立之初以图书、电影、音乐的分享和推荐见长，不断发展至今，已成为一个有趣多元的文化生活社区。</p>\n<p>在豆瓣，我们推崇简单、务实的工作方式，在轻松、快乐的工作环境中积累和分享。你不只是在豆瓣工作，是和一群志趣相投的人一起生活！</p>\n<p>关于福利：六险一金，带薪年假，带薪病假，年度体检，早餐下午茶。</p>\n<h3>iOS 开发工程师</h3>\n<p>职位描述：</p>\n<p>1 、参与豆瓣 App 的研发，编写高质量代码；</p>\n<p>2 、参与豆瓣 App 性能及体验优化；</p>\n<p>3 、和产品经理、设计师配合，深度参与产品和设计需求的讨论。</p>\n<p>职位要求：</p>\n<p>1 、本科及以上学历，1-3 年开发经验，具备良好的计算机基础知识，了解常用的数据结构和算法；</p>\n<p>2 、熟悉 Objective-C / Swift 、Cocoa Touch 和其他常用框架，经历过完整的 App 开发过程；</p>\n<p>3 、熟悉多线程编程、网络编程、面向对象编程和常用设计模式；</p>\n<p>4 、良好的代码习惯和学习能力。</p>\n<p>优先条件：</p>\n<p>1 、在意细节，对代码质量有较高要求；重视接口和模块设计；</p>\n<p>2 、开源项目贡献者；</p>\n<p>3 、在 App Store 上架过自己的应用；</p>\n<p>4 、了解一定的前端或后端知识；</p>\n<p>5 、豆瓣用户。</p>\n<h3>简历直投</h3>\n<p>team@douban.com</p>",
      "author": "xccx",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "da91ba0f915d",
      "blog_name": "V2EX酷工作",
      "title": "如果今天失业了，你们可以靠什么技能谋生？",
      "link": "https://www.v2ex.com/t/1152616#reply24",
      "published": "2025-08-15T04:41:11+00:00",
      "timestamp": 1755232871,
      "summary": "",
      "content": "",
      "author": "momo2023",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "fa39f695e0f2",
      "blog_name": "V2EX酷工作",
      "title": "[北京] 九八五大厂十年，现在简筛都过不了，同时房子跌了百万以上",
      "link": "https://www.v2ex.com/t/1152614#reply47",
      "published": "2025-08-15T04:29:36+00:00",
      "timestamp": 1755232176,
      "summary": "<p>楼主心态有点崩了。</p>\n<p>简单介绍下</p>\n<p>中下九八五本（山川吉其中一所），电子信息。工作十年。其中连续五年在同一家头部互联网大厂，两段外企经历。基本都是 B 端经历。</p>\n<p>Debuff 如下：\n当前在的大厂仅待了一年多点。上家外企因业务调整是被裁的，有 gap 。</p>\n<p>近期投简历，发现连简筛都过不去了。基本都是发完简历就没下文了。有点不知道怎么了。\n是觉得年龄太大了（ 32 岁），还是质疑这两年的稳定性</p>\n<p>但是楼主确实在当前这个厂干不下去了。强度是非人的大（没摆烂之前每个月有几天不回家），氛围是完全没有技术氛围的（业务一句话排期就减半个月）。</p>\n<p>而且主要楼主已经和领导沟通明牌要走了。估计下次绩效就要 C 了。</p>\n<p>房子也跌了百万以上，每个月还要还房贷，感觉生活越来越难了。</p>\n<p>说了这么多，V 友们有合适的机会辛苦推荐下。</p>",
      "content": "<p>楼主心态有点崩了。</p>\n<p>简单介绍下</p>\n<p>中下九八五本（山川吉其中一所），电子信息。工作十年。其中连续五年在同一家头部互联网大厂，两段外企经历。基本都是 B 端经历。</p>\n<p>Debuff 如下：\n当前在的大厂仅待了一年多点。上家外企因业务调整是被裁的，有 gap 。</p>\n<p>近期投简历，发现连简筛都过不去了。基本都是发完简历就没下文了。有点不知道怎么了。\n是觉得年龄太大了（ 32 岁），还是质疑这两年的稳定性</p>\n<p>但是楼主确实在当前这个厂干不下去了。强度是非人的大（没摆烂之前每个月有几天不回家），氛围是完全没有技术氛围的（业务一句话排期就减半个月）。</p>\n<p>而且主要楼主已经和领导沟通明牌要走了。估计下次绩效就要 C 了。</p>\n<p>房子也跌了百万以上，每个月还要还房贷，感觉生活越来越难了。</p>\n<p>说了这么多，V 友们有合适的机会辛苦推荐下。</p>",
      "author": "DietCola",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "40e77eef9acf",
      "blog_name": "V2EX酷工作",
      "title": "[北京][社招内推]高德-数据科学高级工程师/专家",
      "link": "https://www.v2ex.com/t/1152605#reply0",
      "published": "2025-08-15T04:00:52+00:00",
      "timestamp": 1755230452,
      "summary": "<h2>职位描述</h2>\n<p>1 、研发业界先进的 abtest 评估系统，负责实验平台数据科学方向的工作；<br>\n2 、辅助高德各个业务线利用数据科学来进行业务决策，建立各业务的科学指标体系来衡量迭代效果；<br>\n3 、开发调研类实验场景评估方法，辅助业务决策特殊实验；<br>\n4 、探索大模型和实验分析、数据分析的结合场景，提升实验取数、实验解读和实验诊断的效率 </p>\n<h2>职位要求</h2>\n<p>1 、统计、数学、计算机相关硕士及以上；<br>\n2 、具有大数据相关的业务实践经验，熟悉 HDFS 、MapReduce 、Hive 、HBase 等技术；<br>\n3 、有数据科学的相关经历，有 abtest 实验平台研发经验，熟悉统计检验方法论；<br>\n4 、非常好的统计基本知识和直觉，独立解决实验分析需求，为业务提供迭代优化方向；<br>\n5 、有大模型+数据分析 agent 实践经验优先 </p>\n<h2>投递邮箱</h2>\n<p>amowfreewk@qq.com</p>\n<h2>面试流程</h2>\n<p>两面技术→一面 HR</p>",
      "content": "<h2>职位描述</h2>\n<p>1 、研发业界先进的 abtest 评估系统，负责实验平台数据科学方向的工作；<br>\n2 、辅助高德各个业务线利用数据科学来进行业务决策，建立各业务的科学指标体系来衡量迭代效果；<br>\n3 、开发调研类实验场景评估方法，辅助业务决策特殊实验；<br>\n4 、探索大模型和实验分析、数据分析的结合场景，提升实验取数、实验解读和实验诊断的效率 </p>\n<h2>职位要求</h2>\n<p>1 、统计、数学、计算机相关硕士及以上；<br>\n2 、具有大数据相关的业务实践经验，熟悉 HDFS 、MapReduce 、Hive 、HBase 等技术；<br>\n3 、有数据科学的相关经历，有 abtest 实验平台研发经验，熟悉统计检验方法论；<br>\n4 、非常好的统计基本知识和直觉，独立解决实验分析需求，为业务提供迭代优化方向；<br>\n5 、有大模型+数据分析 agent 实践经验优先 </p>\n<h2>投递邮箱</h2>\n<p>amowfreewk@qq.com</p>\n<h2>面试流程</h2>\n<p>两面技术→一面 HR</p>",
      "author": "freeminder",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "4ea938250c85",
      "blog_name": "V2EX酷工作",
      "title": "准备换工作，军师们有啥建议？",
      "link": "https://www.v2ex.com/t/1152604#reply22",
      "published": "2025-08-15T03:49:22+00:00",
      "timestamp": 1755229762,
      "summary": "年龄：30+<br>技术栈：iOS 原生+flutter 跨端+react ，会基础原型设计和项目管理<br>其它：一本+英语可以进行基础交流沟通<br>目前薪资：28k<br>不知道现在还有没有竞争力了。<br><br>离职原因：<br>1 、做页面被吐槽丑，没有原型和设计情况下自行设计编码的简洁界面，给内部员工用的，我用豆包分析页面给的评价还不错，开会被点名要有美感丫的倒是给我个产品或者 UI 啊；<br>2 、同事无法共鸣，比如今天出了一个 bug 问我 flag 是不是取反了，用 0 代表有效，1 代表无效，丫的倒是给个接口文档啊，无法向同事吐槽，他们会认为很正常是我没问清楚。<br>3 、不能在公司带饭、吃饭怕吸引蟑螂，要求自费去看南京照相馆写观后感，丫的把我们当小学生整。",
      "content": "年龄：30+<br>技术栈：iOS 原生+flutter 跨端+react ，会基础原型设计和项目管理<br>其它：一本+英语可以进行基础交流沟通<br>目前薪资：28k<br>不知道现在还有没有竞争力了。<br><br>离职原因：<br>1 、做页面被吐槽丑，没有原型和设计情况下自行设计编码的简洁界面，给内部员工用的，我用豆包分析页面给的评价还不错，开会被点名要有美感丫的倒是给我个产品或者 UI 啊；<br>2 、同事无法共鸣，比如今天出了一个 bug 问我 flag 是不是取反了，用 0 代表有效，1 代表无效，丫的倒是给个接口文档啊，无法向同事吐槽，他们会认为很正常是我没问清楚。<br>3 、不能在公司带饭、吃饭怕吸引蟑螂，要求自费去看南京照相馆写观后感，丫的把我们当小学生整。",
      "author": "maxmax4max",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "b0f3af8c1e31",
      "blog_name": "V2EX技术专区",
      "title": "如何做全球的地址校验呢？",
      "link": "https://www.v2ex.com/t/1152599#reply6",
      "published": "2025-08-15T03:40:43+00:00",
      "timestamp": 1755229243,
      "summary": "<p>我们的业务是一个物流系统，我们需要对用户输入的地址进行校验合法性，目前对接的是谷歌的 <a href=\"http://maps.googleapis.com\">maps.googleapis.com</a> 接口，但是这个接口对小国家的支持性很差，至少 100 多个国家是不支持的，而我们业务目前是全球的，但优点是特别快，300ms 就能返回结果。\n有大佬做过这种全球地址校验么？想咨询一下\n下面是我的请求例子</p>\n<pre><code>\ncurl --location --request GET 'https://maps.googleapis.com/maps/api/geocode/json?address=3659200,ISRAEL&amp;key=xxxxx' \\\n--header 'User-Agent: Apifox/1.0.0 ( https://apifox.com)' \\\n--header 'Accept: */*' \\\n--header 'Host: maps.googleapis.com' \\\n--header 'Connection: keep-alive'\n\n{\n   \"results\": [\n      {\n         \"address_components\": [\n            {\n               \"long_name\": \"Israel\",\n               \"short_name\": \"IL\",\n               \"types\": [\n                  \"country\",\n                  \"political\"\n               ]\n            }\n         ],\n         \"formatted_address\": \"Israel\",\n         \"geometry\": {\n            \"bounds\": {\n               \"northeast\": {\n                  \"lat\": 33.33280500000001,\n                  \"lng\": 35.896244\n               },\n               \"southwest\": {\n                  \"lat\": 29.47969999999999,\n                  \"lng\": 34.2673436\n               }\n            },\n            \"location\": {\n               \"lat\": 31.046051,\n               \"lng\": 34.851612\n            },\n            \"location_type\": \"APPROXIMATE\",\n            \"viewport\": {\n               \"northeast\": {\n                  \"lat\": 33.33280500000001,\n                  \"lng\": 35.896244\n               },\n               \"southwest\": {\n                  \"lat\": 29.47969999999999,\n                  \"lng\": 34.2673436\n               }\n            }\n         },\n         \"partial_match\": true,\n         \"place_id\": \"ChIJi8mnMiRJABURuiw1EyBCa2o\",\n         \"types\": [\n            \"country\",\n            \"political\"\n         ]\n      }\n   ],\n   \"status\": \"OK\"\n}\n</code></pre>",
      "content": "<p>我们的业务是一个物流系统，我们需要对用户输入的地址进行校验合法性，目前对接的是谷歌的 <a href=\"http://maps.googleapis.com\">maps.googleapis.com</a> 接口，但是这个接口对小国家的支持性很差，至少 100 多个国家是不支持的，而我们业务目前是全球的，但优点是特别快，300ms 就能返回结果。\n有大佬做过这种全球地址校验么？想咨询一下\n下面是我的请求例子</p>\n<pre><code>\ncurl --location --request GET 'https://maps.googleapis.com/maps/api/geocode/json?address=3659200,ISRAEL&amp;key=xxxxx' \\\n--header 'User-Agent: Apifox/1.0.0 ( https://apifox.com)' \\\n--header 'Accept: */*' \\\n--header 'Host: maps.googleapis.com' \\\n--header 'Connection: keep-alive'\n\n{\n   \"results\": [\n      {\n         \"address_components\": [\n            {\n               \"long_name\": \"Israel\",\n               \"short_name\": \"IL\",\n               \"types\": [\n                  \"country\",\n                  \"political\"\n               ]\n            }\n         ],\n         \"formatted_address\": \"Israel\",\n         \"geometry\": {\n            \"bounds\": {\n               \"northeast\": {\n                  \"lat\": 33.33280500000001,\n                  \"lng\": 35.896244\n               },\n               \"southwest\": {\n                  \"lat\": 29.47969999999999,\n                  \"lng\": 34.2673436\n               }\n            },\n            \"location\": {\n               \"lat\": 31.046051,\n               \"lng\": 34.851612\n            },\n            \"location_type\": \"APPROXIMATE\",\n            \"viewport\": {\n               \"northeast\": {\n                  \"lat\": 33.33280500000001,\n                  \"lng\": 35.896244\n               },\n               \"southwest\": {\n                  \"lat\": 29.47969999999999,\n                  \"lng\": 34.2673436\n               }\n            }\n         },\n         \"partial_match\": true,\n         \"place_id\": \"ChIJi8mnMiRJABURuiw1EyBCa2o\",\n         \"types\": [\n            \"country\",\n            \"political\"\n         ]\n      }\n   ],\n   \"status\": \"OK\"\n}\n</code></pre>",
      "author": "guoyblala",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "87a10686247f",
      "blog_name": "V2EX技术专区",
      "title": "windows terminal 中如何从 cmd 直接切换到 git bash",
      "link": "https://www.v2ex.com/t/1152595#reply7",
      "published": "2025-08-15T03:34:30+00:00",
      "timestamp": 1755228870,
      "summary": "<p>在 git bash 中输出 cmd 然后按回车就能直接切换到 git bash, 但是在 cmd 中怎么切换到 git bash 呢</p>",
      "content": "<p>在 git bash 中输出 cmd 然后按回车就能直接切换到 git bash, 但是在 cmd 中怎么切换到 git bash 呢</p>",
      "author": "movq",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "3b333648c727",
      "blog_name": "V2EX酷工作",
      "title": "领导过于情绪化，有什么好办法吗。",
      "link": "https://www.v2ex.com/t/1152592#reply48",
      "published": "2025-08-15T03:30:12+00:00",
      "timestamp": 1755228612,
      "summary": "<p>上家公司老板非常情绪化，动则在公司群里 @开骂。我是公司前端，在这家公司干了两年多了，六月份的时候改一个大屏项目，说好二十天的开发项目直接腰斩到五天，说搞不完就说让我搞快点，然后一天 push 二十多遍，一个样式改十七遍，人都麻了。字号按照 ui 图上写的，在群里直接 @+语音开喷。我实在受不了就跑了，各位大佬有什么好办法应对这种情况吗？</p>",
      "content": "<p>上家公司老板非常情绪化，动则在公司群里 @开骂。我是公司前端，在这家公司干了两年多了，六月份的时候改一个大屏项目，说好二十天的开发项目直接腰斩到五天，说搞不完就说让我搞快点，然后一天 push 二十多遍，一个样式改十七遍，人都麻了。字号按照 ui 图上写的，在群里直接 @+语音开喷。我实在受不了就跑了，各位大佬有什么好办法应对这种情况吗？</p>",
      "author": "lynzya",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "2c8b756ebabe",
      "blog_name": "V2EX技术专区",
      "title": "git 中如何将子分支的多个提交作为一个提交合并到主分支？",
      "link": "https://www.v2ex.com/t/1152591#reply31",
      "published": "2025-08-15T03:28:24+00:00",
      "timestamp": 1755228504,
      "summary": "<p>我们组长说从子分支到主分支一定要用变基保持 dev 的提交记录的干净，我在子分支里又喜欢写一段代码只要完成一小部分的功能就立刻提交，这样方便恢复，但是最后等变基然后合并到主分支的时候，我那一大堆提交记录也跟着带过来了，就让 dev 变得很难看，大概是这样</p>\n<p><img alt=\"\" class=\"embedded_image\" src=\"https://rolin-typora.oss-cn-guangzhou.aliyuncs.com/20250815112048.png\"></p>\n<p>我后面学着用这个压缩提交，可以将多个提交记录压缩成一个然后再合并到主分支上，但是用完之后提交记录变得更加诡异了，甚至会变成两个我有两个完全一样的提交记录，给我都整不会了，合并的时候也特别麻烦，审阅了很多东西，最后还让组长帮忙看看最终的内容有没有预期之外的修改才敢合并的，出了这事之后我就不敢再用压缩提交了</p>\n<p>下面是提交记录，之所以有两个一样的提交就是因为当时用了压缩提交</p>\n<p><img alt=\"\" class=\"embedded_image\" src=\"https://rolin-typora.oss-cn-guangzhou.aliyuncs.com/20250815112525.png\"></p>\n<p>后面我又跟组长学修正提交，可以修正前一个提交来解决问题，但是我用修正提交的时候有时候不知道为什么还是会触发自动合并和更新，最后虽然说可以效果没变化，但是提交记录还是变得很难看，具体来说如下图所示</p>\n<p><img alt=\"\" class=\"embedded_image\" src=\"https://rolin-typora.oss-cn-guangzhou.aliyuncs.com/20250815112658.png\"></p>\n<p>到这里为止我是真没办法，不知道该怎么解决这个问题，有没有懂得大佬来说一下，虽然说这个问题也不影响开发，但是这么乱的记录我看着心里挺膈应就是</p>",
      "content": "<p>我们组长说从子分支到主分支一定要用变基保持 dev 的提交记录的干净，我在子分支里又喜欢写一段代码只要完成一小部分的功能就立刻提交，这样方便恢复，但是最后等变基然后合并到主分支的时候，我那一大堆提交记录也跟着带过来了，就让 dev 变得很难看，大概是这样</p>\n<p><img alt=\"\" class=\"embedded_image\" src=\"https://rolin-typora.oss-cn-guangzhou.aliyuncs.com/20250815112048.png\"></p>\n<p>我后面学着用这个压缩提交，可以将多个提交记录压缩成一个然后再合并到主分支上，但是用完之后提交记录变得更加诡异了，甚至会变成两个我有两个完全一样的提交记录，给我都整不会了，合并的时候也特别麻烦，审阅了很多东西，最后还让组长帮忙看看最终的内容有没有预期之外的修改才敢合并的，出了这事之后我就不敢再用压缩提交了</p>\n<p>下面是提交记录，之所以有两个一样的提交就是因为当时用了压缩提交</p>\n<p><img alt=\"\" class=\"embedded_image\" src=\"https://rolin-typora.oss-cn-guangzhou.aliyuncs.com/20250815112525.png\"></p>\n<p>后面我又跟组长学修正提交，可以修正前一个提交来解决问题，但是我用修正提交的时候有时候不知道为什么还是会触发自动合并和更新，最后虽然说可以效果没变化，但是提交记录还是变得很难看，具体来说如下图所示</p>\n<p><img alt=\"\" class=\"embedded_image\" src=\"https://rolin-typora.oss-cn-guangzhou.aliyuncs.com/20250815112658.png\"></p>\n<p>到这里为止我是真没办法，不知道该怎么解决这个问题，有没有懂得大佬来说一下，虽然说这个问题也不影响开发，但是这么乱的记录我看着心里挺膈应就是</p>",
      "author": "tiRolin",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "4a11553c231f",
      "blog_name": "V2EX酷工作",
      "title": "招一个 NC6.5 系统二开及维护人员，坐标杭州",
      "link": "https://www.v2ex.com/t/1152586#reply0",
      "published": "2025-08-15T03:19:49+00:00",
      "timestamp": 1755227989,
      "summary": "公司长期维护项目需要一名 java 开发，主要负责用友 NC6.5 二次开发及维护。有相关经验的可以联系：MTk5MDY1MTA2MDU=",
      "content": "公司长期维护项目需要一名 java 开发，主要负责用友 NC6.5 二次开发及维护。有相关经验的可以联系：MTk5MDY1MTA2MDU=",
      "author": "matliu",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "b3a50f32cab5",
      "blog_name": "V2EX技术专区",
      "title": "docker restart 会影响宿主机网络协议栈吗？",
      "link": "https://www.v2ex.com/t/1152585#reply18",
      "published": "2025-08-15T03:19:17+00:00",
      "timestamp": 1755227957,
      "summary": "<p>问题：因业务需求，我在 Linux 上做了一个定时任务，定时执行重启容器的脚本。脚本内容如下:</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# enable_permission.sh - 启用权限要求配置\n\n# ===== 配置区域 =====\nCONFIG_DIR=\"\"    # 配置文件目录\nCONFIG_TRUE=\"\"    # 启用权限的配置文件\nTARGET_CONFIG=\"\"       # 目标配置文件名\nCONTAINER_NAME=\"\"            # Docker 容器名称\nLOG_FILE=\"/var/log/permission_config.log\" # 共享日志文件\n\n# ===== 日志函数 =====\nlog() {\n    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')\n    local script_name=$(basename \"$0\")\n    echo \"[$timestamp] [$script_name] $1\" &gt;&gt; \"$LOG_FILE\"\n}\n\n# ===== 主函数 =====\nmain() {\n    log \"开始执行\"\n    \n    # 1. 验证配置文件存在\n    if [[ ! -f \"$CONFIG_DIR/$CONFIG_TRUE\" ]]; then\n        log \"错误: 配置文件 $CONFIG_TRUE 不存在!\"\n        exit 1\n    fi\n    \n    \n    # 3. 复制配置文件\n    cp -f \"$CONFIG_DIR/$CONFIG_TRUE\" \"$CONFIG_DIR/$TARGET_CONFIG\"\n    log \"复制配置: $CONFIG_TRUE → $TARGET_CONFIG\"\n    \n    # 4. 重启容器\n    if docker restart \"$CONTAINER_NAME\" &gt; /dev/null; then\n        log \"容器重启成功\"\n    else\n        log \"容器重启失败\"\n        exit 2\n    fi\n}\n\nmain\n</code></pre>\n<p>总体来言就是每天白天八点重启一次服务容器，晚上八点重启一次服务容器。\n这个定时任务已经执行了一周多了，一直没有问题，但是昨晚十点客户那边发现服务无法访问，我上去看了下连二进制部署的宝塔也无法访问了。猜测是服务器网络崩了。<strong>然后今天上午八点 40 左右上班连接时发现服务恢复正常了。</strong>\n查了下<code>/var/log/message</code>,个人感觉比较重要的部分如下：</p>\n<pre><code class=\"language-bash\">Aug 14 20:00:11 cap dockerd: time=\"2025-08-14T20:00:11.500905584+08:00\" level=info msg=\"Container failed to exit within 10s of signal 15 - using the force\" container=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a spanID=22a255e634fb0b5f traceID=5222a14c8585e9c7f65d909613b195d0\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.604295589+08:00\" level=info msg=\"shim disconnected\" id=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.604343484+08:00\" level=warning msg=\"cleaning up after shim disconnected\" id=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a namespace=moby\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.604354005+08:00\" level=info msg=\"cleaning up dead shim\"\nAug 14 20:00:11 cap dockerd: time=\"2025-08-14T20:00:11.604547353+08:00\" level=info msg=\"ignoring event\" container=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.621203827+08:00\" level=warning msg=\"cleanup warnings time=\\\"2025-08-14T20:00:11+08:00\\\" level=info msg=\\\"starting signal loop\\\" namespace=moby pid=52083 runtime=io.containerd.runc.v2\\n\"\nAug 14 20:00:11 cap dockerd: time=\"2025-08-14T20:00:11.621741372+08:00\" level=warning msg=\"ShouldRestart failed, container will not be restarted\" container=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a daemonShuttingDown=false error=\"restart canceled\" execDuration=11h59m59.316246392s exitStatus=\"{137 2025-08-14 12:00:11.579683933 +0000 UTC}\" hasBeenManuallyStopped=true restartCount=0\nAug 14 20:00:11 cap avahi-daemon[1911]: Withdrawing address record for fe80::785f:e6ff:fe53:4e9c on veth4b6903b.\nAug 14 20:00:11 cap kernel: docker0: port 2(veth4b6903b) entered disabled state\nAug 14 20:00:11 cap kernel: docker0: port 2(veth4b6903b) entered disabled state\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.6551] manager: (vethdec9609): new Veth device (/org/freedesktop/NetworkManager/Devices/250)\nAug 14 20:00:11 cap avahi-daemon[1911]: Withdrawing workstation service for vethdec9609.\nAug 14 20:00:11 cap kernel: device veth4b6903b left promiscuous mode\nAug 14 20:00:11 cap kernel: docker0: port 2(veth4b6903b) entered disabled state\nAug 14 20:00:11 cap avahi-daemon[1911]: Withdrawing workstation service for veth4b6903b.\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.6667] device (veth4b6903b): released from master device docker0\nAug 14 20:00:11 cap journal: Removing a network device that was not added\nAug 14 20:00:11 cap libvirtd: 2025-08-14 12:00:11.670+0000: 2928: error : virFileReadAll:1460 : 打开文件 '/sys/class/net/vethdec9609/operstate' 失败: 没有那个文件或目录\nAug 14 20:00:11 cap libvirtd: 2025-08-14 12:00:11.670+0000: 2928: error : virNetDevGetLinkInfo:2552 : unable to read: /sys/class/net/vethdec9609/operstate: 没有那个文件或目录\nAug 14 20:00:11 cap journal: Removing a network device that was not added\nAug 14 20:00:11 cap kernel: docker0: port 2(veth916a435) entered blocking state\nAug 14 20:00:11 cap kernel: docker0: port 2(veth916a435) entered disabled state\nAug 14 20:00:11 cap kernel: device veth916a435 entered promiscuous mode\nAug 14 20:00:11 cap kernel: IPv6: ADDRCONF(NETDEV_UP): veth916a435: link is not ready\nAug 14 20:00:11 cap kernel: docker0: port 2(veth916a435) entered blocking state\nAug 14 20:00:11 cap kernel: docker0: port 2(veth916a435) entered forwarding state\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.6883] manager: (vethbcc5924): new Veth device (/org/freedesktop/NetworkManager/Devices/251)\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.6893] manager: (veth916a435): new Veth device (/org/freedesktop/NetworkManager/Devices/252)\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.728945634+08:00\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.729084477+08:00\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.729100825+08:00\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.729349497+08:00\" level=info msg=\"starting signal loop\" namespace=moby path=/run/containerd/io.containerd.runtime.v2.task/moby/90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a pid=52143 runtime=io.containerd.runc.v2\nAug 14 20:00:11 cap avahi-daemon[1911]: Withdrawing workstation service for vethbcc5924.\nAug 14 20:00:11 cap kernel: IPv6: ADDRCONF(NETDEV_CHANGE): veth916a435: link becomes ready\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.9243] device (veth916a435): carrier: link connected\nAug 14 20:00:11 cap journal: Removing a network device that was not added\nAug 14 20:00:12 cap systemd: Removed slice User Slice of root.\nAug 14 20:00:13 cap avahi-daemon[1911]: Registering new address record for fe80::9894:70ff:fe7c:5e48 on veth916a435.*.\n</code></pre>\n<p>把日志扔给 deepseek 说是 docker 容器强制终止触发宿主机内核网络栈状态异常。请问有这个可能吗？我不是专业运维，请问一下大家， 如果 docker restart 指令确实会影响宿主机网络协议栈，目前我只想到了以下方案：\n把 docker restart 指令改为 docker stop + sleep + docker start 确保容器正常停止。然后 docker network prune --filter \"unitl=24h\"清理一下无用网络。</p>",
      "content": "<p>问题：因业务需求，我在 Linux 上做了一个定时任务，定时执行重启容器的脚本。脚本内容如下:</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n# enable_permission.sh - 启用权限要求配置\n\n# ===== 配置区域 =====\nCONFIG_DIR=\"\"    # 配置文件目录\nCONFIG_TRUE=\"\"    # 启用权限的配置文件\nTARGET_CONFIG=\"\"       # 目标配置文件名\nCONTAINER_NAME=\"\"            # Docker 容器名称\nLOG_FILE=\"/var/log/permission_config.log\" # 共享日志文件\n\n# ===== 日志函数 =====\nlog() {\n    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')\n    local script_name=$(basename \"$0\")\n    echo \"[$timestamp] [$script_name] $1\" &gt;&gt; \"$LOG_FILE\"\n}\n\n# ===== 主函数 =====\nmain() {\n    log \"开始执行\"\n    \n    # 1. 验证配置文件存在\n    if [[ ! -f \"$CONFIG_DIR/$CONFIG_TRUE\" ]]; then\n        log \"错误: 配置文件 $CONFIG_TRUE 不存在!\"\n        exit 1\n    fi\n    \n    \n    # 3. 复制配置文件\n    cp -f \"$CONFIG_DIR/$CONFIG_TRUE\" \"$CONFIG_DIR/$TARGET_CONFIG\"\n    log \"复制配置: $CONFIG_TRUE → $TARGET_CONFIG\"\n    \n    # 4. 重启容器\n    if docker restart \"$CONTAINER_NAME\" &gt; /dev/null; then\n        log \"容器重启成功\"\n    else\n        log \"容器重启失败\"\n        exit 2\n    fi\n}\n\nmain\n</code></pre>\n<p>总体来言就是每天白天八点重启一次服务容器，晚上八点重启一次服务容器。\n这个定时任务已经执行了一周多了，一直没有问题，但是昨晚十点客户那边发现服务无法访问，我上去看了下连二进制部署的宝塔也无法访问了。猜测是服务器网络崩了。<strong>然后今天上午八点 40 左右上班连接时发现服务恢复正常了。</strong>\n查了下<code>/var/log/message</code>,个人感觉比较重要的部分如下：</p>\n<pre><code class=\"language-bash\">Aug 14 20:00:11 cap dockerd: time=\"2025-08-14T20:00:11.500905584+08:00\" level=info msg=\"Container failed to exit within 10s of signal 15 - using the force\" container=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a spanID=22a255e634fb0b5f traceID=5222a14c8585e9c7f65d909613b195d0\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.604295589+08:00\" level=info msg=\"shim disconnected\" id=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.604343484+08:00\" level=warning msg=\"cleaning up after shim disconnected\" id=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a namespace=moby\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.604354005+08:00\" level=info msg=\"cleaning up dead shim\"\nAug 14 20:00:11 cap dockerd: time=\"2025-08-14T20:00:11.604547353+08:00\" level=info msg=\"ignoring event\" container=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a module=libcontainerd namespace=moby topic=/tasks/delete type=\"*events.TaskDelete\"\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.621203827+08:00\" level=warning msg=\"cleanup warnings time=\\\"2025-08-14T20:00:11+08:00\\\" level=info msg=\\\"starting signal loop\\\" namespace=moby pid=52083 runtime=io.containerd.runc.v2\\n\"\nAug 14 20:00:11 cap dockerd: time=\"2025-08-14T20:00:11.621741372+08:00\" level=warning msg=\"ShouldRestart failed, container will not be restarted\" container=90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a daemonShuttingDown=false error=\"restart canceled\" execDuration=11h59m59.316246392s exitStatus=\"{137 2025-08-14 12:00:11.579683933 +0000 UTC}\" hasBeenManuallyStopped=true restartCount=0\nAug 14 20:00:11 cap avahi-daemon[1911]: Withdrawing address record for fe80::785f:e6ff:fe53:4e9c on veth4b6903b.\nAug 14 20:00:11 cap kernel: docker0: port 2(veth4b6903b) entered disabled state\nAug 14 20:00:11 cap kernel: docker0: port 2(veth4b6903b) entered disabled state\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.6551] manager: (vethdec9609): new Veth device (/org/freedesktop/NetworkManager/Devices/250)\nAug 14 20:00:11 cap avahi-daemon[1911]: Withdrawing workstation service for vethdec9609.\nAug 14 20:00:11 cap kernel: device veth4b6903b left promiscuous mode\nAug 14 20:00:11 cap kernel: docker0: port 2(veth4b6903b) entered disabled state\nAug 14 20:00:11 cap avahi-daemon[1911]: Withdrawing workstation service for veth4b6903b.\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.6667] device (veth4b6903b): released from master device docker0\nAug 14 20:00:11 cap journal: Removing a network device that was not added\nAug 14 20:00:11 cap libvirtd: 2025-08-14 12:00:11.670+0000: 2928: error : virFileReadAll:1460 : 打开文件 '/sys/class/net/vethdec9609/operstate' 失败: 没有那个文件或目录\nAug 14 20:00:11 cap libvirtd: 2025-08-14 12:00:11.670+0000: 2928: error : virNetDevGetLinkInfo:2552 : unable to read: /sys/class/net/vethdec9609/operstate: 没有那个文件或目录\nAug 14 20:00:11 cap journal: Removing a network device that was not added\nAug 14 20:00:11 cap kernel: docker0: port 2(veth916a435) entered blocking state\nAug 14 20:00:11 cap kernel: docker0: port 2(veth916a435) entered disabled state\nAug 14 20:00:11 cap kernel: device veth916a435 entered promiscuous mode\nAug 14 20:00:11 cap kernel: IPv6: ADDRCONF(NETDEV_UP): veth916a435: link is not ready\nAug 14 20:00:11 cap kernel: docker0: port 2(veth916a435) entered blocking state\nAug 14 20:00:11 cap kernel: docker0: port 2(veth916a435) entered forwarding state\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.6883] manager: (vethbcc5924): new Veth device (/org/freedesktop/NetworkManager/Devices/251)\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.6893] manager: (veth916a435): new Veth device (/org/freedesktop/NetworkManager/Devices/252)\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.728945634+08:00\" level=info msg=\"loading plugin \\\"io.containerd.event.v1.publisher\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.event.v1\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.729084477+08:00\" level=info msg=\"loading plugin \\\"io.containerd.internal.v1.shutdown\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.internal.v1\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.729100825+08:00\" level=info msg=\"loading plugin \\\"io.containerd.ttrpc.v1.task\\\"...\" runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1\nAug 14 20:00:11 cap containerd: time=\"2025-08-14T20:00:11.729349497+08:00\" level=info msg=\"starting signal loop\" namespace=moby path=/run/containerd/io.containerd.runtime.v2.task/moby/90828a5018f0fc3eb7019d2f5275b35eb9e79f5306e8aab459e12aaa287ed02a pid=52143 runtime=io.containerd.runc.v2\nAug 14 20:00:11 cap avahi-daemon[1911]: Withdrawing workstation service for vethbcc5924.\nAug 14 20:00:11 cap kernel: IPv6: ADDRCONF(NETDEV_CHANGE): veth916a435: link becomes ready\nAug 14 20:00:11 cap NetworkManager[1877]: &lt;info&gt;  [1755172811.9243] device (veth916a435): carrier: link connected\nAug 14 20:00:11 cap journal: Removing a network device that was not added\nAug 14 20:00:12 cap systemd: Removed slice User Slice of root.\nAug 14 20:00:13 cap avahi-daemon[1911]: Registering new address record for fe80::9894:70ff:fe7c:5e48 on veth916a435.*.\n</code></pre>\n<p>把日志扔给 deepseek 说是 docker 容器强制终止触发宿主机内核网络栈状态异常。请问有这个可能吗？我不是专业运维，请问一下大家， 如果 docker restart 指令确实会影响宿主机网络协议栈，目前我只想到了以下方案：\n把 docker restart 指令改为 docker stop + sleep + docker start 确保容器正常停止。然后 docker network prune --filter \"unitl=24h\"清理一下无用网络。</p>",
      "author": "c4923",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "7b27b76ca031",
      "blog_name": "V2EX技术专区",
      "title": "关于 Python 环境可复现性请教",
      "link": "https://www.v2ex.com/t/1152582#reply49",
      "published": "2025-08-15T03:09:13+00:00",
      "timestamp": 1755227353,
      "summary": "公司 toB 项目 python 三方依赖有 150+，有没有比较优雅的方式能严格按照 requirements.txt （可能存在版本冲突）复现依赖环境，pip install -r requirements.txt 有个问题就是没准过段时间构建出来的环境就和 requirements.txt 中的不一致了<br><br>目前的做法是将环境做成了基础镜像，每次交付都基于这个镜像打包。不同版本有增量依赖或版本调整时在 Dockerfile 中单独 pip install ，但这也存在基础镜像管理和基础镜像复现的问题。",
      "content": "公司 toB 项目 python 三方依赖有 150+，有没有比较优雅的方式能严格按照 requirements.txt （可能存在版本冲突）复现依赖环境，pip install -r requirements.txt 有个问题就是没准过段时间构建出来的环境就和 requirements.txt 中的不一致了<br><br>目前的做法是将环境做成了基础镜像，每次交付都基于这个镜像打包。不同版本有增量依赖或版本调整时在 Dockerfile 中单独 pip install ，但这也存在基础镜像管理和基础镜像复现的问题。",
      "author": "xgq89757",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "6dfb0aa5531a",
      "blog_name": "V2EX酷工作",
      "title": "web 前端开发的发展方向",
      "link": "https://www.v2ex.com/t/1152580#reply22",
      "published": "2025-08-15T03:07:39+00:00",
      "timestamp": 1755227259,
      "summary": "<p>10 年经验，感觉 web 前端领域基建已经非常成熟了。\n电商、社交等业务类型项目，技术方案层面，社区基本都有现成最优解（例如 Next.js 可以比肩 Spring/Java ）。</p>\n<p>作为开发者，技术能力优势已经被抹平。只剩经历得多的优势（技术、业务经验）。但这也存在年龄歧视的劣势。</p>\n<p>规划继续深耕技术，在纠结选择哪个方向。</p>\n<ol>\n<li>\n<p>夸平台，学习 iOS 、Android 开发\n疑虑：企业、岗位都是区分原生开发、web 开发，即使自己增加原生开发经验，对求职加分不多（参考自己有后端开发能力，半桶水经验，日常是没有后端开发任务的）；\n自己结论：要有，但加分不多！工作没机会积累沉淀经验（浪费学习经验）。</p>\n</li>\n<li>\n<p>细分技术领域能力</p>\n</li>\n</ol>\n<ul>\n<li>可视化图表</li>\n<li>富文本编辑</li>\n<li>3D 模型渲染/编辑</li>\n<li>音视频编辑</li>\n<li>编辑器/IDE</li>\n</ul>\n<p>deepseek 推荐“3D 模型渲染/编辑”或“音视频编辑”</p>\n<p>想多听听大家根据自己实际经验给的建议、讨论。谢谢</p>",
      "content": "<p>10 年经验，感觉 web 前端领域基建已经非常成熟了。\n电商、社交等业务类型项目，技术方案层面，社区基本都有现成最优解（例如 Next.js 可以比肩 Spring/Java ）。</p>\n<p>作为开发者，技术能力优势已经被抹平。只剩经历得多的优势（技术、业务经验）。但这也存在年龄歧视的劣势。</p>\n<p>规划继续深耕技术，在纠结选择哪个方向。</p>\n<ol>\n<li>\n<p>夸平台，学习 iOS 、Android 开发\n疑虑：企业、岗位都是区分原生开发、web 开发，即使自己增加原生开发经验，对求职加分不多（参考自己有后端开发能力，半桶水经验，日常是没有后端开发任务的）；\n自己结论：要有，但加分不多！工作没机会积累沉淀经验（浪费学习经验）。</p>\n</li>\n<li>\n<p>细分技术领域能力</p>\n</li>\n</ol>\n<ul>\n<li>可视化图表</li>\n<li>富文本编辑</li>\n<li>3D 模型渲染/编辑</li>\n<li>音视频编辑</li>\n<li>编辑器/IDE</li>\n</ul>\n<p>deepseek 推荐“3D 模型渲染/编辑”或“音视频编辑”</p>\n<p>想多听听大家根据自己实际经验给的建议、讨论。谢谢</p>",
      "author": "daifee",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "996fc7f53f09",
      "blog_name": "V2EX酷工作",
      "title": "Base 上海，初创公司招贤纳士，欢迎加入！",
      "link": "https://www.v2ex.com/t/1152577#reply3",
      "published": "2025-08-15T03:03:02+00:00",
      "timestamp": 1755226982,
      "summary": "AI Agent 算法工程师<br>职位描述<br>我们正在寻找一位全职算法工程师加入我们的团队，参与大模型 Agent 应用项目的开发。理想的候选人应具备扎实的机器学习和自然语言处理背景，拥有大模型 RAG 项目、MCP 、Agent 工作流等项目经验，并熟悉 RAG 相关技术和前沿论文。您将负责设计、开发和优化核心算法，确保系统的高效性和准确性。<br><br>职责<br>• 设计和实现大模型 Agent 系统的核心算法，包括检索、排序和生成模块。<br>• 优化现有算法以提高系统性能和准确性。<br>• 研究和实现最新的 RAG 相关技术，尤其是多模态向量化和检索召回。<br>• 与后端开发人员合作，将算法集成到系统架构中。<br>• 参与数据预处理和特征工程，提高模型效果。<br>• 进行实验设计、模型 Eval 评估和结果分析。<br>• 编写高质量、可维护的代码，并参与代码审查。<br>• 撰写技术文档和研究报告。<br><br><br>要求<br>• 计算机科学、人工智能或相关领域的硕士或博士学位。<br>• 精通 Python 及相关机器学习框架（如 PyTorch ）。<br>• 深入理解 RAG 技术，包括文本检索、语义匹配和生成模型。<br>• 熟悉大规模语言模型（如 GPT 系列）的应用和微调。<br>• 具有向量数据库（如 ElasticSearch, Faiss ）使用经验。<br>• 熟悉常见的 NLP 任务和评估指标。<br>• 具备较强的算法设计和问题解决能力。<br>• 良好的英语读写能力，能够阅读和理解最新的研究论文。<br><br>优先条件<br>• 具有开源项目贡献经验。<br>• 具备快速从代码框架到产品 prototype 的能力。<br>• 了解前端技术（如 React ）和后端框架（如 Flask ）。<br><br><br>Python 后端工程师<br>我们正在寻找一位技术娴熟且经验丰富的后端开发工程师加入我们的团队，参与大模型 RAG 项目的开发。理想的候选人应具备扎实的 Python 编程背景，拥有 RESTful API 开发经验，并熟悉各种后端技术和框架。您将负责开发、维护和优化系统的后端组件，确保与前端服务和第三方应用程序的无缝集成。<br><br>职责<br>•\t开发和维护 RAG 项目的后端服务和 API 。<br>•\t与前端开发人员合作，将用户界面元素与服务器端逻辑集成。<br>•\t优化应用程序以实现最大速度和可扩展性。<br>•\t实施安全和数据保护措施。<br>•\t维护数据库，并且保持数据库之间的通信。<br>•\t排查和调试应用程序。<br>•\t参与代码审查并提供建设性反馈。<br>•\t云端部署项目、负载均衡。<br><br>要求<br>•  具有后端开发工程师或类似职位的工作经验。<br>•  精通 Python 及相关框架（如 Flask ）。<br>•  具有 RESTful API 和 Web 服务开发经验。<br>•  熟悉数据库系统（如 MySQL 、ElasticSearch ）和 ORM 框架。熟悉 Nginx 。<br>•  了解前端技术（如 React ）者优先。<br>•  具有版本控制系统（如 Git ）使用经验。<br>熟悉容器化和编排工具（如 Docker 、Kubernetes ）。<br>•  具备较强的问题解决能力和细节关注能力。<br>•  优秀的沟通和团队合作能力。<br>•  能够独立工作并有效管理时间。<br><br>优先条件<br>•  具有云服务（如 Azure 、GCP ）使用经验。<br>•  了解 NLP 和机器学习概念。",
      "content": "AI Agent 算法工程师<br>职位描述<br>我们正在寻找一位全职算法工程师加入我们的团队，参与大模型 Agent 应用项目的开发。理想的候选人应具备扎实的机器学习和自然语言处理背景，拥有大模型 RAG 项目、MCP 、Agent 工作流等项目经验，并熟悉 RAG 相关技术和前沿论文。您将负责设计、开发和优化核心算法，确保系统的高效性和准确性。<br><br>职责<br>• 设计和实现大模型 Agent 系统的核心算法，包括检索、排序和生成模块。<br>• 优化现有算法以提高系统性能和准确性。<br>• 研究和实现最新的 RAG 相关技术，尤其是多模态向量化和检索召回。<br>• 与后端开发人员合作，将算法集成到系统架构中。<br>• 参与数据预处理和特征工程，提高模型效果。<br>• 进行实验设计、模型 Eval 评估和结果分析。<br>• 编写高质量、可维护的代码，并参与代码审查。<br>• 撰写技术文档和研究报告。<br><br><br>要求<br>• 计算机科学、人工智能或相关领域的硕士或博士学位。<br>• 精通 Python 及相关机器学习框架（如 PyTorch ）。<br>• 深入理解 RAG 技术，包括文本检索、语义匹配和生成模型。<br>• 熟悉大规模语言模型（如 GPT 系列）的应用和微调。<br>• 具有向量数据库（如 ElasticSearch, Faiss ）使用经验。<br>• 熟悉常见的 NLP 任务和评估指标。<br>• 具备较强的算法设计和问题解决能力。<br>• 良好的英语读写能力，能够阅读和理解最新的研究论文。<br><br>优先条件<br>• 具有开源项目贡献经验。<br>• 具备快速从代码框架到产品 prototype 的能力。<br>• 了解前端技术（如 React ）和后端框架（如 Flask ）。<br><br><br>Python 后端工程师<br>我们正在寻找一位技术娴熟且经验丰富的后端开发工程师加入我们的团队，参与大模型 RAG 项目的开发。理想的候选人应具备扎实的 Python 编程背景，拥有 RESTful API 开发经验，并熟悉各种后端技术和框架。您将负责开发、维护和优化系统的后端组件，确保与前端服务和第三方应用程序的无缝集成。<br><br>职责<br>•\t开发和维护 RAG 项目的后端服务和 API 。<br>•\t与前端开发人员合作，将用户界面元素与服务器端逻辑集成。<br>•\t优化应用程序以实现最大速度和可扩展性。<br>•\t实施安全和数据保护措施。<br>•\t维护数据库，并且保持数据库之间的通信。<br>•\t排查和调试应用程序。<br>•\t参与代码审查并提供建设性反馈。<br>•\t云端部署项目、负载均衡。<br><br>要求<br>•  具有后端开发工程师或类似职位的工作经验。<br>•  精通 Python 及相关框架（如 Flask ）。<br>•  具有 RESTful API 和 Web 服务开发经验。<br>•  熟悉数据库系统（如 MySQL 、ElasticSearch ）和 ORM 框架。熟悉 Nginx 。<br>•  了解前端技术（如 React ）者优先。<br>•  具有版本控制系统（如 Git ）使用经验。<br>熟悉容器化和编排工具（如 Docker 、Kubernetes ）。<br>•  具备较强的问题解决能力和细节关注能力。<br>•  优秀的沟通和团队合作能力。<br>•  能够独立工作并有效管理时间。<br><br>优先条件<br>•  具有云服务（如 Azure 、GCP ）使用经验。<br>•  了解 NLP 和机器学习概念。",
      "author": "tntblhw",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "02ac71b10728",
      "blog_name": "V2EX酷工作",
      "title": "各位 V 友，要暂时离开了，希望能快速找到工作继续跟你们逛 V 站",
      "link": "https://www.v2ex.com/t/1152570#reply8",
      "published": "2025-08-15T02:50:09+00:00",
      "timestamp": 1755226209,
      "summary": "一直都是拿 1 万多的 iOS 开发，然后一下就到了 30 岁，还没做两年又被裁员，还没在一家公司做过超过 3 年的，也是运气、能力、环境等因素的量子纠缠结果吧。<br><br>哈哈哈哈，苦中作乐笑一下，大家加油，希望还能找到程序员的工作。",
      "content": "一直都是拿 1 万多的 iOS 开发，然后一下就到了 30 岁，还没做两年又被裁员，还没在一家公司做过超过 3 年的，也是运气、能力、环境等因素的量子纠缠结果吧。<br><br>哈哈哈哈，苦中作乐笑一下，大家加油，希望还能找到程序员的工作。",
      "author": "finolaire",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "47b01d6e8f58",
      "blog_name": "V2EX酷工作",
      "title": "小红书客户端架构、稳定性、性能、端智能方向持续招人，欢迎来投",
      "link": "https://www.v2ex.com/t/1152563#reply0",
      "published": "2025-08-15T02:31:02+00:00",
      "timestamp": 1755225062,
      "summary": "<p>iOS 、Android 、鸿蒙都需要，HC 多多，有意可发简历至邮箱 d2VueWUyQHhpYW9ob25nc2h1LmNvbQ==</p>",
      "content": "<p>iOS 、Android 、鸿蒙都需要，HC 多多，有意可发简历至邮箱 d2VueWUyQHhpYW9ob25nc2h1LmNvbQ==</p>",
      "author": "cyningxu",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "7f9ddd3e4e3d",
      "blog_name": "V2EX酷工作",
      "title": "如果以后年龄大了不做程序员了，你会选择做什么？",
      "link": "https://www.v2ex.com/t/1152555#reply117",
      "published": "2025-08-15T02:00:29+00:00",
      "timestamp": 1755223229,
      "summary": "<p>感觉程序员没法像医生/律师一样越老越值钱，等到 40 岁 50 岁不写代码了，你准备做什么？   </p>\n<p>欢迎大家集思广益，提前规划“老年职业生涯”。</p>",
      "content": "<p>感觉程序员没法像医生/律师一样越老越值钱，等到 40 岁 50 岁不写代码了，你准备做什么？   </p>\n<p>欢迎大家集思广益，提前规划“老年职业生涯”。</p>",
      "author": "GaryLee",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "679e67a99d77",
      "blog_name": "V2EX酷工作",
      "title": "毕业前最后一年怎样救档",
      "link": "https://www.v2ex.com/t/1152551#reply50",
      "published": "2025-08-15T01:59:28+00:00",
      "timestamp": 1755223168,
      "summary": "感觉秋招啥都没捞到，目前博士毕业焦虑，找工作更慌。<br><br>博士四年，两年在国内，两年在坡县科技局。<br>到现在，除了坡县老板可以让我去做博后，还有坡县一些小厂（领英上联系的，感觉都不靠谱。），没有任何到手的选择。<br><br>但我最痛苦的是，读博这些年，已经深刻的认识到自己完全不是科研的料子。转头想去业界，关系铁的朋友，全是去研究所或者体制的，帮我内推的人太少，发现业界想找合适的工作太难了啊。<br><br>有没有大佬看看我简历还有啥可以抓紧提升的方向吗： <a href=\"https://jingcjie.top/\" target=\"_blank\">https://jingcjie.top/</a><br><br>我已经想透了，实在不行就延毕半年，但是全日制博士延毕压力真的好大，学校/国家工资也会停掉。要不就去坡县做博后苟着，但又是浪费时间（不做研究的话，博后基本没意义。）",
      "content": "感觉秋招啥都没捞到，目前博士毕业焦虑，找工作更慌。<br><br>博士四年，两年在国内，两年在坡县科技局。<br>到现在，除了坡县老板可以让我去做博后，还有坡县一些小厂（领英上联系的，感觉都不靠谱。），没有任何到手的选择。<br><br>但我最痛苦的是，读博这些年，已经深刻的认识到自己完全不是科研的料子。转头想去业界，关系铁的朋友，全是去研究所或者体制的，帮我内推的人太少，发现业界想找合适的工作太难了啊。<br><br>有没有大佬看看我简历还有啥可以抓紧提升的方向吗： <a href=\"https://jingcjie.top/\" target=\"_blank\">https://jingcjie.top/</a><br><br>我已经想透了，实在不行就延毕半年，但是全日制博士延毕压力真的好大，学校/国家工资也会停掉。要不就去坡县做博后苟着，但又是浪费时间（不做研究的话，博后基本没意义。）",
      "author": "jingcjie",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "cd1dea122042",
      "blog_name": "V2EX酷工作",
      "title": "帮忙修复一个 golang 的连接问题，红包 50 元",
      "link": "https://www.v2ex.com/t/1152547#reply17",
      "published": "2025-08-15T01:55:43+00:00",
      "timestamp": 1755222943,
      "summary": "问题是服务端连接断开后，或者服务端完全挂壁了之后，本地的透明代理的协程并没有关闭，且 TCP 状态还保持着，目标，服务端断开后，客户端自动断开与被代理端的 tcp 连接<br><br><a href=\"https://github.com/fqdeng/x-proxy\" target=\"_blank\">https://github.com/fqdeng/x-proxy</a><br><br>感谢",
      "content": "问题是服务端连接断开后，或者服务端完全挂壁了之后，本地的透明代理的协程并没有关闭，且 TCP 状态还保持着，目标，服务端断开后，客户端自动断开与被代理端的 tcp 连接<br><br><a href=\"https://github.com/fqdeng/x-proxy\" target=\"_blank\">https://github.com/fqdeng/x-proxy</a><br><br>感谢",
      "author": "logic2",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "4ea75e621cc8",
      "blog_name": "V2EX酷工作",
      "title": "V2 有 40 岁以上的老哥失业后咸鱼翻身的吗",
      "link": "https://www.v2ex.com/t/1152529#reply21",
      "published": "2025-08-15T01:20:09+00:00",
      "timestamp": 1755220809,
      "summary": "<p>40 岁之前没攒下钱<br>\n或者赚了钱投了房产等无法变现的资产<br>\n40 岁之后失业了\n靠什么生计可以避免生活质量不下降</p>",
      "content": "<p>40 岁之前没攒下钱<br>\n或者赚了钱投了房产等无法变现的资产<br>\n40 岁之后失业了\n靠什么生计可以避免生活质量不下降</p>",
      "author": "milala",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "3a30c6c3ec37",
      "blog_name": "V2EX技术专区",
      "title": "你们在设计 restful api 时会用 put 和 delete 吗？",
      "link": "https://www.v2ex.com/t/1152509#reply120",
      "published": "2025-08-15T00:17:48+00:00",
      "timestamp": 1755217068,
      "summary": "<p>我一直用 get 和 post ，完全可以满足需求，我不知道是否有业务场景是使用 put 和 delete 会带来好处的，我能想到的就是可以一眼看出接口的作用是什么。使用 put 和 delete 在功能性、安全性、性能上能带来好处吗？</p>",
      "content": "<p>我一直用 get 和 post ，完全可以满足需求，我不知道是否有业务场景是使用 put 和 delete 会带来好处的，我能想到的就是可以一眼看出接口的作用是什么。使用 put 和 delete 在功能性、安全性、性能上能带来好处吗？</p>",
      "author": "red13",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "7a15f891bfde",
      "blog_name": "V2EX技术专区",
      "title": "一加限制解锁，搞机人何去何从？为何国产成了众矢之的？",
      "link": "https://www.v2ex.com/t/1152508#reply152",
      "published": "2025-08-15T00:16:21+00:00",
      "timestamp": 1755216981,
      "summary": "前面看了两个大佬在安卓板块的帖子，底下很多人说国产怎么这么，但是三星 oneui8 的收紧怎么没人说呢，另外想知道 v 友们如果一加这边真走了猴米老路以后去哪搞机，真我？魅族？ pixel ？ nothing ？我第一台 root 机是小米 MIX2s ，后面买了一加 8pro ，因为小米高考又买了 ace3 和 13 ，总体体验还不错的。想听听大佬们的看法<br>（引战和见证自觉远离，不要把帖子送进水深火热）",
      "content": "前面看了两个大佬在安卓板块的帖子，底下很多人说国产怎么这么，但是三星 oneui8 的收紧怎么没人说呢，另外想知道 v 友们如果一加这边真走了猴米老路以后去哪搞机，真我？魅族？ pixel ？ nothing ？我第一台 root 机是小米 MIX2s ，后面买了一加 8pro ，因为小米高考又买了 ace3 和 13 ，总体体验还不错的。想听听大佬们的看法<br>（引战和见证自觉远离，不要把帖子送进水深火热）",
      "author": "ysxb1145",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "4629529a01a1",
      "blog_name": "V2EX酷工作",
      "title": "程序员将来会沦为专门给 AI 擦屁股的人吗？",
      "link": "https://www.v2ex.com/t/1152507#reply35",
      "published": "2025-08-15T00:09:27+00:00",
      "timestamp": 1755216567,
      "summary": "<p>正在用 Bayt 播客中文收听 Big Technology Podcast 播客对话 Replit CEO Amjad Masad 这期播客。</p>\n<p>访谈中主持人提到了一个很普遍的担忧，程序员会沦为 AI 代码的清理员吗？</p>\n<p>Amjad 给出的答复是有些重要的岗位依然无法被代替。比如说特斯拉的 AI 驾驶代码，我们不希望让 AI 去写，我们希望它绝对安全绝对准确。</p>\n<p>而对于一些前端代码则很有可能，确实被 AI 替代，所以 AI 非常适合快速迭代验证市场的场景。</p>\n<p><img alt=\"截图\" class=\"embedded_image\" src=\"https://i-blink.csdnimg.cn/direct/062a27d612204e988a00b8092c1aa455.png\"></p>",
      "content": "<p>正在用 Bayt 播客中文收听 Big Technology Podcast 播客对话 Replit CEO Amjad Masad 这期播客。</p>\n<p>访谈中主持人提到了一个很普遍的担忧，程序员会沦为 AI 代码的清理员吗？</p>\n<p>Amjad 给出的答复是有些重要的岗位依然无法被代替。比如说特斯拉的 AI 驾驶代码，我们不希望让 AI 去写，我们希望它绝对安全绝对准确。</p>\n<p>而对于一些前端代码则很有可能，确实被 AI 替代，所以 AI 非常适合快速迭代验证市场的场景。</p>\n<p><img alt=\"截图\" class=\"embedded_image\" src=\"https://i-blink.csdnimg.cn/direct/062a27d612204e988a00b8092c1aa455.png\"></p>",
      "author": "Kakarottoxxxx",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "9f83c1f85107",
      "blog_name": "美团技术团队",
      "title": "美团智能头盔研发实践系列01：硬件设计篇",
      "link": "https://tech.meituan.com/2025/08/15/meituan-smart-helmet-01.html",
      "published": "2025-08-15T00:00:00+00:00",
      "timestamp": 1755216000,
      "summary": "本文系《美团智能头盔研发实践》系列的第一篇文章，聚焦硬件设计维度。针对外卖骑手传统头盔佩戴体验不佳等痛点，从安全保障、体验优化、效率提升三大方向切入，详细解析安全防护、多传感器预警、通风减重、长效续航、音频降噪、工艺控制等关键技术，并提炼研发过程中行之有效的设计经验。",
      "content": "\n<h2>0. 前言</h2><p>在现代城市的喧嚣中，外卖骑手穿梭于大街小巷，只为将餐食及时送达顾客手中。然而，这份看似简单的工作背后，却隐藏着诸多痛点。骑手们面临的交通环境复杂，这不仅对他们自身的安全构成严重威胁，也增加了交通事故的风险。同时，在配送过程中，骑手需要频繁操作手机接单、打电话与顾客沟通，这在骑行过程中极不方便，还容易分散注意力。此外，长时间佩戴传统头盔，闷热、不舒适以及头盔稳定性差等问题，也极大地影响了骑手的工作体验。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/6b080e0c88331ef0917d3c6f4fd6284a465928.png\"></p><p>面对这些痛点，美团推出了智能头盔，努力为骑手们提供一种全新的安全守护解决方案，展现出安全保障、体验优化以及效率提升三大核心价值。本文为美团技术团队在硬件设计层面的一些思考和探索。</p><h2>1. 智能头盔革新：重新定义配送安全装备</h2><p>美团智能头盔作为专为外卖骑手打造的智能安全装备，在传统头盔基础上，增加了喇叭、麦克风、快捷按键、尾灯等硬件模组，具备蓝牙耳机/语音助手功能，实现智能语音交互、实时感知戴盔、碰撞和摔倒等功能。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/e190c02956f9934fe5886615c3099b1f1037216.png\"></p><p>美团研发智能头盔已有6年时间，研发模式从ODM、JDM直至OEM纯自研模式，目前已覆盖全国S/A/B级别28座城市的全量专送骑手，累计出货量突破100万，已经成为B端/C端智能头盔行业出货量最大的机构之一。这些智能头盔，针对行业痛点，为外卖骑手提供了更安全、高效、领先行业的戴盔体验，努力为外卖骑手提供了一份守护。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/38278bb8a76f4127bf074440f8116e9a960606.png\"></p><h2>2. 安全防护体系：超越国标与主动预警的双重守护</h2><h3>2.1 更严苛的头盔设计标准</h3><p>头盔设计需要满足国家强制标准，在行业中，电动车头盔设计满足电动自行车乘员头盔标准就足够了（GB 811-2022 B3电动自行车乘员头盔国家标准）。但从骑手安全角度出发，美团主动将设计标准提升至摩托车头盔级别（GB 811-2022 A3摩托车乘员头盔国家标准）。世界卫生组织（WHO）数据显示，佩戴头盔能显著降低摩托车事故伤亡率，可减少近40%的死亡风险、超70%的严重受伤概率。美团智能头盔从基础防护层面，努力为骑手安全筑牢根基。</p><h3>2.2 智能预警系统主动防护安全</h3><p>美团智能头盔以「传感器 + 算法」构建主动安全防护网，将被动保护升级为智能预警。</p><ul><li><strong>佩戴状态智能监测</strong>：在实际工作中，即便配备了头盔，仍存在部分骑手有盔不戴的现象。美团智能头盔通过三轴传感器与红外传感器的联动组合，并与骑手App紧密联动，有效解决了这一难题。一旦检测到骑手未正确佩戴头盔，系统会及时发出提醒，确保骑手在骑行过程中时刻处于头盔的保护之下。</li><li><strong>自适应尾灯预警</strong>：夜晚或光线较暗的环境下，骑行安全面临更大挑战。美团智能头盔内置光敏传感器，当外界光线变弱时，自感应尾灯会自动亮起，而且其较高的尾灯位置，能够有效地引起大吨位货车、卡车等高驾驶位司机的注意，减少因驾驶盲区而引发的事故。</li><li><strong>碰撞摔倒应急响应</strong>：头盔还具备碰撞摔倒检测功能，一旦检测到骑手摔倒，会在第一时间发出报警，并迅速联系骑手确认情况，为骑手的生命安全增添了一份有力的保障。</li></ul><h3>2.3 三重铠甲防护电池安全</h3><p>针对智能头盔复杂的工况，如不同地区环境温度的差异、对各类手机充电器和充电线的适配、长期高频次充电习惯带来电池寿命衰减、佩戴区域敏感等考虑。头盔设计了三重防护“铠甲”，守护每一次骑行。</p><ul><li><strong>来自底层硬件的“钢铁守卫”</strong>：智能充电芯片24小时监控电压电流，电池过压、过流和过放时快速断电。即使芯片失效，电池自带过充、过放、短路保护提供双重保险，安全无死角。同时高精度电量计实时采集电池数据，精准监测电池健康状态。针对目前市场上由于劣质或长期破损的充电线在TYPE_C处出现的自发热问题，头盔在TYPE_C处加入NTC实时温度检测，该处高温时自动停止充电。避免该处发热引起的电池安全隐患，进一步提高头盔电池的安全保障。</li><li><strong>来自软件的“温度管家”</strong>：0℃~55℃ 智能温控，电池温度超出范围立刻停止充电。同时具备高温自动紧急处理，充电时超过75°语音告警。未充电时超过75°自动切断电池，进入安全模式。</li><li><strong>来自云端的“大数据哨兵”</strong>：实时分析头盔上报的数据，提前预警异常。通知官方介入，防患于未然。电池安全防护的引入是智能头盔向高可靠性、长生命周期发展的必然结果。它既是功能实现的基石，也是用户体验的核心要素。</li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/2461516338182c02425c8bf53bd0a3c31158615.png\"></p><h2>3. 穿戴体验革命：轻量化与功能性的极致平衡</h2><h3>3.1 从头盔到电子模组的极致结构减重技术</h3><p>对于外卖骑手而言，头盔减重技术绝非简单的数字游戏，而是关乎职业体验的关键革新。700g左右的传统头盔如同 “铁帽” 般压在头顶，每骑行一小时就可能累积近半公斤的垂直压力，导致颈椎劳损与疲劳感加剧。美团智能头盔通过「材料基因 + 工艺重构 + 系统集成」的三重减重革命，将整机重量降至550g，在摩托车头盔国标框架内实现「安全不减重」的技术突破。</p><ul><li><strong>吸塑工艺 - 给头盔外壳“削骨减肥”</strong>：摩托车头盔设计的困难点在于，头盔保护头部的要求和轻量化之间的矛盾，行业上一般使用注塑的方式生产头盔外壳，常用的工程塑料成本低，但密度较高，轻量化空间有限。而且因注塑工艺的局限性，外壳无法设计的很薄，否则将无法生产。K3SX1智能头盔采用吸塑一体成型工艺替代传统注塑方案，吸塑工艺可以将头盔外壳设计的很薄，配合高强度PC材料，头盔外壳厚度可减薄一半，大幅度减轻重量。</li><li><strong>双密度材料 - 给防护层“精准减脂”</strong>：吸塑一体成型工艺解决外壳重量的问题，但为了通过穿刺测试，缓冲层的密度还是比较大，导致缓冲层重量过重。双密度减重技术通过精确控制材料密度分布（头盔对安全要求高的部分使用高密度缓冲材料，头盔主体部分使用低密度缓冲材料），在保证外壳抗冲击、穿刺强度符合GB 811-2022摩托车乘员头盔国家标准的前提下，实现结构轻量化。经实测，相较于前代产品，头盔盔体重量减轻85g，降幅达25%。</li><li><strong>配件系统 - 从镜片到织带的“全身协同瘦身”</strong>：镜片、织带等配件通过高强度复合材料应用与薄壁化设计，在满足抗穿透性与佩戴安全性的基础上，进一步降低产品整体重量。</li></ul><p><img alt=\"双密度盔体：头盔测试区部分使用高密度缓冲材料（灰色），头盔主体部分使用底密度缓冲材料（黄色）\" src=\"https://p0.meituan.net/meituantechblog/c8c82070f0fa6ee5cbed15850da0c15f1128495.png\"></p><ul><li><strong>电子模组 - 模块化集成的“系统级轻量革命”</strong>：电子系统，采用模块化设计方案，分为主控模组、喇叭模组、按键模组和麦克红外模组。采用一拖三的方式，都和主控模组用线连接，没有对接端子，可以实现防水和减重。模组采用薄壁轻量化设计，在保证模型性能不受影响的前提下，有效降低了模组的重量。主控模组集成尾灯设计，相比单独的尾灯，减少了尾灯配件，大幅降低重量。麦克红外模组，采用灌胶密封的工艺，相比常规AB壳方案，减少了后壳、密封圈、螺丝、线束密封等配件，有效降低了组装复杂性和重量。</li></ul><p>通过盔体、镜片、织带、电子模组等多重的减重措施，最终实现整机重量仅550g，成为当前符合摩托车头盔国标认证的智能头盔中最轻量级产品。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/ad4ac6911163f4afb0aa1ed17ec7c29a517436.png\"></p><h3>3.2 多孔道通风结构设计与安全强化</h3><p>对骑手而言，头盔通风技术是对抗酷暑的关键刚需。传统头盔在高温下如蒸笼，易致头部闷热、注意力分散，甚至引发安全隐患。为解决传统头盔通风不足问题，K3SX1 在原有 4 个通风孔基础上，新增 16 个导流式通风孔，构建 20 孔三维贯通通风系统。</p><ul><li><strong>多孔道通风结构设计</strong>：在头盔行业里，一般只有自行车头盔顶部有开孔，且因自行车头盔标准无穿刺测试要求，开孔设计挑战较低；而摩托车头盔出于安全考量，顶部通常不设置开孔，即便少数产品开孔，也多见于注塑外壳的头盔，吸塑一体成形的摩托车头盔开孔案例极少。这一设计面临着国标穿刺测试（要求头盔抵御3kg钢锥从1m高度自由落体的冲击）的严峻挑战。研发团队通过有限元分析（FEA）技术和实际实验，对不同孔径、缓冲层密度方案进行验证，最终确定采用双密度方案与局部PC片加强设计，在保证通风效率提升的同时，确保穿刺测试通过率达100%，实现通风性能与安全标准的完美平衡。</li></ul><p><img alt=\"双密度方案与局部加强设计\" src=\"https://p0.meituan.net/meituantechblog/d1fe626fe219dc06359e94d707304160389178.png\"></p><ul><li><strong>空气动力学优化与热湿交换效率提升</strong>：基于CFD（计算流体动力学）仿真技术，K3SX1的通风系统采用前侧进气口导流设计与后侧负压抽气结构，360°全方面散热，骑行风感更加强劲。搭配疏水速干三明治网布内衬，加速导湿排汗，显著改善骑手长时间作业的热舒适性。</li></ul><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/52c324d6519c170723cc8d8c5ab9406f749824.png\"></p><h3>3.3 硬件极致设计引领续航三倍飞跃</h3><p>传统智能头盔续航体验较差，骑手基本一天就需要充电一次，严重影响骑手的工作效率和使用体验。为了解决头盔续航时间短这个痛点，通过分析问题的根本原因，发现主控系统+蓝牙系统+通信模组的多系统工作模式，以及音频功放器件是功耗的主要消耗点。K3SX1从这两个点进行重构和变革，大幅降低产品的能耗，提升产品的续航能力。</p><ul><li><strong>复杂多系统到单中国“芯”的改革</strong>：多系统的复杂硬件架构，硬件复杂度和功耗都居高不下，全新的硬件设计采用全自主知识产权的国产高性能蓝牙芯片，芯片采用32位双核 DSP架构，系统时钟最高达160MHz，具备更广泛的匹配兼容性与更智能的内置算法等特点。通过优化主芯片电源管理单元、采用先进制程工艺等创新，实现主芯片在高性能运行的同时将功耗控制在较低水平。芯片的静态功耗低于100uA，工作功耗仅有mA级别。单芯片系统也大幅减少了外设器件，同时大幅降低整体功耗。</li><li><strong>音频功放的换代升级</strong>：音频功放是头盔的使用场景中使用频次最高的器件，传统的AB类音频功放，工作效率低。K3SX1把音频功放从AB类升级为D类，工作效率由50%提升至 90%，大幅延长电池续航时间。在电池容量减少40%（从 2000mAh 降至 1200mAh）的情况下，续航时间从12小时提升至36小时，达到行业领先水平，彻底消除骑手对电量不足的担忧，让其更专注于骑行工作。</li></ul><h3>3.4 六层堆叠助力出色音频</h3><p>在智能头盔行业，主流方案多依赖高性能算法芯片实现降风噪，虽有效但成本较高；部分产品尝试采用泡棉降噪，却因泡棉面积小导致过滤效果有限，且吸水后性能易失效。K3SX1通过六层堆叠设计，突破传统方案局限，实现50km/h骑行速度下的清晰语音通话。</p><ul><li><strong>下沉式拾音区域设计</strong>：拾音区域低于头盔前沿，可以减弱风对拾音面的冲击，使气流绕过拾音区域，减少湍流噪声。</li><li><strong>高强度栅格化外壳</strong>：镂空栅格设计确保充足拾音面积，避免声学遮挡，高强度外壳可以物理防护内部的防风绵，防止损坏。</li><li><strong>大面积镀疏水膜防风绵</strong>：高密度大面积海绵结构，能够对骑行中产生的风噪进行均匀过滤与消解。防风泡绵采用整体真空镀疏水涂层的工艺，不仅能够做到不沾水、不吸水、不存水，有效防止雨水、汗水等对麦克风的侵蚀，还能在全生命周期内保持稳定的物理防风降噪性能。</li><li><strong>防水透声膜</strong>：既能阻挡水、灰尘等杂质进入，又能保证声波高效穿透，平衡防护性与拾音灵敏度。</li><li><strong>2mm深36°密闭式拾音通道</strong>：通过36°倾斜角收声孔设计，使得拾音通道的深度只有2mm，可以有效减小声波传导损耗，确保拾音清晰。拾音孔与PCBA通过胶水密封粘接，杜绝漏音与二次回音，保证语音信号纯净度。</li><li><strong>高性能音频处理芯片</strong>：主芯片其内置的音频编解码模块性能卓越，降噪算法更加智能，24bit DAC的SNR高达104dB，换算后噪声基底仅为4.5μV。芯片可对智能头盔接收和播放的音频信号进行高保真处理，确保骑手通话时，无论在嘈杂的城市街道，还是高速骑行的呼啸风声中，芯片也能通过智能音频算法有效过滤背景噪音，突出人声。保证骑手声音清晰、不失真，为骑手提供优质的沟通体验。</li></ul><p>K3SX1通过 “硬件结构创新 + 芯片算法赋能 + 模块化工程思维”，多层结构与高性能芯片的协同设计，在强风环境降噪与成本控制间取得平衡，为智能头盔从 “功能型” 向 “普及型” 跨越提供了关键技术支撑。</p><p><img alt=\"36°倾斜角收声孔+栅格化外壳设计+高密度海绵物理降噪方案\" src=\"https://p0.meituan.net/meituantechblog/47dd88a4551caf05d4e0ff12d7694917486129.png\"></p><h3>3.5 极端环境适应</h3><p>在智能头盔领域，多数产品的防水标准仅设定在IPX4或IPX5等级，这意味着它们仅能抵御少量溅水或短时淋雨，一旦遭遇暴雨、强风裹挟雨水等极端天气，设备内部电子元件极易因进水短路而损坏。而美团智能头盔打破常规，以IPX6级防水性能脱颖而出。这一等级要求设备能承受强水流从任意方向持续喷射15分钟而不受损，相当于在每小时150毫米降水量的特大暴雨中电子模组不进水无损坏。</p><ul><li><strong>在设计上精益求精，提高防护级别</strong>：各个模块按照IPX7的要求进行设计，主控模组采用硅胶密封圈叠加设计，配合对外连接线束点胶密封，TypeC接口IPX7硅胶密封，按键位置大面积双面胶密封防水等方案，形成无缝防水屏障，确保各种苛刻的使用环境模组不进水。音频模块、麦克风等核心部件均配备防水透气膜，既能隔绝液态水侵入，又能平衡内部气压，防止因温差产生水雾凝结。</li><li><strong>在生产上严格要求，全检出货</strong>：模组全部通过气密检测设备进行检测，执行的测试标准是IPX7，进行严格管控全检测试出货，确保每一个智能头盔模组都具有卓越的防水性能。</li></ul><p>正是这些精密的设计与严苛的出厂测试，这种 “设计 + 生产” 双维度防水方案，让骑手在暴雨倾盆的街道、狂风呼啸的骑行途中，都能放心使用美团智能头盔，无需担忧雨水侵袭影响设备功能，真正实现风雨无阻地安全配送，为城市配送的高效运转筑牢可靠防线。</p><h2>4. 配送效率重构：人机协同的智能操作升级</h2><p>对骑手而言，配送效率直接关乎收入水平。美团智能头盔在提升配送效率方面，展现出了强大的功能。</p><ul><li><strong>一体化耳机设计</strong>：其一体化头盔耳机设计，极为便捷，拿起头盔自动开机，自动连接蓝牙，骑手戴上头盔后，无需再额外佩戴耳机。并且，通过先进的降噪算法，即使在高达50km/h 的骑行速度下，也能确保语音通话清晰流畅，让骑手与顾客、商家之间的沟通毫无障碍。</li><li><strong>实体按键一键接单</strong>：头盔上精心配备的大号实体按键，操作简便，骑手能够快速一键接单、确认到店、到客，以及接打电话。即便是在寒冷的冬天，骑手戴着手套也能轻松操作，无需拿出手机点击屏幕，大大节省了操作时间，提高了配送效率。</li><li><strong>大模型助手主动提率</strong>：此外，头盔所搭载的连接骑手 App 的大模型语音助手，更是骑手的得力助手。它不仅能在工作上为骑手提供路线规划、订单信息查询等帮助，还能在骑手感到疲惫或压力大时，给予情感上的支持与鼓励，让骑手在忙碌的工作中感受到温暖与关怀，以更饱满的精神状态投入到配送工作中。</li></ul><h2>5. 产业赋能实践：传统制造的智能化跃迁</h2><h3>5.1 传统头盔厂的技术短板</h3><ul><li><strong>音频性能测试的困境</strong>：智能头盔需要支持高质量的语音交互，因此必须进行精确的音频曲线测试（如频响、失真等）。传统头盔厂通常缺乏专业的声学实验室和测试设备，导致产品在音质方面表现不佳，骑手感觉声音刺耳，有杂音等。</li><li><strong>硬件生产测试系统的缺失</strong>：智能头盔涉及蓝牙模块、传感器、电池管理等复杂电子组件，需要专业的上位机测试系统来验证其稳定性。传统厂商往往依赖人工检测，效率低且难以覆盖所有故障模式。</li><li><strong>自动化程度低</strong>：智能头盔有很高的防水和性能要求，但传统头盔厂通常缺乏自动化设备，基本依赖手工操作造成组装速度慢，工艺不稳定，不同班次的产品性能差异较大。</li><li><strong>生产监控系统的缺失</strong>：智能头盔有许多电子器件，需要监控性能指标和追溯历史测试结果，但传统盔厂缺乏相应的系统监控，无法做到实时数据监控和历史追溯。</li></ul><h3>5.2 美团头盔产线的智能升级</h3><h4>5.2.1 六大核心工艺，打造极致可靠的头盔</h4><ul><li><strong>智能自动功能测试</strong>：智能系统检测按键、蓝牙、传感器等功能，不良品自动剔除，努力确保100%达标。</li><li><strong>高精度自动点胶</strong>：精准控制胶量与路径，提高密封性，彻底解决传统手工点胶的溢胶、漏胶问题。</li><li><strong>无人化锁螺钉</strong>：机器人精准紧固螺丝，扭矩实时监控，螺丝零松动、零滑牙。</li><li><strong>气密性测试</strong>：5秒快速筛查，微漏无所遁形，防水性能行业领先。</li><li><strong>音频调校+音频参数测试</strong>：智能声学实验室模拟真实场景，优化麦克风降噪算法，产线100%进行喇叭和麦克频响、失真、R&amp;B、平衡度等参数测试，确保通话质量。</li><li><strong>加速老化试验体系</strong>：85℃/85%RH双85测试，高强度温湿度循环+跌落测试+穿刺测试，保证头盔的寿命和安全性。</li></ul><p><img alt=\"六大核心工艺，打造极致可靠的头盔\" src=\"https://p0.meituan.net/meituantechblog/f3aabfd281063917325b0cf4200699b5933807.png\"></p><p>#### 5.2.2数字化转型：老产线的华丽转身</p><ul><li><strong>数据驱动决策</strong>：MES系统实时监控生产参数，问题提前预警，问题追溯源头。</li><li><strong>柔性生产</strong>：同一产线可快速切换不同型号，换型时间缩短50%。</li><li><strong>人机协同</strong>：工人从重复劳动解放，专注工艺优化与技术创新。</li></ul><h2>6. 市场与行业影响：用数据树立价值新标杆</h2><p>K3SX1产品从骑手到业务逐步得到认可，佩戴舒适度、蓝牙语音体验和性价比等方面产品力显著提升，满意度从3.2提升至4.2（5分制），语音功能使用率从加盟54%提升至加盟87%、众包98%。</p><p>因为智能头盔功能实用性决策购买的骑手较多（79%），朋友推荐成为第二高的骑手了解智能头盔的渠道（最新占比提升至22%）。该产品的成功推出，不仅为外卖骑手提供了更优质的防护装备解决方案，更推动行业从单纯的功能竞争转向用户体验与成本效益并重的新阶段，为智能头盔产品的发展树立了新的技术与价值标杆。</p><h2>7. 未来技术前瞻：硬件升级与智能伙伴的革新</h2><p>美团智能头盔，通过多年的经验积累和技术迭代，新一代K3SX1智能头盔头盔通过多方面技术改进实现有效减重，兼顾安全、舒适性与性能提升。随着美团智能头盔的NPS和满意度屡创新高，取得了历代智能头盔最佳表现。</p><p>在未来，美团智能头盔搭载的大模型语音助手，将进化为骑手的 “全场景认知伙伴”。它不仅能精准处理 “规划路线”、“ 播报订单”等基础指令，更能通过深度学习骑手的配送习惯与行为模式，实现主动式智能辅助 —— 比如在暴雨天气自动播报实时路况并推荐防滑路线，检测到骑手连续配送超3小时后主动推送附近休息站信息，甚至能根据商家出餐速度预判延误风险，提前建议骑手调整接单节奏。</p><p>在复杂场景中，语音助手可通过多轮对话理解骑手需求，例如当骑手说“找最近的修车站”，系统会同步考虑距离、口碑及维修时长，生成带语音导航的优选方案；遇到顾客改地址等突发情况，还能自动生成标准化沟通话术并同步更新配送系统。更值得期待的是，其情感交互能力将实现“温度服务”—— 在骑手遭遇差评时推送心理疏导语音，节日时送上定制化问候，甚至能根据骑手的方言习惯调整播报语气，让科技真正成为有“人情味”的工作伙伴，彻底重构即时配送行业的人机协作范式。</p><p>未来的美团智能头盔，硬件上还会搭载更加强大的传感器，帮助骑手解决更加复杂的问题。并逐步推广到全国每一个骑手，让他们都能体验到科技带来的价值和快乐，为骑手带来更安全、高效、舒适的工作体验，不断引领智能头盔行业迈向新的高度。</p>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "939e6f530f1a",
      "blog_name": "美团技术团队",
      "title": "美团智能头盔研发实践系列02：软件功能篇",
      "link": "https://tech.meituan.com/2025/08/15/meituan-smart-helmet-02.html",
      "published": "2025-08-15T00:00:00+00:00",
      "timestamp": 1755216000,
      "summary": "本文系《美团智能头盔研发实践系列》的第二篇文章，围绕智能头盔如何通过主动安全和被动安全相结合的方式有效保护骑手，主要包括智能头盔骑行通话质量强化、智能语音助手、碰撞摔倒监控等三项软件能力。",
      "content": "\n<h2>01. 引言</h2><p>美团智能头盔作为专为外卖骑手打造的智能安全装备，具备蓝牙通话、戴盔识别、智能语音助手、碰撞摔倒监控等功能，核心软件功能围绕如何通过主动安全和被动安全相结合的方式有效保护骑手。</p><p>本期分享主要介绍智能头盔骑行通话质量、智能语音助手、碰撞摔倒监控三项软件能力。其中“骑行通话质量和智能语音助手”降低骑手操作手机导致的“分心”，帮助骑手“防患于未然”。“碰撞摔倒监控”最大限度的保护骑手、快速的感知事故和触发救治。</p><h2>02. 安全风险与体系</h2><h3>2.1 安全挑战</h3><p>外卖骑手面临着独特的安全挑战，他们的工作性质，如午晚高峰短时集中的压力和交通复杂环境，显著增加了事故风险。</p><ul><li><strong>事故和违规行为</strong>：研究表明，工作压力与骑手的分心驾驶和危险驾驶行为之间存在关联，这些行为往往导致交通事故的发生。例如，为了赶时间，骑手可能会超速、闯红灯或逆行。</li><li><strong>车辆类型</strong>：许多外卖骑手使用摩托车或电动自行车，这些车辆本身就具有不稳定性，且缺乏足够的安全保护措施 。尤其是在亚洲，摩托车因其效率而成为首选，但也导致了交通安全事故的增加。</li><li><strong>工作环境</strong>：外卖骑手有时需要在恶劣的天气条件下工作，这进一步增加了他们的道路安全风险。此外，长时间工作和不规律的休息也可能导致疲劳驾驶，影响骑手的反应能力和判断力。</li><li><strong>行为因素</strong>：骑手的安全态度和风险认知对其驾驶行为有重要影响。研究发现，安全知识的缺乏与骑手的不良驾驶行为有关。此外，工作场所的安全氛围也会影响骑手的安全合规行为。</li></ul><h3>2.2 安全体系</h3><p>骑手安全防护可以分为<strong>主动安全</strong>和<strong>被动安全</strong>两个方面，它们共同构成了骑行安全的完整体系。</p><p>1）<strong>主动安全是指在骑行过程中，通过技术手段和行为规范来预防事故的发生</strong>。例如，骑手应遵守交通规则，如不闯红灯、不超速、不随意变道等，这些行为有助于减少因人为失误导致的事故。此外，现代两轮车也配备了多种主动安全技术，如ABS（防抱死制动系统）、TCS（牵引力控制系统）等，这些系统通过传感器实时监测车轮状态，确保在紧急制动或加速时车辆仍能保持稳定。例如，业界某电动车企业在其两轮车上应用了AI视觉辅助系统，结合姿态感应系统，能够识别车辆倾倒、非正常移动等危险情况，从而提前预警。这些技术的引入，大大提升了骑行的安全性。</p><p>2）<strong>被动安全则是在事故发生时，通过防护装备、传感装备，最大限度地减少伤害、及时触发救治</strong>。例如，头盔是骑行者最重要的被动安全装备之一，它能够有效保护头部免受撞击，降低颅脑损伤的风险。此外，骑行手套、护膝、护肘等防护装备也能在摔倒时减少擦伤和扭伤。在车辆设计方面，一些高端两轮车也尝试引入类似汽车的被动安全设计，如带式座椅，以在碰撞时保护骑手。然而，由于两轮车的结构限制，其被动安全系统仍处于发展阶段，尚未达到与汽车同等水平。</p><p><strong>主动安全</strong>和<strong>被动安全</strong>并非孤立存在，而是相辅相成。骑手在日常骑行中应注重主动安全意识的培养，如佩戴护具、遵守交通规则、保持车距等，同时也要关注车辆的安全配置，合理利用主动安全技术，以降低事故发生的风险。只有在主动预防的基础上，被动安全措施才能发挥最大作用，为骑手提供全方位的保护。</p><p>随着科技的发展，越来越多的智能化技术被应用于外卖配送领域，这些技术不仅提升了骑行的安全性，也为未来两轮车的安全发展提供了更多可能性。</p><h2>03. 智能头盔安全能力</h2><h3>3.1 主动安全篇</h3><p>1）<strong>第一个主动安全能力——摩托骑行60km/h速度下双向听得清</strong>。骑行中操作手机进行通话和应用交互是导致骑手分心驾驶的主要原因，占比极高。配送骑手载具涵盖电动车与摩托车，虽然前者一般工况下均速不超过15km/h，但后者属于机动车，在部分不禁摩的城市，极端情况下，时速可达60km/h，对智能头盔降噪性能提出极限挑战。智能头盔作为长时佩戴装备，舒适性至关重要，开放式蓝牙耳机设计面临技术瓶颈：低频泄漏导致音质劣化、私密性差、环境噪声干扰严重以及高速风噪与回声对通话质量的毁灭性冲击。</p><p>智能硬件团队连续攻关物理降噪技术、波束成型技术、AGC和AEC算法技术，有效攻克了60km/h时速下降噪问题。物理降噪技术，采用气动学优化的头盔结构，结合轻量化抗冲击材料，从源头抑制风噪。波束成型（Beamforming）技术，通过调整两个麦克风的摆放位置和灵敏度，形成一个“拾音束”，保留目标方向的声音（人声），同时屏蔽其他方向的噪声。AGC自动增益控制算法、AEC回声消除算法，60km/h时速下精准分离人声与噪声。</p><p>依托仿真人头系统、精密麦克风阵列及人工嘴等专业设备进行声学验证，在严格模拟的60km/h骑行噪声、复杂社会生活及工地噪声背景下，智能头盔成功实现了对哈曼曲线目标的稳定达成——在时速60km的严苛环境下确保通话清晰度与私密性，显著减少骑手因操作手机导致的分心风险。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/7ad0d3ece9ae03c6052fe038c853314d12770159.png\"></p><p>2）<strong>第二个主动安全能力——智能语音助手降低手机操作繁琐性</strong>。除了通话，骑手骑行过程中存在大量手机交互需求，如接单/查看订单、回复消息、导航设置等。传统界面操作方式在骑行场景下存在重大安全隐患，根据数据统计骑手骑行时大概90%以上的操作都是与配送行为强相关。</p><p>安全需求和数据调研表明，语音交互是骑手在骑行或处理订单时更安全的交互方式，解放双手和双眼。伴随着AI大模型在意图理解、内容生成和泛化方面能力提升，通过AI助手 + 智能头盔结合，提升骑手Hands-Off能力、降低安全风险成为可能。</p><p>智能头盔内置语音关键词识别算法，“小灵小灵”一键唤醒智能助手。通过蓝牙与骑手手机连接，通过语音交互随时随地召唤AI能力助力接单决策、订单配送、违规申诉、IM沟通。“小灵小灵”，一句轻唤唤醒智能头盔连接履约垂域大模型。这不仅是语音助手，更是骑手的“云端搭档”。智能头盔连接履约垂域大模型，成为骑手AI能力的入口。</p><ul><li><strong>决策赋能</strong>：实时分析周边订单热力（如“现代城订单密集”），结合骑手位置智能规划路径，提升接单效率；</li><li><strong>情感交互</strong>：识别“订单太少”的焦虑情绪，提供解决方案，替代手机操作降低骑行风险；</li><li><strong>无缝协同</strong>：通过IM沟通模块自动生成话术模板，申诉违规订单时化身“数字律师”，守护骑手权益。</li></ul><blockquote><p>“小灵小灵，一会儿路上帮我接顺路的订单”。</p><p>“已帮你找到顺路订单”。</p><p>“小灵小灵，最近订单太少怎么办”。</p><p>“距您4公里的现代城目前订单较多，建议前往”。</p></blockquote><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/47b6c68c66adf695596f8bf12065a7991114234.png\"></p><h3>3.2 被动安全篇</h3><p>1）<strong>第一个被动安全能力——可靠的、苛刻的物理防护能力</strong>。智能头盔设计需要满足国家强制标准，行业上，电动车头盔设计满足电动自行车乘员头盔标准就足够了（GB 811-2022 B3 电动自行车乘员头盔国家标准）。但从骑手安全角度出发，我们主动将设计标准提升至摩托车头盔级别（GB 811-2022 A3 摩托车乘员头盔国家标准）。世界卫生组织（WHO）数据显示，佩戴头盔能显著降低摩托车事故伤亡率，可减少近 40% 的死亡风险、超 70% 的严重受伤概率。美团智能头盔从基础防护层面，为骑手安全筑牢根基：</p><ul><li><strong>保护头部免受冲击</strong>：智能头盔是外卖骑手最重要的安全装备之一，它能够有效吸收碰撞时产生的冲击力，防止头部受到严重伤害。在交通事故中，头部是最脆弱的部位，一旦与坚硬的路面或电线杆、行道树发生碰撞，后果不堪设想。头盔可以起到缓冲、减震的作用，从而降低受伤比例和死亡率。</li><li><strong>提高可见性</strong>：虽然头盔本身并不直接提高可见性，但其设计通常包括透气孔和通风系统，有助于骑手在骑行过程中保持头部的干爽和舒适。此外，头盔的反光背心等配件可以在夜间或光线不足的环境中提高骑手的可见性，减少交通事故的发生。</li><li><strong>增强舒适性和实用性</strong>：头盔的设计不仅注重安全性能，还兼顾了舒适性和实用性。例如，头盔内部设有缓冲层，可以吸收外力冲击，同时头盔内置的风道和前后换气口可以保持头部的通风和干燥。此外，一些高端头盔还配备了护目镜，可以有效阻挡灰尘和雨水，确保骑手的视野清晰。</li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/aa713a45952ffbc877571459bbf1d4cf77564.png\"></p><p>2）<strong>第二个被动安全能力——意外摔倒监护功能</strong>。交通事故是造成骑手和三者人身伤亡、财产损失的重要原因之一。当骑手不幸出现交通事故时，智能头盔不仅在物理上保护骑手，还可以通过传感器和相关算法识别事故的发生，同时联动前端和后台，实现：</p><ul><li><strong>平台报警与人工介入</strong>。AI外呼骑手确认事故，大象消息推送商管安全员。</li><li>快速呼叫救援。支持一键拨打120。</li><li><strong>信息收集</strong>。时间地点、事故前速度、传感器数据、现场音视频等。</li><li><strong>骑手关怀</strong>。事故后第一时间App弹窗、AI外呼，搭建骑手和平台之间的沟通桥梁，让骑手感知到平台时刻关注骑手安全。</li></ul><p>同时，有助于事故后信息分析、处理和事故预防，包括：</p><ul><li><strong>事故还原</strong>。通过事故采集信息可最大程度还原事故经过。</li><li><strong>保险协助</strong>。通过精确的事故时间、地点等信息，有助于骑手与保险公司之间事故理赔。</li><li><strong>高风险路段提前预警</strong>。多名骑手发生事故路段/地点，标记为高风险位置，为其他路过骑手提前预警。</li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/6733f94c54dcb4bdb702b6fe2b4c03a7637628.png\"></p><p>当骑手发生事故后，端、边、云各个组件协同工作，完成整个碰撞摔倒监控功能，包括：</p><ul><li>头盔借助于内置的加速度传感器和自研运动特征识别算法，识别到骑手疑似出现碰撞，并将疑似事故信息上报手机App。</li><li>骑手App进一步融合了手机中多种特征和传感器原始数据，确认是否为真实事故。</li><li>骑手App（在骑手授权的情况下）将会录制一段时间的事故现场音视频，留存现场音视频信息。</li><li>与此同时，骑手App将弹出反馈页面等待骑手反馈，若骑手选择自己可以解决或者没摔倒，则表示此事件为小事故或误报，不再后续处理。</li><li>若骑手一键拨打120或长时间未得到反馈，则表示此事件可能为严重事故，云端将会执行AI外呼骑手，进一步确认事故。</li><li>若确认为严重事故，或骑手长时间未接听，则此事故信息将会被自动推送站长和安全员，人工介入。</li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/bdc94627498b7403ee86772eb38709e91038605.png\"></p><p>除了事故实时处理的相关功能外，碰撞摔倒监控收到的数据，有助于事故进一步分析，包括：速度、特征、位置、传感器参数分析等。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/f1321a18460649827f98338722452c8c563493.png\"></p><p>碰撞摔倒监控功能使用端、边、云协同处理框架。</p><ul><li><strong>端</strong>：智能头盔通过分析骑手头盔运动特征，提供碰撞/摔倒原始实时感知；</li><li><strong>边</strong>：手机提供速度、IOD、姿态等高密度、高实时性关键信息并支撑融合算法的执行，对疑似事故进一步筛选判断，同时使用App弹窗与骑手确认事故，并在事故后自动录制音视频；</li><li><strong>云</strong>：云服务器提供数据记录、AI站长助理、大象消息推送、事故音视频AI解析等能力，进一步确认事故，并为人工介入提供服务帮助。</li></ul><p>端、边、云协同处理，有效提升了感知系统的准确性和实时性。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/16e77b4a4b7d1dac861bde797c1ef4bf136273.png\"></p><h2>04. 总结和展望</h2><p>美团智能头盔作为骑手配送的核心生产工具，已在实际应用中取得显著成效。通过语音交互技术替代传统手机操作，优化了骑手在配送过程中的多任务处理难题，大幅降低了分心驾驶带来的安全隐患。实际数据显示，使用智能头盔的骑手在配送效率和安全指标上均有明显提升。一线骑手反馈表明，这一工具已成为日常工作不可或缺的装备，特别在高峰时段和复杂路况下价值更为突出。</p><p>2025年，美团将会研发下一代智能头盔。新型号将不再仅是一个交互工具，而是美团自研多模态大模型的重要入口和数据采集平台。硬件本身将会提供更全面的环境感知能力，不仅提升配送效率和安全性，这将为整个即时配送行业带来一场技术革新。</p>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "46484dc72e91",
      "blog_name": "V2EX酷工作",
      "title": "家人是律师，有法律需求欢迎联络",
      "link": "https://www.v2ex.com/t/1152504#reply13",
      "published": "2025-08-14T23:43:36+00:00",
      "timestamp": 1755215016,
      "summary": "<p>目前律师行业特别卷，给做律师的家人在这里推荐下，报上 V2EX ，可以免费咨询半小时，给你解答法律问题。</p>\n<p>(如果板块不合适，联络我)</p>\n<h2>律师简介</h2>\n<h3>标签</h3>\n<ul>\n<li>北京盈科律师事务所律师</li>\n<li>英语专业八级</li>\n<li>剑桥商务英语高级</li>\n<li>英语可作为工作语言</li>\n</ul>\n<h3>专业领域</h3>\n<ul>\n<li>国内及涉外劳动纠纷、合同争议、劳动仲裁、股权期权</li>\n<li>公司纠纷、合同审查</li>\n<li>企业常年法律顾问</li>\n<li>婚姻继承</li>\n<li>医美纠纷</li>\n<li>跨境投资与并购、国际贸易、跨境数据保护、供应链合规、出口管制/经济制裁</li>\n</ul>\n<h3>联络</h3>\n<ul>\n<li>办公电话: 136 7119 7348 （同微信）</li>\n<li>邮箱: <a href=\"mailto:wangzhebj@yingkelawyer.com\">wangzhebj@yingkelawyer.com</a></li>\n</ul>\n<p>法律在我们身边，靠谱律师，推荐给你。用的时候就联络。</p>",
      "content": "<p>目前律师行业特别卷，给做律师的家人在这里推荐下，报上 V2EX ，可以免费咨询半小时，给你解答法律问题。</p>\n<p>(如果板块不合适，联络我)</p>\n<h2>律师简介</h2>\n<h3>标签</h3>\n<ul>\n<li>北京盈科律师事务所律师</li>\n<li>英语专业八级</li>\n<li>剑桥商务英语高级</li>\n<li>英语可作为工作语言</li>\n</ul>\n<h3>专业领域</h3>\n<ul>\n<li>国内及涉外劳动纠纷、合同争议、劳动仲裁、股权期权</li>\n<li>公司纠纷、合同审查</li>\n<li>企业常年法律顾问</li>\n<li>婚姻继承</li>\n<li>医美纠纷</li>\n<li>跨境投资与并购、国际贸易、跨境数据保护、供应链合规、出口管制/经济制裁</li>\n</ul>\n<h3>联络</h3>\n<ul>\n<li>办公电话: 136 7119 7348 （同微信）</li>\n<li>邮箱: <a href=\"mailto:wangzhebj@yingkelawyer.com\">wangzhebj@yingkelawyer.com</a></li>\n</ul>\n<p>法律在我们身边，靠谱律师，推荐给你。用的时候就联络。</p>",
      "author": "internetant",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "74b073bc0388",
      "blog_name": "V2EX技术专区",
      "title": "记录一次踩坑过程（clion + cmake + vcpkg）",
      "link": "https://www.v2ex.com/t/1152503#reply5",
      "published": "2025-08-14T22:50:15+00:00",
      "timestamp": 1755211815,
      "summary": "<p>首先结论放这里：编写 cmake 文件时，<code>project(xxx)</code> 放在越后边越好，避免在它之后定义和构建相关的宏变量</p>\n<p>好的，下边是踩坑经历：\n楼主在写一个程序时，突发奇想的想分别使用 vs 工具链和 mingw 工具链跑下代码，所需要的库文件都是用 <code>vcpkg</code> 下载的。</p>\n<p>拿 <code>CMAKE_TOOLCHAIN_FILE</code> 举例，使用 <code>vcpkg</code> + <code>cmake</code>，就需要定义这个值（指明你的 <code>vcpkg.cmake</code> 放在哪个路径下，通常是 <code>xxx/vcpkg/scripts/buildsystems/vcpkg.cmake</code>）。要定义这个值，要么就是在执行 cmake 构建命令时加上 <code>-DCMAKE_TOOLCHAIN_FILE</code> 参数，要么就是直接在 cmake 文件中指定。第二种方法很好理解，直接在 cmake 文件定义就行（ clion 在构建时会将其添加进 <code>cache variable</code>），而第一种，如果是在 clion 中，你就需要在如下图位置指定：</p>\n<img class=\"embedded_image\" src=\"https://i.ooxx.ooo/i/NWVjM.png\">\n<p>那么问题就来了，由于楼主需要分别使用 <code>msvc</code> 和 <code>gcc</code> 编译，所以需要定义 <code>VCPKG_TARGET_TRIPLET</code> 来选用 <code>vcpkg</code> 中库文件的 triplet ，第一次用 msvc 编译项目，没有任何问题，但换成 mingw 后就出现莫名其妙的问题（例如 cmake 构建不成功，构建成功但链接时找不到对应的 lib ）。在进行了一系列的排查发现，虽然我在 cmake 中指定了 <code>set(VCPKG_TARGET_TRIPLET x64-mingw-dynamic)</code>，但 clion 的 <code>cache variable</code> 中的 <code>VCPKG_TARGET_TRIPLET</code> 的值雷打不动的为 <code>x64-windows</code>（因为先用的是 vs 工具链的，所以 clion 一直用的是缓存的值）。在经过很长一段时间的折磨后，我突发奇想的将所有设计 <code>vcpkg</code> 的宏定义提到了 cmake 文件的最前边，然后问题就解决了。</p>\n<pre><code class=\"language-cmake\"># 从原先的这样\ncmake_minimum_required(VERSION 3.30)\nproject(myproject)\nset(CMAKE_TOOLCHAIN_FILE \"D:/development-tool/vcpkg/scripts/buildsystems/vcpkg.cmake\")\nset(VCPKG_TARGET_TRIPLET x64-mingw-dynamic)\n# ...\n\n# 变成这样\ncmake_minimum_required(VERSION 3.30)\nset(CMAKE_TOOLCHAIN_FILE \"D:/development-tool/vcpkg/scripts/buildsystems/vcpkg.cmake\")\nset(VCPKG_TARGET_TRIPLET x64-mingw-dynamic)\n# ...\nproject(myproject)\n# ...\n</code></pre>\n<p>最后想通了，在 <code>project()</code> 前定义宏，这些宏就能够在项目在构建前使用，这样 clion 就能够先写入 <code>cache variable</code>，这样就确保项目构建的行为是根据 cmake 文件中来的。反之在 <code>project()</code> 后定义，这些宏就变为在项目构建过程中才能使用，这就导致了 clion 需要在构建前指定 vcpkg 某些宏找不到，所以 clion 用的是缓存的值。</p>\n<p>相信有一部分人和我一样，在开始写 cmake 时，喜欢用默认的模板来写，而默认模板的 <code>project()</code> 又是最先写的，等到项目逐渐的开发，需要往 cmake 中假如越来越多东西，这些东西很容易就加到 <code>project()</code> 后，然后一些在构建前需要用到的宏无法被识别，从而引发一系列问题。</p>\n<p>这个点可能是 cmake 很常规的一个点，但如果忽略了，就可能像我一样，在 google-&gt;ai 后陷入“明明都是按照语法来的，怎么死活就跑不起来”，然后无能狂怒数个小时的情况。</p>\n<p>最后再分享点心得，如果什么都看着正常，但项目就是跑不起来，可以看看 <code>cache variable</code> 中的值是否有问题</p>\n<img class=\"embedded_image\" src=\"https://i.ooxx.ooo/i/NzQ1Y.png\">",
      "content": "<p>首先结论放这里：编写 cmake 文件时，<code>project(xxx)</code> 放在越后边越好，避免在它之后定义和构建相关的宏变量</p>\n<p>好的，下边是踩坑经历：\n楼主在写一个程序时，突发奇想的想分别使用 vs 工具链和 mingw 工具链跑下代码，所需要的库文件都是用 <code>vcpkg</code> 下载的。</p>\n<p>拿 <code>CMAKE_TOOLCHAIN_FILE</code> 举例，使用 <code>vcpkg</code> + <code>cmake</code>，就需要定义这个值（指明你的 <code>vcpkg.cmake</code> 放在哪个路径下，通常是 <code>xxx/vcpkg/scripts/buildsystems/vcpkg.cmake</code>）。要定义这个值，要么就是在执行 cmake 构建命令时加上 <code>-DCMAKE_TOOLCHAIN_FILE</code> 参数，要么就是直接在 cmake 文件中指定。第二种方法很好理解，直接在 cmake 文件定义就行（ clion 在构建时会将其添加进 <code>cache variable</code>），而第一种，如果是在 clion 中，你就需要在如下图位置指定：</p>\n<img class=\"embedded_image\" src=\"https://i.ooxx.ooo/i/NWVjM.png\">\n<p>那么问题就来了，由于楼主需要分别使用 <code>msvc</code> 和 <code>gcc</code> 编译，所以需要定义 <code>VCPKG_TARGET_TRIPLET</code> 来选用 <code>vcpkg</code> 中库文件的 triplet ，第一次用 msvc 编译项目，没有任何问题，但换成 mingw 后就出现莫名其妙的问题（例如 cmake 构建不成功，构建成功但链接时找不到对应的 lib ）。在进行了一系列的排查发现，虽然我在 cmake 中指定了 <code>set(VCPKG_TARGET_TRIPLET x64-mingw-dynamic)</code>，但 clion 的 <code>cache variable</code> 中的 <code>VCPKG_TARGET_TRIPLET</code> 的值雷打不动的为 <code>x64-windows</code>（因为先用的是 vs 工具链的，所以 clion 一直用的是缓存的值）。在经过很长一段时间的折磨后，我突发奇想的将所有设计 <code>vcpkg</code> 的宏定义提到了 cmake 文件的最前边，然后问题就解决了。</p>\n<pre><code class=\"language-cmake\"># 从原先的这样\ncmake_minimum_required(VERSION 3.30)\nproject(myproject)\nset(CMAKE_TOOLCHAIN_FILE \"D:/development-tool/vcpkg/scripts/buildsystems/vcpkg.cmake\")\nset(VCPKG_TARGET_TRIPLET x64-mingw-dynamic)\n# ...\n\n# 变成这样\ncmake_minimum_required(VERSION 3.30)\nset(CMAKE_TOOLCHAIN_FILE \"D:/development-tool/vcpkg/scripts/buildsystems/vcpkg.cmake\")\nset(VCPKG_TARGET_TRIPLET x64-mingw-dynamic)\n# ...\nproject(myproject)\n# ...\n</code></pre>\n<p>最后想通了，在 <code>project()</code> 前定义宏，这些宏就能够在项目在构建前使用，这样 clion 就能够先写入 <code>cache variable</code>，这样就确保项目构建的行为是根据 cmake 文件中来的。反之在 <code>project()</code> 后定义，这些宏就变为在项目构建过程中才能使用，这就导致了 clion 需要在构建前指定 vcpkg 某些宏找不到，所以 clion 用的是缓存的值。</p>\n<p>相信有一部分人和我一样，在开始写 cmake 时，喜欢用默认的模板来写，而默认模板的 <code>project()</code> 又是最先写的，等到项目逐渐的开发，需要往 cmake 中假如越来越多东西，这些东西很容易就加到 <code>project()</code> 后，然后一些在构建前需要用到的宏无法被识别，从而引发一系列问题。</p>\n<p>这个点可能是 cmake 很常规的一个点，但如果忽略了，就可能像我一样，在 google-&gt;ai 后陷入“明明都是按照语法来的，怎么死活就跑不起来”，然后无能狂怒数个小时的情况。</p>\n<p>最后再分享点心得，如果什么都看着正常，但项目就是跑不起来，可以看看 <code>cache variable</code> 中的值是否有问题</p>\n<img class=\"embedded_image\" src=\"https://i.ooxx.ooo/i/NzQ1Y.png\">",
      "author": "zcion",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "6b949d2d6854",
      "blog_name": "V2EX技术专区",
      "title": "关于在 Java 里面实现命名参数的一些想法",
      "link": "https://www.v2ex.com/t/1152501#reply8",
      "published": "2025-08-14T21:23:05+00:00",
      "timestamp": 1755206585,
      "summary": "<p>最近看到了一篇文章，<a href=\"https://mccue.dev/pages/8-13-25-approximating-named-arguments\">Approximating Named Arguments in Java</a>，讲的是怎么在 Java 里面模拟类似 Python 的命名参数，整体来说不算太出乎我的意料吧，主要还是原地改状态和 builder 模式，还有个 with 的写法虽然看起来有点意思，但总感觉缺点什么。</p>\n<p>不过看到这个风格的写法的时候，突然想起了之前自己写的一个项目里面用 lambda 来模拟模式匹配的写法。</p>\n<pre><code class=\"language-java\">kMeans(X, nClusters, opts -&gt; opts.maxIter = 1000);\n</code></pre>\n<pre><code class=\"language-java\">String guess = new Match&lt;Shape, String&gt;(new Circle())\n  .is(Circle.class, (circle) -&gt; \"我是一个圆\")\n  .is(Square.class, (square) -&gt; \"我有点方\")\n  .otherwise((Shape shape) -&gt; \"你看不见我\")\n  .get();\n</code></pre>\n<p>然后突然想，是不是可以用一个 lambda 参数来当占位符，来变相实现命名参数。大概是<code>(maxIter -&gt; 1000)</code>这样的感觉。</p>\n<p>但仔细想的话，Java 里面没有 currying 和 uncurrying 的概念，换句话说，本来我构想的在 Java 里应该用的是 Supplier 接口，但现在我手头上的是 Function&lt;T, U&gt;而且其中的 T 无法被忽略掉。似乎是一个很致命的问题。</p>\n<p>看起来就卡死了……</p>\n<p>然后想了想，其实我需要的是一个能把 Function&lt;T, U&gt;消掉的东西，回忆了一下最近 code review 从隔壁 senior 学来的 static class 的一些奇怪的写法，然后又想了想自己最近在搞的 Ref&lt;T&gt;，然后折腾出了一坨这玩意：</p>\n<pre><code class=\"language-java\">static final class KMeans {\n    \n    static final class Options {\n        int maxIter = 300;\n        double tol = 1e-4;\n        boolean verbose = false;\n        // ...\n    }\n    \n    @FunctionalInterface\n    interface Param {\n        void apply(Options o);\n    }\n    \n    static Param maxIter(IntSupplier s) {\n        return o -&gt; o.maxIter = s.getAsInt();\n    }\n    \n    static Param tol(DoubleSupplier s) {\n        return o -&gt; o.tol = s.getAsDouble();\n    }\n    \n    static Param verbose(BooleanSupplier s) {\n        return o -&gt; o.verbose = s.getAsBoolean();\n    }\n    \n    static Output kMeans(Data X, int nClusters, int maxIter, boolean verbose, double tol, ...) { ... } // 这里是具体的代码逻辑\n    \n    static Output kMeans(Data X, int nClusters, Param... params) {\n        var options = new Options();\n        Arrays.stream(params).forEach(applier -&gt; applier.apply(options));\n        \n        // 然后就可以继续实现具体的代码逻辑了\n    }\n}\n</code></pre>\n<p>psvm 里面可能长这样：</p>\n<pre><code class=\"language-java\">var X = new Data(...);\nvar res1 = KMeans.kMeans(X, 3, 1000, 1e-8, ...); // 常见的写法\nvar res2 = KMeans.kMeans(X, 3, \n                        KMeans.verbose(() -&gt; true),\n                        KMeans.tol(() -&gt; 1e-6), \n                        KMeans.maxIter(() -&gt; 1000), \n                        ...); // 现在可以这么写了，而且顺序也可以换来换去\n                        \n// 如果不用担心 import 会变得乱七八糟的话还可以这样\nvar res3 = kMeans(X, 3,\n                 maxIter(() -&gt; 1000), tol(() -&gt; 1e-6), verbose(() -&gt; true), ...);\n</code></pre>\n<p>感觉看起来有点像 Python 的命名语法，也不至于像 builder 模式那么啰嗦了。</p>\n<p>但是总感觉好像还是有点啰嗦（</p>\n<p>然后还可以稍微再改改。</p>\n<pre><code class=\"language-java\">interface Constant {\n    static Param maxIter(int maxIter) {\n        return o -&gt; o.maxIter = maxIter;\n    }\n\n    static Param tol(double tol) {\n        return o -&gt; o.tol = tol;\n    }\n}\n\n// 用法\nIntSupplier someOtherCalc = () -&gt; { return ... ; } // 假设它会返回 2048\n\nvar res4 = kMeans(X, 3, \n                  maxIter(someOtherCalc)\n                  Constant.tol(1e-6),\n                  Constant.verbose(true), ...);\n</code></pre>\n<p>但似乎显得更怪异了，而且这么写代码感觉会被人打（</p>",
      "content": "<p>最近看到了一篇文章，<a href=\"https://mccue.dev/pages/8-13-25-approximating-named-arguments\">Approximating Named Arguments in Java</a>，讲的是怎么在 Java 里面模拟类似 Python 的命名参数，整体来说不算太出乎我的意料吧，主要还是原地改状态和 builder 模式，还有个 with 的写法虽然看起来有点意思，但总感觉缺点什么。</p>\n<p>不过看到这个风格的写法的时候，突然想起了之前自己写的一个项目里面用 lambda 来模拟模式匹配的写法。</p>\n<pre><code class=\"language-java\">kMeans(X, nClusters, opts -&gt; opts.maxIter = 1000);\n</code></pre>\n<pre><code class=\"language-java\">String guess = new Match&lt;Shape, String&gt;(new Circle())\n  .is(Circle.class, (circle) -&gt; \"我是一个圆\")\n  .is(Square.class, (square) -&gt; \"我有点方\")\n  .otherwise((Shape shape) -&gt; \"你看不见我\")\n  .get();\n</code></pre>\n<p>然后突然想，是不是可以用一个 lambda 参数来当占位符，来变相实现命名参数。大概是<code>(maxIter -&gt; 1000)</code>这样的感觉。</p>\n<p>但仔细想的话，Java 里面没有 currying 和 uncurrying 的概念，换句话说，本来我构想的在 Java 里应该用的是 Supplier 接口，但现在我手头上的是 Function&lt;T, U&gt;而且其中的 T 无法被忽略掉。似乎是一个很致命的问题。</p>\n<p>看起来就卡死了……</p>\n<p>然后想了想，其实我需要的是一个能把 Function&lt;T, U&gt;消掉的东西，回忆了一下最近 code review 从隔壁 senior 学来的 static class 的一些奇怪的写法，然后又想了想自己最近在搞的 Ref&lt;T&gt;，然后折腾出了一坨这玩意：</p>\n<pre><code class=\"language-java\">static final class KMeans {\n    \n    static final class Options {\n        int maxIter = 300;\n        double tol = 1e-4;\n        boolean verbose = false;\n        // ...\n    }\n    \n    @FunctionalInterface\n    interface Param {\n        void apply(Options o);\n    }\n    \n    static Param maxIter(IntSupplier s) {\n        return o -&gt; o.maxIter = s.getAsInt();\n    }\n    \n    static Param tol(DoubleSupplier s) {\n        return o -&gt; o.tol = s.getAsDouble();\n    }\n    \n    static Param verbose(BooleanSupplier s) {\n        return o -&gt; o.verbose = s.getAsBoolean();\n    }\n    \n    static Output kMeans(Data X, int nClusters, int maxIter, boolean verbose, double tol, ...) { ... } // 这里是具体的代码逻辑\n    \n    static Output kMeans(Data X, int nClusters, Param... params) {\n        var options = new Options();\n        Arrays.stream(params).forEach(applier -&gt; applier.apply(options));\n        \n        // 然后就可以继续实现具体的代码逻辑了\n    }\n}\n</code></pre>\n<p>psvm 里面可能长这样：</p>\n<pre><code class=\"language-java\">var X = new Data(...);\nvar res1 = KMeans.kMeans(X, 3, 1000, 1e-8, ...); // 常见的写法\nvar res2 = KMeans.kMeans(X, 3, \n                        KMeans.verbose(() -&gt; true),\n                        KMeans.tol(() -&gt; 1e-6), \n                        KMeans.maxIter(() -&gt; 1000), \n                        ...); // 现在可以这么写了，而且顺序也可以换来换去\n                        \n// 如果不用担心 import 会变得乱七八糟的话还可以这样\nvar res3 = kMeans(X, 3,\n                 maxIter(() -&gt; 1000), tol(() -&gt; 1e-6), verbose(() -&gt; true), ...);\n</code></pre>\n<p>感觉看起来有点像 Python 的命名语法，也不至于像 builder 模式那么啰嗦了。</p>\n<p>但是总感觉好像还是有点啰嗦（</p>\n<p>然后还可以稍微再改改。</p>\n<pre><code class=\"language-java\">interface Constant {\n    static Param maxIter(int maxIter) {\n        return o -&gt; o.maxIter = maxIter;\n    }\n\n    static Param tol(double tol) {\n        return o -&gt; o.tol = tol;\n    }\n}\n\n// 用法\nIntSupplier someOtherCalc = () -&gt; { return ... ; } // 假设它会返回 2048\n\nvar res4 = kMeans(X, 3, \n                  maxIter(someOtherCalc)\n                  Constant.tol(1e-6),\n                  Constant.verbose(true), ...);\n</code></pre>\n<p>但似乎显得更怪异了，而且这么写代码感觉会被人打（</p>",
      "author": "netabare",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "6575bde81b55",
      "blog_name": "V2EX酷工作",
      "title": "白天上班，晚上拼副业，真的很累",
      "link": "https://www.v2ex.com/t/1152497#reply6",
      "published": "2025-08-14T17:55:18+00:00",
      "timestamp": 1755194118,
      "summary": "每次累到想放弃，我就告诉自己：必须突破，必须改变。😭<br>我真的不想一辈子打工。<br><br>我是那种被领导训几句就会崩溃的人，🥹只想和伙伴并肩作战，不想当上级，也不想被上级管。<br><br>2015 年毕业，北京 8 年，上海快 2 年。<br>拿过百万年薪的 offer ，却在挑战中失败。<br>从那以后，我再没碰过管理岗——因为它在毁灭我。<br><br>好在 AI 时代来了。<br>一个人也能干成一支队伍的事，<br>我要在这个时代，证明自己！",
      "content": "每次累到想放弃，我就告诉自己：必须突破，必须改变。😭<br>我真的不想一辈子打工。<br><br>我是那种被领导训几句就会崩溃的人，🥹只想和伙伴并肩作战，不想当上级，也不想被上级管。<br><br>2015 年毕业，北京 8 年，上海快 2 年。<br>拿过百万年薪的 offer ，却在挑战中失败。<br>从那以后，我再没碰过管理岗——因为它在毁灭我。<br><br>好在 AI 时代来了。<br>一个人也能干成一支队伍的事，<br>我要在这个时代，证明自己！",
      "author": "tianyu1718",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "362adbccf593",
      "blog_name": "V2EX酷工作",
      "title": "2025 年 STOCK 的 APP 界面设计欣赏--------继续寻找项目 UI 设计合作",
      "link": "https://www.v2ex.com/t/1152491#reply0",
      "published": "2025-08-14T17:03:56+00:00",
      "timestamp": 1755191036,
      "summary": "<p><a href=\"https://ludesala.blogspot.com/2025/08/stock-app-interface-design-2025.html\">https://ludesala.blogspot.com/2025/08/stock-app-interface-design-2025.html</a></p>\n<p>这是一个一直有着保持联系的小伙伴，今年 2025 年找我合作 50 个左右的 STOCK 界面设计合作</p>",
      "content": "<p><a href=\"https://ludesala.blogspot.com/2025/08/stock-app-interface-design-2025.html\">https://ludesala.blogspot.com/2025/08/stock-app-interface-design-2025.html</a></p>\n<p>这是一个一直有着保持联系的小伙伴，今年 2025 年找我合作 50 个左右的 STOCK 界面设计合作</p>",
      "author": "jiangzhaosen518",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "45f1460840bf",
      "blog_name": "V2EX技术专区",
      "title": "Windows 11 24H2 的输入法小改进",
      "link": "https://www.v2ex.com/t/1152490#reply13",
      "published": "2025-08-14T17:01:50+00:00",
      "timestamp": 1755190910,
      "summary": "<p>台式机之前在 23H2 呆了一段时间，自动 Windows Update 升级 24H2 始终无法成功，索性用自带的抹除文件重做系统功能恢复出厂状态，然后干净状态升级 24H2 成功。</p>\n<p>目前使用没有什么特别的问题。注意到了自带中文拼音输入法相关一些微小的改进：</p>\n<ul>\n<li>\n<p>之前 Shift 键和 Win + Space 的割裂开来的中英模式切换被统一了，中/英状态图标目前常驻状态栏。可以配置模式切换快捷键了。可选快捷键包括 Ctrl + Space 、Shift 和 Ctrl 。并非三选一，而是多选，可以三选零、三选一、三选二或三选三。</p>\n</li>\n<li>\n<p>可以配置常驻显示漂浮的输入法工具栏了。</p>\n</li>\n</ul>\n<p>（似乎 V2EX 上传图片比较麻烦，暂时不贴图了。）</p>",
      "content": "<p>台式机之前在 23H2 呆了一段时间，自动 Windows Update 升级 24H2 始终无法成功，索性用自带的抹除文件重做系统功能恢复出厂状态，然后干净状态升级 24H2 成功。</p>\n<p>目前使用没有什么特别的问题。注意到了自带中文拼音输入法相关一些微小的改进：</p>\n<ul>\n<li>\n<p>之前 Shift 键和 Win + Space 的割裂开来的中英模式切换被统一了，中/英状态图标目前常驻状态栏。可以配置模式切换快捷键了。可选快捷键包括 Ctrl + Space 、Shift 和 Ctrl 。并非三选一，而是多选，可以三选零、三选一、三选二或三选三。</p>\n</li>\n<li>\n<p>可以配置常驻显示漂浮的输入法工具栏了。</p>\n</li>\n</ul>\n<p>（似乎 V2EX 上传图片比较麻烦，暂时不贴图了。）</p>",
      "author": "hosiet",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "fa0542dc1078",
      "blog_name": "V2EX酷工作",
      "title": "监控程序外包",
      "link": "https://www.v2ex.com/t/1152476#reply3",
      "published": "2025-08-14T14:33:00+00:00",
      "timestamp": 1755181980,
      "summary": "我正在开发一个需要实时获取数据的应用程序，通过每秒访问以下 公共 API 接口获取最新公告数据：<br><br><a href=\"https://api-manager.upbit.com/api/v1/announcements?os=web&amp;page=1&amp;per_page=20&amp;category=trade\" target=\"_blank\">https://api-manager.upbit.com/api/v1/announcements?os=web&amp;page=1&amp;per_page=20&amp;category=trade</a><br><br>目前我使用 5 个 IP 分批按顺序请求该接口. 实测安全的请求边界是每分钟 12 次. 单个 IP 每分钟超过 12 次会被封禁 1 小时.<br><br>Upbit 托管在 Cloudflare 上. 为了避免命中缓存，每次请求的 URL 后附加当前毫秒时间戳，确保响应头中 Cf-Cache-Status: MISS ，表示成功绕过缓存，直接从源服务器获取数据。然而，目前观察到数据更新存在约 3-7 秒的延迟，无法满足实时性要求。<br>需要一位经验丰富的专业 dev ，协助分析并优化 API 请求流程，解决数据延迟问题，确保能够实时获取最新数据。",
      "content": "我正在开发一个需要实时获取数据的应用程序，通过每秒访问以下 公共 API 接口获取最新公告数据：<br><br><a href=\"https://api-manager.upbit.com/api/v1/announcements?os=web&amp;page=1&amp;per_page=20&amp;category=trade\" target=\"_blank\">https://api-manager.upbit.com/api/v1/announcements?os=web&amp;page=1&amp;per_page=20&amp;category=trade</a><br><br>目前我使用 5 个 IP 分批按顺序请求该接口. 实测安全的请求边界是每分钟 12 次. 单个 IP 每分钟超过 12 次会被封禁 1 小时.<br><br>Upbit 托管在 Cloudflare 上. 为了避免命中缓存，每次请求的 URL 后附加当前毫秒时间戳，确保响应头中 Cf-Cache-Status: MISS ，表示成功绕过缓存，直接从源服务器获取数据。然而，目前观察到数据更新存在约 3-7 秒的延迟，无法满足实时性要求。<br>需要一位经验丰富的专业 dev ，协助分析并优化 API 请求流程，解决数据延迟问题，确保能够实时获取最新数据。",
      "author": "zzzzccc",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "abd60657f01a",
      "blog_name": "V2EX技术专区",
      "title": "很久没管的 wx 小程序被投诉了",
      "link": "https://www.v2ex.com/t/1152475#reply10",
      "published": "2025-08-14T14:21:29+00:00",
      "timestamp": 1755181289,
      "summary": "事情是这样<br><br>在年初的时候，胰腺炎第 n 次复发(轻症)，得过这个病的才知道，每天喝粥，只能眼馋查查各种食物的脂肪含量，奈何吃不得。<br><br>发现 xhs 上一直有个比较大的号，在推广收费小程序。<br><br>看了看内容，心想：这钱你也赚？<br><br>心血来潮，AI 生成+备案，一个星期就草草上线了一个同类型的查询小程序。<br><br>虽说 UI 做的丑了点，数据也是从豆包送的免费 token 那问出来的。但好歹能用啊。<br><br>这大半年过去了，小程序发短信提醒我备案信息有问题。上平台一看，嘿。<br><br>被投诉了。<br><br>```<br>投诉类型\t小程序（小游戏）内容侵权<br>投诉描述\t<br> 以下内容非微信官方提供，由权利人投诉时填写，请谨慎操作。<br><br>抄袭如下：1 、名字和版本号 2 、出院时间设置 3 指导内容 4 搜索展现形式 5 多久可食 6 食用方法 7 烹饪方法，我方交互模式有专利保护（一般医院表现形式按周，只有我方按月。而且一般指导为列表式的，而我方是交互式的）综上所述对方刻意模仿我方软件，利用我方知名度制造同样用户体验，且已有用户被误导下载并举报给我方<br>```<br><br>看着这内容，有点想笑。",
      "content": "事情是这样<br><br>在年初的时候，胰腺炎第 n 次复发(轻症)，得过这个病的才知道，每天喝粥，只能眼馋查查各种食物的脂肪含量，奈何吃不得。<br><br>发现 xhs 上一直有个比较大的号，在推广收费小程序。<br><br>看了看内容，心想：这钱你也赚？<br><br>心血来潮，AI 生成+备案，一个星期就草草上线了一个同类型的查询小程序。<br><br>虽说 UI 做的丑了点，数据也是从豆包送的免费 token 那问出来的。但好歹能用啊。<br><br>这大半年过去了，小程序发短信提醒我备案信息有问题。上平台一看，嘿。<br><br>被投诉了。<br><br>```<br>投诉类型\t小程序（小游戏）内容侵权<br>投诉描述\t<br> 以下内容非微信官方提供，由权利人投诉时填写，请谨慎操作。<br><br>抄袭如下：1 、名字和版本号 2 、出院时间设置 3 指导内容 4 搜索展现形式 5 多久可食 6 食用方法 7 烹饪方法，我方交互模式有专利保护（一般医院表现形式按周，只有我方按月。而且一般指导为列表式的，而我方是交互式的）综上所述对方刻意模仿我方软件，利用我方知名度制造同样用户体验，且已有用户被误导下载并举报给我方<br>```<br><br>看着这内容，有点想笑。",
      "author": "blackwhite001821",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "c39f3816b402",
      "blog_name": "V2EX技术专区",
      "title": "求可以装在 U 盘的不可变 Linux 发行版",
      "link": "https://www.v2ex.com/t/1152472#reply17",
      "published": "2025-08-14T13:54:59+00:00",
      "timestamp": 1755179699,
      "summary": "<p>想在这个发行版跑一跑各种 docker ，要是能支持 zfs 更好。</p>",
      "content": "<p>想在这个发行版跑一跑各种 docker ，要是能支持 zfs 更好。</p>",
      "author": "standin000",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "c5aafd311569",
      "blog_name": "V2EX酷工作",
      "title": "到底是继续干程序员还是能干什么其他的 对未来有点迷茫",
      "link": "https://www.v2ex.com/t/1152465#reply38",
      "published": "2025-08-14T13:10:38+00:00",
      "timestamp": 1755177038,
      "summary": "<p>目前 30 岁 已婚还没有小孩。有台湾居留证</p>\n<p>四川人 电子科技大学数学系毕业 </p>\n<p>家庭条件小康 反正两边父母都不拖后腿吧。各有几套房</p>\n<p>初中搞数学竞赛 高中打 Noip 大学毕业后也不知道能干嘛 然后就去干程序员\n先在成都小公司呆了 1 年多。后面就来上海上班了</p>\n<p>4 月份实在不想坐班（事干完了人也要在 公司还要求不能上传自己的 github 啊 防止代码外泄。自己想写点工具 搞点感兴趣的也没办法） 离职了做了个小手术 然后自驾去了一圈新疆 重新回来找工作 口语一般尬住了 四川地震后都不考听力了  英语读写还行 当初高考考了 140+ 然后大学完全不想看英语了 4 级裸过 6 级 400 分 然后就再没看了。</p>\n<p>外企 或者正规 remote 要口语听力好点  web3 又没有经验。</p>\n<p>现在有点迷茫 如果是什么技术前沿 感兴趣的东西 我还比较喜欢研究  坐班没空出门玩或者打游戏就难受。老婆不上班。目前没什么存款 十几万吧</p>\n<ol>\n<li>呆在上海，再找找远程 或者年假多点的工作 看了 1 个月了有点难找</li>\n<li>实在找不到估计就只有继续面互联网公司。我可以在家里加班 不喜欢一直在公司呆在 问题是再干几年面临同样选择</li>\n<li>去台湾找找工作了 不知道环境怎么样 还是喜欢国内环境</li>\n<li>不干程序员不知道还有什么其他工作适合我 </li>\n</ol>\n<p>基础简历 </p>\n<p>智元机器人 2023 年 08 月 - 2025 年 04 月\n前端开发工程师 研发部 上海</p>\n<p>字节跳动 2020 年 05 月 - 2023 年 05 月\n前端开发 非中国区 商业化广告 上海</p>\n<p>成都小公司 2018 年 03 月 - 2019 年 10 月\n前端工程师 前端 成都</p>",
      "content": "<p>目前 30 岁 已婚还没有小孩。有台湾居留证</p>\n<p>四川人 电子科技大学数学系毕业 </p>\n<p>家庭条件小康 反正两边父母都不拖后腿吧。各有几套房</p>\n<p>初中搞数学竞赛 高中打 Noip 大学毕业后也不知道能干嘛 然后就去干程序员\n先在成都小公司呆了 1 年多。后面就来上海上班了</p>\n<p>4 月份实在不想坐班（事干完了人也要在 公司还要求不能上传自己的 github 啊 防止代码外泄。自己想写点工具 搞点感兴趣的也没办法） 离职了做了个小手术 然后自驾去了一圈新疆 重新回来找工作 口语一般尬住了 四川地震后都不考听力了  英语读写还行 当初高考考了 140+ 然后大学完全不想看英语了 4 级裸过 6 级 400 分 然后就再没看了。</p>\n<p>外企 或者正规 remote 要口语听力好点  web3 又没有经验。</p>\n<p>现在有点迷茫 如果是什么技术前沿 感兴趣的东西 我还比较喜欢研究  坐班没空出门玩或者打游戏就难受。老婆不上班。目前没什么存款 十几万吧</p>\n<ol>\n<li>呆在上海，再找找远程 或者年假多点的工作 看了 1 个月了有点难找</li>\n<li>实在找不到估计就只有继续面互联网公司。我可以在家里加班 不喜欢一直在公司呆在 问题是再干几年面临同样选择</li>\n<li>去台湾找找工作了 不知道环境怎么样 还是喜欢国内环境</li>\n<li>不干程序员不知道还有什么其他工作适合我 </li>\n</ol>\n<p>基础简历 </p>\n<p>智元机器人 2023 年 08 月 - 2025 年 04 月\n前端开发工程师 研发部 上海</p>\n<p>字节跳动 2020 年 05 月 - 2023 年 05 月\n前端开发 非中国区 商业化广告 上海</p>\n<p>成都小公司 2018 年 03 月 - 2019 年 10 月\n前端工程师 前端 成都</p>",
      "author": "cjhyy",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "d628725f3638",
      "blog_name": "V2EX酷工作",
      "title": "# 社招|腾讯会议及腾讯元宝大量招人了。急急急！\n可联系微信: azcxMDI2NzIxMg==",
      "link": "https://www.v2ex.com/t/1152450#reply3",
      "published": "2025-08-14T11:51:37+00:00",
      "timestamp": 1755172297,
      "summary": "# 详见<br><a href=\"https://mp.weixin.qq.com/s/v53RxGWItU7EpxCH02oi0A?scene=1&amp;click_id=5\" target=\"_blank\">https://mp.weixin.qq.com/s/v53RxGWItU7EpxCH02oi0A?scene=1&amp;click_id=5</a><br><br><br><a href=\"https://imgur.com/a/9XxPiYK\" target=\"_blank\">https://imgur.com/a/9XxPiYK</a>",
      "content": "# 详见<br><a href=\"https://mp.weixin.qq.com/s/v53RxGWItU7EpxCH02oi0A?scene=1&amp;click_id=5\" target=\"_blank\">https://mp.weixin.qq.com/s/v53RxGWItU7EpxCH02oi0A?scene=1&amp;click_id=5</a><br><br><br><a href=\"https://imgur.com/a/9XxPiYK\" target=\"_blank\">https://imgur.com/a/9XxPiYK</a>",
      "author": "kyrieIvring",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "75443c57efe3",
      "blog_name": "V2EX酷工作",
      "title": "这种情况怎么选择，要考虑回去吗？",
      "link": "https://www.v2ex.com/t/1152448#reply14",
      "published": "2025-08-14T11:39:29+00:00",
      "timestamp": 1755171569,
      "summary": "<p>本人 99 年，目前在杭州 12.5k ，没有公积金，平时工作比较轻松，业务也很简单，基本每天没啥事，有事也很容易处理。\n最近找工作拿到了郑州数字马力的 offer ，定级 s4 ，家离郑州很近， 待遇 10k 全额公积金 试用期不打折，做的是支付宝基金方面的业务，要考虑回去吗，比较吸引的点是公积金，各位佬给个建议</p>",
      "content": "<p>本人 99 年，目前在杭州 12.5k ，没有公积金，平时工作比较轻松，业务也很简单，基本每天没啥事，有事也很容易处理。\n最近找工作拿到了郑州数字马力的 offer ，定级 s4 ，家离郑州很近， 待遇 10k 全额公积金 试用期不打折，做的是支付宝基金方面的业务，要考虑回去吗，比较吸引的点是公积金，各位佬给个建议</p>",
      "author": "congcong1228",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "ca6f46c4f349",
      "blog_name": "V2EX酷工作",
      "title": "马来西亚吉隆坡 bybit 工作咋样，有大佬了解的吗",
      "link": "https://www.v2ex.com/t/1152447#reply8",
      "published": "2025-08-14T11:34:24+00:00",
      "timestamp": 1755171264,
      "summary": "<p>1 、国内到国外从事加密货币工作有风险吗\n2 、吉隆坡那边工作安全吗\n3 、bybit 工作强度如何\n4 、听说工资发 u ，怎么回国</p>",
      "content": "<p>1 、国内到国外从事加密货币工作有风险吗\n2 、吉隆坡那边工作安全吗\n3 、bybit 工作强度如何\n4 、听说工资发 u ，怎么回国</p>",
      "author": "amoia50",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "5d9362ad9378",
      "blog_name": "V2EX技术专区",
      "title": "选择 n8n 还是 dify？",
      "link": "https://www.v2ex.com/t/1152436#reply9",
      "published": "2025-08-14T10:38:34+00:00",
      "timestamp": 1755167914,
      "summary": "<p>选择 n8n 还是 dify ？这俩的区别是什么</p>",
      "content": "<p>选择 n8n 还是 dify ？这俩的区别是什么</p>",
      "author": "sunshinev",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "aa9eee666ac0",
      "blog_name": "V2EX技术专区",
      "title": "谁知道现在中国大陆护照和香港银行卡还可以开通 stripe 吗？",
      "link": "https://www.v2ex.com/t/1152417#reply21",
      "published": "2025-08-14T09:32:21+00:00",
      "timestamp": 1755163941,
      "summary": "<p>之前看到很多帖子说中国大陆护照和香港银行卡就可以开通 stripe ，但是看贴子的时间都是前两年了的。有的人说现在不行了。有谁知道的能给个准信吗？谢谢</p>",
      "content": "<p>之前看到很多帖子说中国大陆护照和香港银行卡就可以开通 stripe ，但是看贴子的时间都是前两年了的。有的人说现在不行了。有谁知道的能给个准信吗？谢谢</p>",
      "author": "pig198x",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "cab4e1675f95",
      "blog_name": "V2EX技术专区",
      "title": "Windows11 重启电脑默认浏览器就被修改为 Edge，怎么办？",
      "link": "https://www.v2ex.com/t/1152412#reply22",
      "published": "2025-08-14T09:13:06+00:00",
      "timestamp": 1755162786,
      "summary": "日常使用 Chrome ，Windows11 重启电脑默认浏览器就被修改为 Edge ，重启多次发现都会这样，被微软这个操作恶心到了，尝试了修改注册表、组策略均未果。求解决办法？",
      "content": "日常使用 Chrome ，Windows11 重启电脑默认浏览器就被修改为 Edge ，重启多次发现都会这样，被微软这个操作恶心到了，尝试了修改注册表、组策略均未果。求解决办法？",
      "author": "Sokranotes",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "f6137c265b8e",
      "blog_name": "V2EX技术专区",
      "title": "你在用什么笔记软件？这款软件有什么最吸引你或者别人没有的，以及， notion 有没有什么优雅的备份方案",
      "link": "https://www.v2ex.com/t/1152402#reply15",
      "published": "2025-08-14T08:31:43+00:00",
      "timestamp": 1755160303,
      "summary": "<p>主要是想问 notion 有没有什么优雅的备份方案，ALL in 了怕有一天数据丢失或者其他不可抗力因素不能使用所以想提前做好准备</p>",
      "content": "<p>主要是想问 notion 有没有什么优雅的备份方案，ALL in 了怕有一天数据丢失或者其他不可抗力因素不能使用所以想提前做好准备</p>",
      "author": "404www",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "15d26d9612e8",
      "blog_name": "V2EX技术专区",
      "title": "求助： 25 年 8 月当下：选择 cursor 还是 cloude code?",
      "link": "https://www.v2ex.com/t/1152389#reply28",
      "published": "2025-08-14T07:50:10+00:00",
      "timestamp": 1755157810,
      "summary": "<ul>\n<li>\n<p><strong>使用场景</strong>：下班空闲时间开发的基于 ruoyi-vue 的公众号项目，7 月使用 cursor pro 开发好了就没续费了，现在需要迭代版本，cursor 已不支持大陆使用 claude 模型。</p>\n</li>\n<li>\n<p><strong>技术水平</strong>：下等，满分 100 分打 20 分，上面提到的项目场景，15%的代码贡献来自框架，85%来自 cursor ，我只负责输提示词和调试结果（基本离不开 AI 工具了）</p>\n</li>\n</ul>\n<p>现在纠结于继续续费 cursor 还是开通 claude code：</p>\n<ul>\n<li>\n<p><strong>继续用 cursor</strong>: 网上也都说 HTTP 协议访问方式很慢，会出现扣 token 且不出结果的情况，且不能使用最新的 claude4 模型</p>\n</li>\n<li>\n<p><strong>开通 claude code</strong>： 配置和付费操作复杂；命令行操作复杂；不能像 cursor 直接根据图片和代码块调试项目</p>\n</li>\n</ul>",
      "content": "<ul>\n<li>\n<p><strong>使用场景</strong>：下班空闲时间开发的基于 ruoyi-vue 的公众号项目，7 月使用 cursor pro 开发好了就没续费了，现在需要迭代版本，cursor 已不支持大陆使用 claude 模型。</p>\n</li>\n<li>\n<p><strong>技术水平</strong>：下等，满分 100 分打 20 分，上面提到的项目场景，15%的代码贡献来自框架，85%来自 cursor ，我只负责输提示词和调试结果（基本离不开 AI 工具了）</p>\n</li>\n</ul>\n<p>现在纠结于继续续费 cursor 还是开通 claude code：</p>\n<ul>\n<li>\n<p><strong>继续用 cursor</strong>: 网上也都说 HTTP 协议访问方式很慢，会出现扣 token 且不出结果的情况，且不能使用最新的 claude4 模型</p>\n</li>\n<li>\n<p><strong>开通 claude code</strong>： 配置和付费操作复杂；命令行操作复杂；不能像 cursor 直接根据图片和代码块调试项目</p>\n</li>\n</ul>",
      "author": "qq1147",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "77f6679a6b50",
      "blog_name": "V2EX酷工作",
      "title": "211 本科找不到工作，怎么办求大佬推荐，迷茫中",
      "link": "https://www.v2ex.com/t/1152387#reply20",
      "published": "2025-08-14T07:47:08+00:00",
      "timestamp": 1755157628,
      "summary": "个人简介:<br>郑州大学计算机与人工智能学院计算机科学与技术专业本科毕业<br><br>熟悉数据结构与基本算法<br>熟悉面向对象编程<br>熟悉操作系统<br>熟悉 java ，springboot ，mybatis ，SSH 开发框架<br>熟悉 mysql 数据库使用<br>了解 redis ，rabbitmq<br>了解 Linux 系统<br><br>项目经历:<br>合家云物业管理平台开发，主要负责项目 java 后端开发<br><br>联系方式（ base64 ）<br>email: MjU5NTQ1MTk0MEBxcS5jb20=<br>电话：MTc1MzA1MjgyNDU=<br>vx：aGUxNzUzMDUyODI0NQ==<br>一直没找打合适的工作，感谢各位大佬提供宝贵机会！",
      "content": "个人简介:<br>郑州大学计算机与人工智能学院计算机科学与技术专业本科毕业<br><br>熟悉数据结构与基本算法<br>熟悉面向对象编程<br>熟悉操作系统<br>熟悉 java ，springboot ，mybatis ，SSH 开发框架<br>熟悉 mysql 数据库使用<br>了解 redis ，rabbitmq<br>了解 Linux 系统<br><br>项目经历:<br>合家云物业管理平台开发，主要负责项目 java 后端开发<br><br>联系方式（ base64 ）<br>email: MjU5NTQ1MTk0MEBxcS5jb20=<br>电话：MTc1MzA1MjgyNDU=<br>vx：aGUxNzUzMDUyODI0NQ==<br>一直没找打合适的工作，感谢各位大佬提供宝贵机会！",
      "author": "swgcsky",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "a40f376f436a",
      "blog_name": "V2EX酷工作",
      "title": "杭州电商被辞退 n+1 或者降薪调岗 30%，选了调岗后第二天反悔，人事说给不了 n+1 了怎么办",
      "link": "https://www.v2ex.com/t/1152378#reply16",
      "published": "2025-08-14T07:29:21+00:00",
      "timestamp": 1755156561,
      "summary": "<p>杭州电商被辞退 n+1 或者降薪调岗 30%，选了调岗后第二天反悔，人事说给不了 n+1 了怎么办\n2025.8.11 人事约谈，要么降薪调岗 30%要么拿 n+1 ；晚上给她回复说调岗，2025.8.13 反悔了，打算拿 n+1 走人；人事说已经提了 oa 调岗流程了，走的话拿不了补偿金了；\n补充说明，没有签字，也没有给任何书面信息；\n这种怎么维权啊，去线下找律师吗</p>",
      "content": "<p>杭州电商被辞退 n+1 或者降薪调岗 30%，选了调岗后第二天反悔，人事说给不了 n+1 了怎么办\n2025.8.11 人事约谈，要么降薪调岗 30%要么拿 n+1 ；晚上给她回复说调岗，2025.8.13 反悔了，打算拿 n+1 走人；人事说已经提了 oa 调岗流程了，走的话拿不了补偿金了；\n补充说明，没有签字，也没有给任何书面信息；\n这种怎么维权啊，去线下找律师吗</p>",
      "author": "xiaotiger",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "1858904ead26",
      "blog_name": "V2EX技术专区",
      "title": "一加发布新深度测试要求（解锁 BL）",
      "link": "https://www.v2ex.com/t/1152377#reply25",
      "published": "2025-08-14T07:28:31+00:00",
      "timestamp": 1755156511,
      "summary": "原文链接🔗： <a href=\"https://bbs.oneplus.com/thread/1926504022886318086\" target=\"_blank\">https://bbs.oneplus.com/thread/1926504022886318086</a><br><br>和 realme 一致，满足申请条件后自行申请，经过官方审核后即可解锁，没有名额限制。解锁后不影响保修。不需要答题。<br><br>和小米的解锁政策相比，一加的友好太多，站内有解锁需求的用户可以继续用一加了。",
      "content": "原文链接🔗： <a href=\"https://bbs.oneplus.com/thread/1926504022886318086\" target=\"_blank\">https://bbs.oneplus.com/thread/1926504022886318086</a><br><br>和 realme 一致，满足申请条件后自行申请，经过官方审核后即可解锁，没有名额限制。解锁后不影响保修。不需要答题。<br><br>和小米的解锁政策相比，一加的友好太多，站内有解锁需求的用户可以继续用一加了。",
      "author": "Chicagoake",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "932f16cd6105",
      "blog_name": "V2EX酷工作",
      "title": "招几个安卓，初级到资深都招，杭州、北京、成都、深圳 都可",
      "link": "https://www.v2ex.com/t/1152374#reply10",
      "published": "2025-08-14T07:23:24+00:00",
      "timestamp": 1755156204,
      "summary": "公司介绍：<br>web3 公司，前十交易所，早 10 晚 7 ，不卷稳定。初级到资深都要（ P4-P7 都可，能接住）。杭州、北京、成都、深圳都招，最好杭州。<br><br><br>职责描述:<br>负责 Android 平台应用的设计、开发和维护；<br>优化和改进现有代码，提高应用的性能和用户体验；<br>根据产品需求，进行技术调研和方案设计；<br>与产品经理、设计师、测试工程师等团队成员密切合作，确保项目按时交付；<br>编写技术文档，参与代码评审，保证代码质量；<br>参与跨平台应用的开发与维护，确保 Android 与其他平台（如 iOS 、鸿蒙）的代码一致性和功能统一性。<br><br>职位要求：<br>计算机科学或相关专业本科及以上学历；<br>熟悉 Android 平台的开发工具和技术，包括 Java 和 Kotlin ；<br>有良好的编程习惯和代码风格，熟悉设计模式和数据结构；<br>了解多线程编程、网络编程和 UI 编程，有实际项目经验；<br>有良好的沟通能力和团队合作精神，能独立解决问题；<br>具有 Google Play 上线经验者优先；<br>有跨平台开发经验（如使用 Flutter 、React Native 等）者优先。",
      "content": "公司介绍：<br>web3 公司，前十交易所，早 10 晚 7 ，不卷稳定。初级到资深都要（ P4-P7 都可，能接住）。杭州、北京、成都、深圳都招，最好杭州。<br><br><br>职责描述:<br>负责 Android 平台应用的设计、开发和维护；<br>优化和改进现有代码，提高应用的性能和用户体验；<br>根据产品需求，进行技术调研和方案设计；<br>与产品经理、设计师、测试工程师等团队成员密切合作，确保项目按时交付；<br>编写技术文档，参与代码评审，保证代码质量；<br>参与跨平台应用的开发与维护，确保 Android 与其他平台（如 iOS 、鸿蒙）的代码一致性和功能统一性。<br><br>职位要求：<br>计算机科学或相关专业本科及以上学历；<br>熟悉 Android 平台的开发工具和技术，包括 Java 和 Kotlin ；<br>有良好的编程习惯和代码风格，熟悉设计模式和数据结构；<br>了解多线程编程、网络编程和 UI 编程，有实际项目经验；<br>有良好的沟通能力和团队合作精神，能独立解决问题；<br>具有 Google Play 上线经验者优先；<br>有跨平台开发经验（如使用 Flutter 、React Native 等）者优先。",
      "author": "planet888",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "a3d36fc4e4e8",
      "blog_name": "V2EX酷工作",
      "title": "北京-海淀-苏州桥-程序化广告-SDK 招人",
      "link": "https://www.v2ex.com/t/1152372#reply0",
      "published": "2025-08-14T07:15:51+00:00",
      "timestamp": 1755155751,
      "summary": "如题，程序化广告 SDK 开发岗，25-35K<br>工作内容：做程序化广告 SDK ，<br>双端都招，五险一金全额+补充医疗，无加班<br>要求有程序化广告行业经验，做过 SDK 开发，欢迎推荐和自荐<br>邮箱：aW13YW5neGlhb2hhbyNxcS5jb20=   或者私信 <br>以下是双端 JD <br><br>Android 端<br><br>岗位职能<br>负责公司程序化广告 SDK 在 Android 平台的架构设计、核心功能开发与性能优化。<br>深入理解广告请求、填充、展示、点击、上报全链路逻辑，保证 SDK 高可用性与稳定性。<br>设计并实现与 DSP / SSP / ADX 等平台的高效接口通信，支持多种广告样式（激励视频、插屏、Banner 、开屏等）。<br>优化 SDK 包体积、内存占用、启动速度，提升集成便捷性与运行性能。<br>与产品、算法、运营团队紧密合作，支持广告策略迭代与投放效果优化。<br>负责 SDK 集成文档编写、Demo 工程维护、技术支持及问题排查。<br><br>技能要求<br>Android 端<br>熟练掌握 Java / Kotlin ，具备扎实的 Android 原生开发能力。<br>深入理解 Android 四大组件、View 绘制流程、事件分发机制。<br>熟悉多线程编程（ Handler 、AsyncTask 、ThreadPool 、协程等）与网络编程（ OkHttp 、Retrofit 等）。<br>熟悉 Gradle 构建、AAR 包封装与发布流程。<br>具备良好的代码规范、单元测试和调试能力。<br><br>iOS 端<br><br>岗位职能<br>负责公司程序化广告 SDK 在 iOS 平台的设计、开发、调优与维护。<br>实现广告加载、缓存、渲染、事件上报等核心功能，确保性能与兼容性。<br>对接广告平台 API ，实现与不同网络协议（ HTTP/HTTPS 、gRPC 、WebSocket ）的高效交互。<br>深入优化 SDK 内存管理、线程调度、UI 渲染流畅度。<br>与 QA 协作，保证 SDK 在多机型、多系统版本的稳定性和兼容性。<br>编写完善的技术文档与开发者集成指南，协助客户解决集成问题。<br><br>技能要求<br>熟练掌握 Objective-C / Swift ，具备扎实的 iOS 原生开发能力。<br>深入理解 iOS 运行时、UI 渲染机制、内存管理（ ARC 、引用计数、内存泄漏排查）。<br>熟悉多线程编程（ GCD 、NSOperationQueue ）、网络通信（ NSURLSession 、AFNetworking 、Alamofire ）。<br>熟悉 CocoaPods / Swift Package Manager 的库管理与 SDK 分发流程。<br>具备良好的调试能力和稳定性优化经验。<br><br>加分项目（双端通用）<br><br>有程序化广告（ DSP/SSP/ADX ）、RTB 协议、广告 SDK 研发经验。<br>有处理广告策略、ECPM 优化、瀑布流填充、多平台适配经验。<br>熟悉音视频播放框架（ ExoPlayer 、AVPlayer ）及渲染优化。<br>有 Flutter / React Native / Unity 插件 SDK 封装经验。<br>有 SDK 安全防护（混淆、加密、反调试、防注入）经验。<br>具备 CI/CD 自动化构建、测试、发布经验。<br>对广告归因、反作弊、数据埋点有实战经验。<br>有独立完成 SDK 从 0 到 1 上线并集成落地的项目经验。<br><br>我们能提供<br>行业内有竞争力的薪资与期权激励<br>完整的广告技术栈接触机会（ DSP/ADX/SSP 全链路）<br>灵活的工作方式与开放的技术氛围<br>广阔的晋升通道与技术影响力舞台<br><br>谢谢观看",
      "content": "如题，程序化广告 SDK 开发岗，25-35K<br>工作内容：做程序化广告 SDK ，<br>双端都招，五险一金全额+补充医疗，无加班<br>要求有程序化广告行业经验，做过 SDK 开发，欢迎推荐和自荐<br>邮箱：aW13YW5neGlhb2hhbyNxcS5jb20=   或者私信 <br>以下是双端 JD <br><br>Android 端<br><br>岗位职能<br>负责公司程序化广告 SDK 在 Android 平台的架构设计、核心功能开发与性能优化。<br>深入理解广告请求、填充、展示、点击、上报全链路逻辑，保证 SDK 高可用性与稳定性。<br>设计并实现与 DSP / SSP / ADX 等平台的高效接口通信，支持多种广告样式（激励视频、插屏、Banner 、开屏等）。<br>优化 SDK 包体积、内存占用、启动速度，提升集成便捷性与运行性能。<br>与产品、算法、运营团队紧密合作，支持广告策略迭代与投放效果优化。<br>负责 SDK 集成文档编写、Demo 工程维护、技术支持及问题排查。<br><br>技能要求<br>Android 端<br>熟练掌握 Java / Kotlin ，具备扎实的 Android 原生开发能力。<br>深入理解 Android 四大组件、View 绘制流程、事件分发机制。<br>熟悉多线程编程（ Handler 、AsyncTask 、ThreadPool 、协程等）与网络编程（ OkHttp 、Retrofit 等）。<br>熟悉 Gradle 构建、AAR 包封装与发布流程。<br>具备良好的代码规范、单元测试和调试能力。<br><br>iOS 端<br><br>岗位职能<br>负责公司程序化广告 SDK 在 iOS 平台的设计、开发、调优与维护。<br>实现广告加载、缓存、渲染、事件上报等核心功能，确保性能与兼容性。<br>对接广告平台 API ，实现与不同网络协议（ HTTP/HTTPS 、gRPC 、WebSocket ）的高效交互。<br>深入优化 SDK 内存管理、线程调度、UI 渲染流畅度。<br>与 QA 协作，保证 SDK 在多机型、多系统版本的稳定性和兼容性。<br>编写完善的技术文档与开发者集成指南，协助客户解决集成问题。<br><br>技能要求<br>熟练掌握 Objective-C / Swift ，具备扎实的 iOS 原生开发能力。<br>深入理解 iOS 运行时、UI 渲染机制、内存管理（ ARC 、引用计数、内存泄漏排查）。<br>熟悉多线程编程（ GCD 、NSOperationQueue ）、网络通信（ NSURLSession 、AFNetworking 、Alamofire ）。<br>熟悉 CocoaPods / Swift Package Manager 的库管理与 SDK 分发流程。<br>具备良好的调试能力和稳定性优化经验。<br><br>加分项目（双端通用）<br><br>有程序化广告（ DSP/SSP/ADX ）、RTB 协议、广告 SDK 研发经验。<br>有处理广告策略、ECPM 优化、瀑布流填充、多平台适配经验。<br>熟悉音视频播放框架（ ExoPlayer 、AVPlayer ）及渲染优化。<br>有 Flutter / React Native / Unity 插件 SDK 封装经验。<br>有 SDK 安全防护（混淆、加密、反调试、防注入）经验。<br>具备 CI/CD 自动化构建、测试、发布经验。<br>对广告归因、反作弊、数据埋点有实战经验。<br>有独立完成 SDK 从 0 到 1 上线并集成落地的项目经验。<br><br>我们能提供<br>行业内有竞争力的薪资与期权激励<br>完整的广告技术栈接触机会（ DSP/ADX/SSP 全链路）<br>灵活的工作方式与开放的技术氛围<br>广阔的晋升通道与技术影响力舞台<br><br>谢谢观看",
      "author": "wangxiaohao",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "18b4a7aeb145",
      "blog_name": "V2EX技术专区",
      "title": "AI 提效？拉倒吧，我累得要死",
      "link": "https://www.v2ex.com/t/1152356#reply37",
      "published": "2025-08-14T06:23:51+00:00",
      "timestamp": 1755152631,
      "summary": "AI 提效真的让我们变轻松了么？怎么感觉越来越累了~只有我是这样的么？<br><br>学不完的新工具，睡不够的焦虑夜，以前学一个软件，一个工具可以用很久，现在要追着 AI 跑~<br>精疲力竭还乐此不疲，感觉比以前更像牛马了~<br>最近越来越有断网的冲动。关掉所有的 AI 资讯推送，如果没有那些卖课的人，估计能轻松一些~",
      "content": "AI 提效真的让我们变轻松了么？怎么感觉越来越累了~只有我是这样的么？<br><br>学不完的新工具，睡不够的焦虑夜，以前学一个软件，一个工具可以用很久，现在要追着 AI 跑~<br>精疲力竭还乐此不疲，感觉比以前更像牛马了~<br>最近越来越有断网的冲动。关掉所有的 AI 资讯推送，如果没有那些卖课的人，估计能轻松一些~",
      "author": "luolink",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "ac0756455d0c",
      "blog_name": "V2EX酷工作",
      "title": "分享今日份快乐，涨薪了",
      "link": "https://www.v2ex.com/t/1152323#reply44",
      "published": "2025-08-14T04:03:55+00:00",
      "timestamp": 1755144235,
      "summary": "<p>最开始进公司的 title 是开发 现在是主管，从 1 人到管理 11 个小伙伴历时一年，目前和团队小伙伴负责一个项目的开发工作.没有任何管理经验，想跟各位大佬取取经。怎么定位自己，怎么搬好砖又走的远。</p>",
      "content": "<p>最开始进公司的 title 是开发 现在是主管，从 1 人到管理 11 个小伙伴历时一年，目前和团队小伙伴负责一个项目的开发工作.没有任何管理经验，想跟各位大佬取取经。怎么定位自己，怎么搬好砖又走的远。</p>",
      "author": "Unitent",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "b98dfc6ebc2a",
      "blog_name": "V2EX技术专区",
      "title": "老铁们，被电信限速后，自查了一下，对流量的疑问点，求大佬解答。",
      "link": "https://www.v2ex.com/t/1152294#reply54",
      "published": "2025-08-14T02:35:57+00:00",
      "timestamp": 1755138957,
      "summary": "<p>昨天联系宽带师傅，告知限速问题，师傅通过其设备查了一下，确认是上传过多导致被认为 PCDN 拉黑了<br>\n经与师傅沟通，得知是 8.10-8.13 合计上传了 2w6 的流量，换算就是 26G 的上传流量，被判定了</p>\n<p>然后我家里是有 NAS ，也有 PT ，但是去 QB 我查了下上传，8.10-13 号，顶多就 2-3 个 g ，一天一个 g 都不到的上传<br>\n然后跟师傅沟通了半天，我怀疑是他们检测问题，他们说可能是我的检测方式有问题，然后昨天自己一直在找问题</p>\n<p>最终在昨晚半夜，通过路由器的端口流量数据看到，8.10 14:00-15:00 ，群晖上传了 24G ，下载 1.2G<br>\n然后我马上开始排查那个时间段群晖干了什么，最终发现是，那个时间段，我通过 QB 下载了两部电影，合计 20.1 个 G<br>\n而且我能确认那个时间段，只下载了这些，关于其他什么网盘备份，都不在那个时间段</p>\n<p>这里我就产生疑问了，为什么我明明是下载了 20 个 G 的数据，路由统计会是上传 24 个 G ，下载才 1 个 G ，如果我路由统计是错的，但是运营商也统计的是上传。按理来说不可能 2 个地方都统计出错吧</p>\n<p>我问 GPT ，说 PT 下载的途中会上传给别人，可能会出现上传比下载多的情况，但是我通过下载记录明确看到，我是 14:43 开始下载，14:59 就下载完了，耗时十来分钟，按我的上传带宽 50M ，每秒跑峰值也就 6-7mb/s ，哪怕一开始下就满速上传，10 多分钟也不可能跑出 20G 的数据</p>\n<p>难道用 QB 会把下载流量当上传吗？这点我不是很懂，如果有懂的大佬，求帮忙分析一下</p>\n<p>现在速度已经被限制，师傅已经上门拍照，等反馈了</p>\n<p>其中这个上传的原因，希望有大佬能帮忙分析一下，是什么情况，谢谢大佬们。</p>",
      "content": "<p>昨天联系宽带师傅，告知限速问题，师傅通过其设备查了一下，确认是上传过多导致被认为 PCDN 拉黑了<br>\n经与师傅沟通，得知是 8.10-8.13 合计上传了 2w6 的流量，换算就是 26G 的上传流量，被判定了</p>\n<p>然后我家里是有 NAS ，也有 PT ，但是去 QB 我查了下上传，8.10-13 号，顶多就 2-3 个 g ，一天一个 g 都不到的上传<br>\n然后跟师傅沟通了半天，我怀疑是他们检测问题，他们说可能是我的检测方式有问题，然后昨天自己一直在找问题</p>\n<p>最终在昨晚半夜，通过路由器的端口流量数据看到，8.10 14:00-15:00 ，群晖上传了 24G ，下载 1.2G<br>\n然后我马上开始排查那个时间段群晖干了什么，最终发现是，那个时间段，我通过 QB 下载了两部电影，合计 20.1 个 G<br>\n而且我能确认那个时间段，只下载了这些，关于其他什么网盘备份，都不在那个时间段</p>\n<p>这里我就产生疑问了，为什么我明明是下载了 20 个 G 的数据，路由统计会是上传 24 个 G ，下载才 1 个 G ，如果我路由统计是错的，但是运营商也统计的是上传。按理来说不可能 2 个地方都统计出错吧</p>\n<p>我问 GPT ，说 PT 下载的途中会上传给别人，可能会出现上传比下载多的情况，但是我通过下载记录明确看到，我是 14:43 开始下载，14:59 就下载完了，耗时十来分钟，按我的上传带宽 50M ，每秒跑峰值也就 6-7mb/s ，哪怕一开始下就满速上传，10 多分钟也不可能跑出 20G 的数据</p>\n<p>难道用 QB 会把下载流量当上传吗？这点我不是很懂，如果有懂的大佬，求帮忙分析一下</p>\n<p>现在速度已经被限制，师傅已经上门拍照，等反馈了</p>\n<p>其中这个上传的原因，希望有大佬能帮忙分析一下，是什么情况，谢谢大佬们。</p>",
      "author": "V392920",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "4a21b5d8657b",
      "blog_name": "V2EX酷工作",
      "title": "杭州急招 Golang 后端开发工程师",
      "link": "https://www.v2ex.com/t/1152292#reply4",
      "published": "2025-08-14T02:33:20+00:00",
      "timestamp": 1755138800,
      "summary": "岗位职责：<br>1. 负责公司生产管理系统、CRM 等平台的开发；<br>2. 推进现有系统的优化和升级，关键技术难点攻克，保障系统稳定和高可用；<br>3. 持续负责公司后端系统的迭代，探索新技术，拓展个人的技术栈及公司的平台能力。<br> <br>任职要求：<br>1. 具备大型项目开发经验，熟悉 go 语言开发，熟练掌握 gin 框架；<br>2. 具备生产管理系统、ERP 、CRM 等系统的项目开发经验；<br>3. 熟悉常见的数据结构，有 MySQL 、Redis 、MongoDB 等常见数据库的使用经验，对 sql 及数据库优化有一定的见解；<br>4. 熟悉分布式系统的设计和应用，熟悉分布式缓存、消息等机制；<br>5. 熟悉 AI 应用构建、拥有 Agent 开发经验者优先；<br>6. 严谨的思维逻辑，耐心细致，对技术保持热枕，有较强的钻研精神、适应能力及抗压能力。<br><br>本岗位暂不涉及跨境电商平台项目，想往这个方向发展的同学慎重投递~<br><br>自研，双休，五险一金，弹性上班，团队氛围 nice<br><br>有意向直接发简历到 17701523921@163.com",
      "content": "岗位职责：<br>1. 负责公司生产管理系统、CRM 等平台的开发；<br>2. 推进现有系统的优化和升级，关键技术难点攻克，保障系统稳定和高可用；<br>3. 持续负责公司后端系统的迭代，探索新技术，拓展个人的技术栈及公司的平台能力。<br> <br>任职要求：<br>1. 具备大型项目开发经验，熟悉 go 语言开发，熟练掌握 gin 框架；<br>2. 具备生产管理系统、ERP 、CRM 等系统的项目开发经验；<br>3. 熟悉常见的数据结构，有 MySQL 、Redis 、MongoDB 等常见数据库的使用经验，对 sql 及数据库优化有一定的见解；<br>4. 熟悉分布式系统的设计和应用，熟悉分布式缓存、消息等机制；<br>5. 熟悉 AI 应用构建、拥有 Agent 开发经验者优先；<br>6. 严谨的思维逻辑，耐心细致，对技术保持热枕，有较强的钻研精神、适应能力及抗压能力。<br><br>本岗位暂不涉及跨境电商平台项目，想往这个方向发展的同学慎重投递~<br><br>自研，双休，五险一金，弹性上班，团队氛围 nice<br><br>有意向直接发简历到 17701523921@163.com",
      "author": "kai712",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "0af6ed3d9bef",
      "blog_name": "V2EX酷工作",
      "title": "这种情况，你们会怎么选择啊？",
      "link": "https://www.v2ex.com/t/1152289#reply88",
      "published": "2025-08-14T02:31:16+00:00",
      "timestamp": 1755138676,
      "summary": "<p>本人 30 了，做开发 7 年多，目前在武汉只有 13k ，有一套房，但好在贷款还的差不多了，每个月只要还几百的房贷算是给自己压力；但是本人身体不太好，家里比较心疼我就帮我找了一个老家的一个公司也是做开发，工资 8k ，想让我养养身体，天天跟我打电话做工作叫我回去，我是觉得从 13 到 8k 还是落差蛮多的，但是回去吃喝住都是家里的，不用花钱；但是话又说回来，好像回去了心理又有点不甘，因为毕竟外面机会还是多一些，还是想在冲一冲，这种情况下你们会怎么选择？</p>",
      "content": "<p>本人 30 了，做开发 7 年多，目前在武汉只有 13k ，有一套房，但好在贷款还的差不多了，每个月只要还几百的房贷算是给自己压力；但是本人身体不太好，家里比较心疼我就帮我找了一个老家的一个公司也是做开发，工资 8k ，想让我养养身体，天天跟我打电话做工作叫我回去，我是觉得从 13 到 8k 还是落差蛮多的，但是回去吃喝住都是家里的，不用花钱；但是话又说回来，好像回去了心理又有点不甘，因为毕竟外面机会还是多一些，还是想在冲一冲，这种情况下你们会怎么选择？</p>",
      "author": "aotemannew",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "d4f7639da0f3",
      "blog_name": "V2EX酷工作",
      "title": "我的同事也刷 V 站, 每次我发贴回帖, 他都能看到. 给我带来很大困扰",
      "link": "https://www.v2ex.com/t/1152269#reply170",
      "published": "2025-08-14T01:42:53+00:00",
      "timestamp": 1755135773,
      "summary": "主要是这家伙每次都在办公室说出来, 弄的我烦躁.<br>可以设置屏蔽他吗? 主要我不清楚他的账号名<br>或者我可以更改自己账号名吗?<br>亦或者存在其他办法吗?",
      "content": "主要是这家伙每次都在办公室说出来, 弄的我烦躁.<br>可以设置屏蔽他吗? 主要我不清楚他的账号名<br>或者我可以更改自己账号名吗?<br>亦或者存在其他办法吗?",
      "author": "skyrim61",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "280baf7cada4",
      "blog_name": "V2EX酷工作",
      "title": "我发现有些领导发现问题不会明说，而是让你再看一下。",
      "link": "https://www.v2ex.com/t/1152268#reply20",
      "published": "2025-08-14T01:37:05+00:00",
      "timestamp": 1755135425,
      "summary": "<p>他已经知道那个地方有问题了，偏偏不说。</p>",
      "content": "<p>他已经知道那个地方有问题了，偏偏不说。</p>",
      "author": "factionstrue",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "31e373052036",
      "blog_name": "V2EX酷工作",
      "title": "跟一个老板一起合作了一个项目，现在项目上线了，想把我踢出局，怎么破，能不能给程序留后门之类的防一手",
      "link": "https://www.v2ex.com/t/1152267#reply19",
      "published": "2025-08-14T01:35:43+00:00",
      "timestamp": 1755135343,
      "summary": "<p>跟老板一起合作了一个项目，提前合同说好了利润，但是现在上线了，老板有点想卸磨杀驴的感觉，服务器和数据库都在阿里云上，能不能弄个什么后门防一手吗</p>",
      "content": "<p>跟老板一起合作了一个项目，提前合同说好了利润，但是现在上线了，老板有点想卸磨杀驴的感觉，服务器和数据库都在阿里云上，能不能弄个什么后门防一手吗</p>",
      "author": "455035319",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "3793f5dbb645",
      "blog_name": "V2EX技术专区",
      "title": "Perplexity AI 要收购 Google Chrome",
      "link": "https://www.v2ex.com/t/1152220#reply22",
      "published": "2025-08-13T15:11:46+00:00",
      "timestamp": 1755097906,
      "summary": "报价 345 亿美元，估计没戏。<br><br><br><a href=\"https://www.bbc.com/news/articles/c3dpr0kkyz4o\" target=\"_blank\">https://www.bbc.com/news/articles/c3dpr0kkyz4o</a>",
      "content": "报价 345 亿美元，估计没戏。<br><br><br><a href=\"https://www.bbc.com/news/articles/c3dpr0kkyz4o\" target=\"_blank\">https://www.bbc.com/news/articles/c3dpr0kkyz4o</a>",
      "author": "paloalto",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "7a502a6df774",
      "blog_name": "V2EX酷工作",
      "title": "想跳槽了，请各位前辈帮忙参考下 offer 是否可接",
      "link": "https://www.v2ex.com/t/1152188#reply34",
      "published": "2025-08-13T11:49:06+00:00",
      "timestamp": 1755085746,
      "summary": "目前 25 在一家台企上班，也算呆了快三年了<br><br>因为最近被新来的同事有点刺激到了，年龄比我小在家里的帮助下首付 100w 买了套房子，月供家里帮着还。<br>我看了下自己的情况，二手房 150w 左右的自己买压力还能接受，去掉月供剩个一两千块；如果全新的房稍微偏远点要在 250w 以上了，算下来月薪不够月供(月供 1w+)，没法生活<br><br>&gt; 有个谈了快一年的女朋友，但还没有走到谈婚论嫁的流程<br><br>所以想换工作最起码买房能轻松一点，正好最近面了两份工作，一份因为加班还有淘汰机制被我 pass 掉了；另一份希望大家帮忙参考下：<br><br>1. 新公司<br>- 某外企的合同工(公司老板是外企的高管，相当于自己开了个小公司外包给大公司)<br>- 做测试开发职位，测试内容在 60% 左右，GPU 驱动测试为主<br>- 税前 base 14kx12 薪，绩效在 1~1.5 月工资(HR 透露 1 月工资居多)<br>- 公积金社保全额缴<br>- 没有固定调薪，需要自己跟主管提<br>- 年假固定，病假 60% 当日工资，没有带薪事假<br>- 不加班，其余福利微不足道<br>- 距离现在住的地方地铁通勤 40min<br><br>2. 现公司<br>- 某台企软件开发职位，薪资税前 10kx13 薪，绩效按个人评定来，在 1w 左右<br>- 公积金社保全额缴，每年有固定涨薪，大概两三百块，每天有餐补(一顿午饭)<br>- 不加班，有带薪事假、带薪病假<br>- 距离现在住的地房走路 10min<br><br>我的想法是希望多攒点钱，然后如果能考上公务员最好；<br><br>但在职考计算机岗位的难度可想而知，所以有可能也要工作个一两年；<br><br>所以想让各位前辈帮忙看看是否可行",
      "content": "目前 25 在一家台企上班，也算呆了快三年了<br><br>因为最近被新来的同事有点刺激到了，年龄比我小在家里的帮助下首付 100w 买了套房子，月供家里帮着还。<br>我看了下自己的情况，二手房 150w 左右的自己买压力还能接受，去掉月供剩个一两千块；如果全新的房稍微偏远点要在 250w 以上了，算下来月薪不够月供(月供 1w+)，没法生活<br><br>&gt; 有个谈了快一年的女朋友，但还没有走到谈婚论嫁的流程<br><br>所以想换工作最起码买房能轻松一点，正好最近面了两份工作，一份因为加班还有淘汰机制被我 pass 掉了；另一份希望大家帮忙参考下：<br><br>1. 新公司<br>- 某外企的合同工(公司老板是外企的高管，相当于自己开了个小公司外包给大公司)<br>- 做测试开发职位，测试内容在 60% 左右，GPU 驱动测试为主<br>- 税前 base 14kx12 薪，绩效在 1~1.5 月工资(HR 透露 1 月工资居多)<br>- 公积金社保全额缴<br>- 没有固定调薪，需要自己跟主管提<br>- 年假固定，病假 60% 当日工资，没有带薪事假<br>- 不加班，其余福利微不足道<br>- 距离现在住的地方地铁通勤 40min<br><br>2. 现公司<br>- 某台企软件开发职位，薪资税前 10kx13 薪，绩效按个人评定来，在 1w 左右<br>- 公积金社保全额缴，每年有固定涨薪，大概两三百块，每天有餐补(一顿午饭)<br>- 不加班，有带薪事假、带薪病假<br>- 距离现在住的地房走路 10min<br><br>我的想法是希望多攒点钱，然后如果能考上公务员最好；<br><br>但在职考计算机岗位的难度可想而知，所以有可能也要工作个一两年；<br><br>所以想让各位前辈帮忙看看是否可行",
      "author": "msywkylemon",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "98401858714f",
      "blog_name": "V2EX酷工作",
      "title": "被裁员, 躺了 19 个月, 找到了新工作",
      "link": "https://www.v2ex.com/t/1152160#reply34",
      "published": "2025-08-13T09:10:31+00:00",
      "timestamp": 1755076231,
      "summary": "24 年 1 月 31 号 lastday , 拿了 n+1 ,躺平了 18 个月, 刚开始好爽, 后来回老家开了个厂子,三个月关门了, 又滚回上海躺了一年多, 7 月份, 之前的老板去了一家公司当总监, 给我整进去了. <br><br>25 年 8.1 号入职, 总包减了 -10%(本来也不多), 最近上班很开心,  原来写 go/php  现在写 java 还在学, 发现 java 有点难写, 不知道学习能力不够还是年纪大了. 今年 31  <br>------------<br><br>总结: 人不能脱离社会太久.",
      "content": "24 年 1 月 31 号 lastday , 拿了 n+1 ,躺平了 18 个月, 刚开始好爽, 后来回老家开了个厂子,三个月关门了, 又滚回上海躺了一年多, 7 月份, 之前的老板去了一家公司当总监, 给我整进去了. <br><br>25 年 8.1 号入职, 总包减了 -10%(本来也不多), 最近上班很开心,  原来写 go/php  现在写 java 还在学, 发现 java 有点难写, 不知道学习能力不够还是年纪大了. 今年 31  <br>------------<br><br>总结: 人不能脱离社会太久.",
      "author": "NACkKhk1LXa4a6NV",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "aa40a36d5d92",
      "blog_name": "V2EX酷工作",
      "title": "大牛哥们，交流下副业",
      "link": "https://www.v2ex.com/t/1152117#reply33",
      "published": "2025-08-13T07:25:29+00:00",
      "timestamp": 1755069929,
      "summary": "我目前刚 24 岁，在大厂做后端开发，但是感觉很不适合自己的性格<br>不想当螺丝钉，想做点事情出来<br>但大厂或者说目前这个团队没有这样的土壤<br>越来越觉得上班没什么意思<br>但又不知道自己能做什么<br>大牛哥们能分享下自己的想法么",
      "content": "我目前刚 24 岁，在大厂做后端开发，但是感觉很不适合自己的性格<br>不想当螺丝钉，想做点事情出来<br>但大厂或者说目前这个团队没有这样的土壤<br>越来越觉得上班没什么意思<br>但又不知道自己能做什么<br>大牛哥们能分享下自己的想法么",
      "author": "suifengba",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    },
    {
      "id": "11f0478ab1d8",
      "blog_name": "V2EX技术专区",
      "title": "要是 Gboard 出个 Mac 端还挺期待的",
      "link": "https://www.v2ex.com/t/1152056#reply94",
      "published": "2025-08-13T03:41:13+00:00",
      "timestamp": 1755056473,
      "summary": "<p>pixel 上一直在用，虽然词库方面很原始但用久了挺舒服的。Mac 上却是用的搜狗，有点膈应。</p>",
      "content": "<p>pixel 上一直在用，虽然词库方面很原始但用久了挺舒服的。Mac 上却是用的搜狗，有点膈应。</p>",
      "author": "iflint",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "37228787ab70",
      "blog_name": "V2EX技术专区",
      "title": "chrome 还是 edge？",
      "link": "https://www.v2ex.com/t/1152029#reply178",
      "published": "2025-08-13T02:51:42+00:00",
      "timestamp": 1755053502,
      "summary": "<p>也可以说一说影响你做选择的原因</p>",
      "content": "<p>也可以说一说影响你做选择的原因</p>",
      "author": "GaryLee",
      "tags": [],
      "category": "技术",
      "source_icon": "🔧",
      "source_color": "#A5B4FC"
    },
    {
      "id": "0f5c7ea1f7b4",
      "blog_name": "潮流周刊",
      "title": "第233期 - 树上有鸟",
      "link": "https://weekly.tw93.fun/posts/233-%E6%A0%91%E4%B8%8A%E6%9C%89%E9%B8%9F/",
      "published": "2025-08-11T00:00:00",
      "timestamp": 1754841600,
      "summary": "<img src=\"https://gw.alipayobjects.com/zos/k/kk/233.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于上周天气不错的一个早上，看到树上有一只挺大的鸟，配合着这个阳光和绿叶挺好看的。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>妙言更新了一些新功能</strong><br>\n<a href=\"https://github.com/tw93/MiaoYan/releases\">https://github.com/tw93/MiaoYan/releases</a><br>\n兼容了 macOS 26，有需要小伙伴可以下载覆盖更新，支持了这些，编辑器中的图片链接支持预览，文件夹支持拖拽修改原有的顺序，三栏布局拖拽收起展开，导出长 PDF 终于不切割了，默认使用仓耳今楷字体，包管理器升级到 Swift 等等。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/fw/MiM9hj.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>用 Claude Code 非常上瘾</strong><br>\n<a href=\"https://www.anthropic.com/claude-code\">https://www.anthropic.com/claude-code</a><br>\n假如你还没有用过，一定要去试试看， 就是很贵，和她写代码聊天有一种老友的感觉，回到了那个 30M 流量就要 5 块那个年代感。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/x0/Gn3rAr.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一套适用于自动化完成一般照相馆后期证件照处理流</strong><br>\n<a href=\"https://github.com/aoguai/LiYing\">https://github.com/aoguai/LiYing</a><br>\n这个开源项目 LiYing 挺有趣，一套适用于自动化完成一般照相馆后期证件照处理流程的照片自动处理的程序，可以完成人体、人脸自动识别，角度自动纠正，自动更换任意背景色，任意尺寸证件照自动裁切，并自动排版。<br>\n<img class=\"border\" src=\"https://gw.alipayobjects.com/zos/k/82/JdNoHv.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"750\"></p>\n<p><strong>一个开源的类似 CapCut 的视频编辑器</strong><br>\n<a href=\"https://opencut.app\">https://opencut.app</a><br>\n发现一个开源的类似 CapCut 的视频编辑器，做得挺精致简单的，基于时间轴的编辑、多轨支持、实时预览等功能，有需要的可以试试看。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/ou/VzuBI0.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>将 Mac 触控板用作称重秤</strong><br>\n<a href=\"https://github.com/KrishKrosh/TrackWeight\">https://github.com/KrishKrosh/TrackWeight</a><br>\n这个思路好有趣，将 Mac 触控板用作称重秤，利用触控板内置的 Force Touch 压力传感器来测量。<br>\n<img class=\"border\" src=\"https://gw.alipayobjects.com/zos/k/uf/mySaTT.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"750\"></p>\n<h2>随便看看</h2>\n<p><strong>Claude Code: Best practices for agentic coding</strong><br>\n<a href=\"https://anthropic.com/engineering/claude-code-best-practices\">https://anthropic.com/engineering/claude-code-best-practices</a><br>\nClaude 官方这篇文章值得一读，总结了 Anthropic 内外使用 Claude Code 的最佳实践。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/5j/C8vgIn.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>甚至还有人喜欢做题</strong><br>\n<a href=\"https://github.com/lydiahallie/javascript-questions/blob/master/zh-CN/README-zh_CN.md\">https://github.com/lydiahallie/javascript-questions/blob/master/zh-CN/README-zh_CN.md</a><br>\n甚至还有人喜欢做题，这个博主每天在的 Instagram 上每天都会发布 JavaScript 的多选问题，并且同时也会在这个仓库中发布，玩玩看，回顾回顾。\n<img class=\"border\" src=\"https://gw.alipayobjects.com/zos/k/mg/xrZnZ9.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"750\"></p>\n<p><strong>最近好电影：浪浪山小妖怪</strong><br>\n<a href=\"https://movie.douban.com/subject/36438475/\">https://movie.douban.com/subject/36438475/</a><br>\n好看的，小伙伴们可以去看，笑声中带着打工人的心酸，好久没有值得一看的影院电影了。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/1a/zzrCM8.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "content": "<img src=\"https://gw.alipayobjects.com/zos/k/kk/233.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于上周天气不错的一个早上，看到树上有一只挺大的鸟，配合着这个阳光和绿叶挺好看的。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>妙言更新了一些新功能</strong><br>\n<a href=\"https://github.com/tw93/MiaoYan/releases\">https://github.com/tw93/MiaoYan/releases</a><br>\n兼容了 macOS 26，有需要小伙伴可以下载覆盖更新，支持了这些，编辑器中的图片链接支持预览，文件夹支持拖拽修改原有的顺序，三栏布局拖拽收起展开，导出长 PDF 终于不切割了，默认使用仓耳今楷字体，包管理器升级到 Swift 等等。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/fw/MiM9hj.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>用 Claude Code 非常上瘾</strong><br>\n<a href=\"https://www.anthropic.com/claude-code\">https://www.anthropic.com/claude-code</a><br>\n假如你还没有用过，一定要去试试看， 就是很贵，和她写代码聊天有一种老友的感觉，回到了那个 30M 流量就要 5 块那个年代感。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/x0/Gn3rAr.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一套适用于自动化完成一般照相馆后期证件照处理流</strong><br>\n<a href=\"https://github.com/aoguai/LiYing\">https://github.com/aoguai/LiYing</a><br>\n这个开源项目 LiYing 挺有趣，一套适用于自动化完成一般照相馆后期证件照处理流程的照片自动处理的程序，可以完成人体、人脸自动识别，角度自动纠正，自动更换任意背景色，任意尺寸证件照自动裁切，并自动排版。<br>\n<img class=\"border\" src=\"https://gw.alipayobjects.com/zos/k/82/JdNoHv.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"750\"></p>\n<p><strong>一个开源的类似 CapCut 的视频编辑器</strong><br>\n<a href=\"https://opencut.app\">https://opencut.app</a><br>\n发现一个开源的类似 CapCut 的视频编辑器，做得挺精致简单的，基于时间轴的编辑、多轨支持、实时预览等功能，有需要的可以试试看。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/ou/VzuBI0.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>将 Mac 触控板用作称重秤</strong><br>\n<a href=\"https://github.com/KrishKrosh/TrackWeight\">https://github.com/KrishKrosh/TrackWeight</a><br>\n这个思路好有趣，将 Mac 触控板用作称重秤，利用触控板内置的 Force Touch 压力传感器来测量。<br>\n<img class=\"border\" src=\"https://gw.alipayobjects.com/zos/k/uf/mySaTT.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"750\"></p>\n<h2>随便看看</h2>\n<p><strong>Claude Code: Best practices for agentic coding</strong><br>\n<a href=\"https://anthropic.com/engineering/claude-code-best-practices\">https://anthropic.com/engineering/claude-code-best-practices</a><br>\nClaude 官方这篇文章值得一读，总结了 Anthropic 内外使用 Claude Code 的最佳实践。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/5j/C8vgIn.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>甚至还有人喜欢做题</strong><br>\n<a href=\"https://github.com/lydiahallie/javascript-questions/blob/master/zh-CN/README-zh_CN.md\">https://github.com/lydiahallie/javascript-questions/blob/master/zh-CN/README-zh_CN.md</a><br>\n甚至还有人喜欢做题，这个博主每天在的 Instagram 上每天都会发布 JavaScript 的多选问题，并且同时也会在这个仓库中发布，玩玩看，回顾回顾。\n<img class=\"border\" src=\"https://gw.alipayobjects.com/zos/k/mg/xrZnZ9.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"750\"></p>\n<p><strong>最近好电影：浪浪山小妖怪</strong><br>\n<a href=\"https://movie.douban.com/subject/36438475/\">https://movie.douban.com/subject/36438475/</a><br>\n好看的，小伙伴们可以去看，笑声中带着打工人的心酸，好久没有值得一看的影院电影了。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/1a/zzrCM8.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "124ae7ca0171",
      "blog_name": "美团技术团队",
      "title": "联合营销生态下的广告机制设计与实践",
      "link": "https://tech.meituan.com/2025/08/08/advertising-mechanism-design-and-practice-in-meituan.html",
      "published": "2025-08-08T00:00:00+00:00",
      "timestamp": 1754611200,
      "summary": "即时零售行业蓬勃发展，在此生态下美团零售广告成为助力零售商家和品牌商扩大生意规模的重要驱动力。文章首先介绍了在全新业务模式“联合营销”场景下，首创的多协同方参竞拍卖机制算法——“集资拍卖”，然后梳理了集资拍卖在美团的技术发展路径和实践，围绕规则化集资拍卖、模型化集资拍卖、整体集资拍卖进行了展开，最后是一些总结，希望能对大家有所帮助或启发。",
      "content": "\n<h2>1 背景介绍</h2><h3>1.1 联合营销介绍</h3><p>即时零售行业蓬勃发展，在为消费者提供高效便捷服务的同时，也成为众多零售商和品牌商实现业务增长的关键渠道。在此生态下，美团零售广告成为助力零售商家和品牌商扩大生意规模的重要驱动力，并有力支撑平台商业化战略发展。目前零售广告流量资源已覆盖美团App、外卖App等多个核心渠道，包括推荐/搜索信息流、品牌专区、店内货架等多种形态，贯穿消费者购前、购中、购后等场景，为广告主提供了多形态、全链路的精准营销能力，部分典型资源位示例如下：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/a28837e88731baf8a79e70cc23e99a071400386.png\"></p><p>传统的广告商业模式中，广告主（包括零售商和品牌商）通常作为独立的出资方参与竞价，并单独承担广告费用。在传统业务场景中，一个广告资源位只能售卖给一个出资方。而当同一广告资源涉及多个出资方时（例如：零售商和品牌商同时愿意为同一个商品支付广告费），<strong>传统业务模式无法共享同一个流量资源位</strong>，这使得传统的业务模式难以实现多方利益的有效兼顾，容易造成资源浪费，无法最大化地满足平台、零售商、品牌商及用户的多方利益。</p><p>具体而言，在美团的商业场景中，品牌商通常会为门店中自有品牌商品投放广告以提升品牌销量，而门店则通过投放广告提升整体店铺销量，使得<strong>品牌商与零售商具备了相似的营销目标和营销诉求</strong>。为了实现单个流量资源位的共享，平台创新性地设计了多方协同的营销模式——“<strong>联合营销</strong>”，即由品牌商和零售商共同出资，为同一商品投放广告的营销模式。联合营销助力品牌与零售商协同发力，更好地平衡和满足各方的利益诉求，<strong>实现营销效率提升（如ROI优化）、双边成本降低及平台收入增长的多方共赢格局</strong>。</p><h3>1.2 集资拍卖介绍</h3><p>在联合营销业务模式下，亟需设计科学合理的流量售卖机制，实现广告资源的高效分配与扣费，并确保系统具备激励兼容性。因此，<strong>我们将联合营销场景下的广告拍卖问题抽象为“集资拍卖”，即由多方共同出价参与，对相同标的物进行竞价扣费的拍卖场景，旨在解决联合营销场景下的流量售卖问题。这是一个针对联合营销业务需求提出的全新机制设计问题</strong>。</p><p>如下图所示，品牌E的商品C在门店A的线上渠道销售时，门店A和品牌E均有意愿为商品出资参与流量竞争，则双方构成了集资关系：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/a28837e88731baf8a79e70cc23e99a071400386.png\"></p><p>联合营销的业务特点主要包括“<strong>多元预算协同</strong>”、“<strong>多边竞合博弈</strong>”、“<strong>公私域协同</strong>”等（①多元预算协同：广告预算来自多类客户（品牌商、零售商）；②多边竞合博弈：与一般广告生态不同，联合营销业务是一个工业界特有的多方竞合博弈的场景，需考虑四方利益博弈：用户、平台、品牌商、零售商；③公私域协同：在公域流量场中存在四方博弈关系，而在私域流量场中主要是三方博弈（用户、平台、品牌商），公域拍卖缺乏对店内私域流量价值感知，存在流量价值低估、以及“搭便车”的问题）。</p><p>针对“联合营销”业务中的流量售卖需求，我们结合“<strong>多元预算协同</strong>”和“<strong>多边竞合博弈</strong>”的业务特性，创新性地设计了“<strong>集资拍卖</strong>”机制方案。同时，针对“<strong>公私域协同</strong>”的场景特点，我们深入探索了公域与私域流量的联合拍卖模式，并提出了“<strong>两阶段集资拍卖</strong>”解决方案。值得注意的是，区别于Facebook提出的<a href=\"https://www.facebook.com/business/tools/collaborative-ads\">协同广告</a>（Collaborative Ads）模式——该模式通过品牌商引流、零售商转化及数据贯通实现“品效合一”，集资拍卖在机制设计层面进行了深度创新，系统性地解决了联合营销下的流量变现问题。</p><h2>2 联合营销广告机制算法设计</h2><p>集资拍卖是一个全新的问题，目前该问题尚未有成熟的落地机制与算法。整体来看，随着业务目标和技术需求的不断演变，我们将技术发展路径总结为三个主要阶段：<strong>规则化集资拍卖-&gt;模型化集资拍卖-&gt;整体集资拍卖</strong>。</p><ul><li><strong>阶段一</strong>：目标是快速上线以进行效率验证。我们采用了GSP结合保留价的策略，有效规避了计费时结果为负的风险，从而保障了平台收入。同时，<strong>两阶段集资拍卖</strong>的升级，使得广告在公域流量排序时，综合考虑了点击候选后进入私域场景的价值，即在公域流量拍卖时衡量了公私流量域的整体价值，提升了公私域流量的协同效率。</li><li><strong>阶段二</strong>：目标是构建数据驱动、多方激励兼容的<strong>端到端模型化方案</strong>。我们针对差异化的问题探索了多元化的解决方案，更好的保障了多方客户的激励兼容性。这一阶段，我们重点探索联合营销场景下的自动拍卖机制设计范式，在保障多方激励兼容的基础上提升平台收益。 技术实现路径上经历仿射-&gt;regretNet-based NN-&gt;匿名性&amp;公平性保障。</li><li><strong>阶段三</strong>：目标在于全面提升<strong>整体效率</strong>。主要的升级包括引入外部性建模，更加聚焦于业务和场景的特性，实现多方动态价值融合与多出价分布的优化等方式，我们持续探索并迭代整体拍卖集资方案，推动效率的进一步提升。</li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/d0aa394d9db306b6f0589884bb597b20285998.png\"></p><p>在工业界落地实践中，有两个必要的前提，一是要确定合适的计费点，二是设计合适的集资逻辑。由于品牌广告（曝光计费）和门店广告（点击计费）的计费策略差异，首先需要完成计费链路的改造，为此工程链路上升级了计费系统以及上报链路，构建了适配联合营销广告的<strong>双计费系统</strong>。此外，不同的集资逻辑会影响集资规模，即在什么条件下门店和品牌可以融合成一个捆绑Bundle，从而完成后续合作；在美团场景下，我们设计了以门店为基础的集资条件，以提升集资规模。</p><h3>2.1 规则化集资拍卖</h3><h4>2.1.1 GSP+保留价集资</h4><p>首先，在业务发展初期，在技术选型上主要对比了GSP-Based和VCG-Based方案。GSP拍卖的优势在于计费思路清晰，可解释性较强，更利于平台优化自身流量营销指标，但缺陷为无法完全保证激励兼容，由于联合营销场景更为复杂（涉及多参与方、多物品），GSP不满足激励兼容的特性导致拍卖系统不稳定的现象会更加突出；VCG拍卖的优势在于可以保证激励兼容的特性，而且可以产生很好的社会福利，但是收益较低。为了快速支持上线，且保证平台收益，在原有GSP基础上，我们选择了GSP+保留价的多方规则化集资拍卖方案。</p><h4>2.1.2 两阶段集资拍卖</h4><p>基于现有的公私域联合营销模式，我们创新性地引入在联合营销下的公域与私域流量价值融合的拍卖模式，提出了面向用户行为路径的两阶段集资拍卖机制。该机制在美团推荐和搜索场景中，将用户在一阶段（推荐/搜索列表页）、落地页（点击跳转页）和详情页（最终转化页）中的全链路行为纳入整体优化视角，从而能够建模后链路价值以缓解“搭便车”的问题，突破了传统仅依赖单点价值的排序范式。</p><p>通过引入落地页价值系数，两阶段集资拍卖实现了对各阶段价值贡献的灵活调控，并构建了状态转移价值模型，以细粒度捕捉用户在浏览、翻页、点击、退出等各类行为下的价值流转。实际业务落地效果表明，该机制有效地提升了公私域流量的整体价值，显著促进了落地页广告收入的增长，为公域联合营销场景下的商业化变现提供了坚实的技术支撑和可迁移的技术框架。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/aa6ca03109bd07ec76a165da52c5031b2116934.png\"></p><h3>2.2 模型化集资拍卖</h3><p>在传统拍卖机制的理论框架下，平台、零售商、品牌商与用户等多方利益主体的价值最大化难以实现有效均衡。为了构建更高效的拍卖算法以支撑联合业务健康发展，我们主要探索了以下三个模型化解决方案，重点突破算法效率与激励兼容性等核心问题，以实现联合营销场景下的端到端的多物品拍卖机制。</p><ul><li><strong>JAMA</strong>：基于AMA的泛化版本，通过随机采样大量初始分配结果，并采用多层感知机进行优化，在满足激励兼容的基础上，解决弱预算平衡（WBB）问题，从而提升平台收益。</li><li><strong>JRegNet</strong>：采用多层感知机作为网络的基础架构，包含分配网络和支付网络两个部分来分别生成分配结果和支付结果，以最大化平台收益为目标，将占优策略激励兼容DSIC转化为对遗憾值Regret的约束，采用增广拉格朗日方法将有约束的目标函数转换为无约束的目标函数进行学习优化，相比JAMA建模更灵活且在收入表现较优。</li><li><strong>JTransNet</strong>：算法主要解决了拍卖中的匿名性拍卖问题，使广告序列满足置换不变性提升拍卖的公平性，并实现了确定性分配更好的支持上线，提升了平台业务收入。</li></ul><h4>2.2.1 JAMA：基于AMA的集资拍卖解决方案</h4><p>VCG机制是传统的基于规则的拍卖机制，其泛化版本AMA在保证不违反DSIC条件的前提下，在社会福利损失可控的前提下提升了收益表现。而由于AMA机制无法直接应用到联合拍卖的场景中，我们首先将VCG机制拓展到联合拍卖场景中，设计了RVCG机制，RVCG机制修改了VCG机制的支付规则，确保在联合拍卖场景中不会违反弱预算平衡WBB条件。同时，提出了基于AMA的集资拍卖算法JAMA，JAMA在输入阶段对零售商和品牌商的出价通过加权生成出价组合，随后通过零售商和品牌商之间的出价二分关系图得到联合出价，然后得到广告的分配和扣费结果，更多细节详见<a href=\"https://link.springer.com/chapter/10.1007/978-981-97-2340-9_29\">JAMA</a>。为了提高 JAMA 的收入表现，初始化时生成了多个带约束的分配规则，但其在处理较为复杂的集资关系时，模型的收敛性不够稳定，进而影响广告收入。为此继续探索了基于Regret的拍卖方案JRegNet。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/0f6d421e81c76a5bd33daf9e118227d6343577.png\"></p><h4>2.2.2 JRegNet：基于Regret的神经网络集资拍卖解决方案</h4><p>集资拍卖场景中，如何克服捆绑出价的依赖性以及如何决定捆绑内两方的支付，导致大多数经典和常用的机制不适用于联合广告。近年来随着机器学习的快速发展，基于regret的自动化机制设计的概念被提出用于计算最优机制。</p><p>然而，当前的神经网络架构并不适用于联合拍卖，主要原因是它们无法处理Bundle的分配问题。因此，我们基于自动机制设计的技术，设计了一个新的适用于联合拍卖的神经网络架构JRegNet，并通过JRegNet来计算联合拍卖机制。JRegNet的架构，主要包含负责分配规则的分配网络和确定支付规则的支付网络。这两个网络的输出用于计算竞标者的效用、收入、遗憾值以及整个网络的损失函数值。网络的输入部分，包含了门店和品牌在广告位上的预期出价，以及门店和品牌之间的联合关系矩阵。在 JRegNet 中，为了适应联合拍卖设置，分配网络首先输出捆绑的分配概率矩阵，分配矩阵包含每个广告位上由门店和品牌组成的每个捆绑包的分配概率，然后基于支付网络输出所有竞标者的支付结果，更多细节详见<a href=\"https://arxiv.org/pdf/2408.09885\">JRegNet</a>。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/87d95dede7df62a7f4df0b209eb997c5581198.png\"></p><p>该方案在收入提升等方面相比于JAMA取得了更好的表现，但是在实际工业落地存在一些限制（如工业场景中广告位实体不可分割，一般来讲，一个广告资源位只能售卖给一个广告/一个Bundle广告），于是进一步探索了更符合实际工业场景的方案JTransNet。</p><h4>2.2.3 JTransNet：满足匿名性和确定性分配的解决方案</h4><p>无论是 JRegNet 还是JAMA架构，均无法同时满足匿名性和确定性分配。为了同时满足匿名性（匿名性是指拍卖参与者的身份和竞标顺序不影响拍卖结果，即拍卖结果仅取决于竞标的价值，与拍卖参与者的身份和竞标顺序无关）和确定性分配两个条件，给基于 AMD 架构实现的算法在工业的实际应用时带来了巨大的挑战。</p><p>算法如果不具备匿名性，意味着仅仅改变竞标顺序就会导致算法的分配和支付结果不同。具体到实际线上场景来说，在一次请求中，高价值的广告候选，如果受输入模型的位置影响而改变了竞标结果，这容易使得拍卖结果非常不公平且不令人信服。JTransNet主要解决了集资拍卖中的匿名性和确定性分配的问题，使得广告候选满足置换不变性，并且确定性分配使JTransNet成为一个真正的符合实际工业场景的端到端神经网络架构，更符合真实线上广告分配场景，从而更好地支持了业务的发展。更多细节详见<a href=\"https://arxiv.org/pdf/2506.02435\">JTransNet</a>。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/28c23482df492f04db67b2c8bb6ca210506923.png\"></p><p>上述方案在实际业务中取得了较好的落地效果，为了进一步打开集资拍卖的收益空间，我们从宏观（如全局视角、自然外部性）和微观（如个体视角、客户分布差异）两个层面持续进行技术探索和升级，构建了整体集资拍卖。</p><h3>2.3 整体集资拍卖</h3><p>在集资拍卖技术设计的前中期，我们尝试了规则化和探索了模型化方案，并在实际业务落地中取得了较好的效果。然而，上述工作普遍不考虑自然外部性的影响，而真实的广告曝光及效果会受到自然上下文的影响。为了更好的建模自然外部性，同时构建一套整体效率更优的AMD机制框架，在JRegNet的基础上升级到了整体集资拍卖方案。该方案整合了广告候选和自然候选作为模型的共同输入来决策，同时建模时考虑了譬如多方广告主出价的差异性等问题，我们提出了JAE，一种基于自然上下文特征的自适应神经网络。该框架基于AMD方法，将平台收益和用户体验作为核心优化项，它是第一个将自然外部性影响引入联合拍卖的AMD方法，能够自适应感知不同广告主的出价分布和实现多方动态价值融合，并且可以将联合广告与传统广告进行统一拍卖。同时，在该框架中将广告队列和自然队列进行统一分配和扣费，以生成全局最优的混合列表。JAE在多物品拍卖中也取得了较好的实验效果，且并具有良好的可迁移性，在显着提高平台收入的同时更好的兼顾用户体验。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/29740f8b449a7b10889e383997e2ae95569801.png\"></p><h3>2.4 技术总结 &amp; 落地情况</h3><h4>2.4.1 技术总结</h4><p>在联合营销生态下，我们首次提出了多方出资下的联合拍卖机制范式，并开创性的构建了“集资拍卖”技术体系。整体围绕着如何快速支持联合拍卖上线，如何构建自动化的模型拍卖机制提升效率，以及如何构建全局最优的整体拍卖机制展开递进式迭代，形成了多元化且易迁移的技术栈——包括基于传统拍卖机制的集资拍卖方案，基于深度神经网络的集资拍卖方案，以及整体集资拍卖方案等。这一系列创新显著推动了拍卖理论的发展，首个基于AMD集资拍卖解决方案为行业树立了标杆，不仅拓展了广告拍卖机制的理论基础，也为机制设计领域开辟了新的方向。按照联合拍卖适配、自动化AMD拍卖机制提效、外部性考虑相关技术线条来划分，可以将部分方法总结如下：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/aaa1e1eb16a8c27b90b65c886a298290202499.png\"></p><h4>2.4.2 落地情况</h4><p>相关技术在美团零售广告实际业务场景落地并取得了较好的结果，提升了广告变现效率的同时，还保障了联合营销生态的健康发展，助力品牌和门店更好地实现了生意的增长。在业务数据方面，助力联合营销业务下集资广告部分相比普通广告在CPM、ROI上均显著提升超20%。同时，针对联合营销业务的技术研究，开辟了一个崭新的机制研究方向，在工业界和学术界均产生了积极的响应。集资拍卖系列技术沉淀的也相继发表在KDD 2024、TAMC 2024、SIGIR 2025等高水平会议/期刊上，同时也有多篇论文在人工智能相关顶会会议审稿中。</p><h2>3 总结与展望</h2><p>“联合营销”业务模式的打造，以及围绕其设计的“集资拍卖”系列算法的持续落地，不仅显著提升了零售广告收入，还推动了该模式实现系统化和产品化升级。未来，我们将持续从产品和技术两大维度协同推进，进一步加速零售业务的商业化进程。</p>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "0a5b1f4df2ac",
      "blog_name": "潮流周刊",
      "title": "第232期 - 小鱼小虾",
      "link": "https://weekly.tw93.fun/posts/232-%E5%B0%8F%E9%B1%BC%E5%B0%8F%E8%99%BE/",
      "published": "2025-08-04T00:00:00",
      "timestamp": 1754236800,
      "summary": "<img src=\"https://cdn.fliggy.com/upic/1754231724.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于周末吃到的一个小鱼小虾炒辣椒，很好吃，非常下饭，特别有小时候在老家吃到的感觉。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>开源的极简的 AI 搜索引擎 Scira</strong><br>\n<a href=\"https://github.com/zaidmukaddam/scira\">https://github.com/zaidmukaddam/scira</a><br>\n开源版本的 Perplexity + DeepSearch 工具，看着UI的效果挺好的，可以试试，可以一键 Vercel 部署。<br>\n<img src=\"https://cdn.fliggy.com/upic/1754232858.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>通义实验室开源了一个 WebAgent</strong><br>\n<a href=\"https://github.com/Alibaba-NLP/WebAgent\">https://github.com/Alibaba-NLP/WebAgent</a><br>\n通义实验室开源了一个 WebAgent，用于网络信息的搜索，包括 WebWalker &#x26; WebDancer &#x26; WebSailor &#x26; WebShaper 这几个模块，除去功能外，还挺喜欢他的命名的，可以去看看效果。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/tw/rtPRep.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>配色生成器</strong><br>\n<a href=\"https://kigen.design/color\">https://kigen.design/color</a><br>\n这个配色生成器很适合我这种强迫症，输入一个颜色，自动帮你生成一批好看的颜色，真的非常建议弄 AI 网站的同学不要再整那种蓝紫色的风格了，一眼就被人看出来是 AI 生成的网站，真的很丑，可以多加入一些自己喜欢的舒服色彩多好啊。<br>\n<img src=\"https://cdn.fliggy.com/upic/1754232179.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>看看 AI</h2>\n<p><strong>从零开始的大语言模型原理与实践教程</strong><br>\n<a href=\"https://datawhalechina.github.io/happy-llm/#/\">https://datawhalechina.github.io/happy-llm/#/</a><br>\n这个可以的，深入理解 LLM 核心原理，动手实现你的第一个大模型，DataWhale 开源免费电子书，非常简单好读。\n<img src=\"https://cdn.fliggy.com/upic/1754231951.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>12-Factor Agents - Principles for building reliable LLM applications</strong><br>\n<a href=\"https://github.com/humanlayer/12-factor-agents\">https://github.com/humanlayer/12-factor-agents</a><br>\nGitHub上整理的这个 12-Factor Agents - Principles for building reliable LLM applications 非常不错，我们能用哪些原则来构建真正够用、可以交付给生产客户使用的LLM驱动软件？写得非常好，值得学习。\n<img class=\"border\" src=\"https://cdn.fliggy.com/upic/1754232031.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>AI代理的上下文工程：构建Manus的经验教训</strong><br>\n<a href=\"https://manus.im/zh-cn/blog/Context-Engineering-for-AI-Agents-Lessons-from-Building-Manus\">https://manus.im/zh-cn/blog/Context-Engineering-for-AI-Agents-Lessons-from-Building-Manus</a>\nManus 这篇文章值得一读 「AI代理的上下文工程：构建Manus的经验教训」，把不少内部探索过程中踩坑的东西给分享出来了，挺好的。<br>\n<img class=\"border\" src=\"https://cdn.fliggy.com/upic/1754232241.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>6K / 48K / 231 / 102K，感谢喜欢，继续 Code / Write / Share。</strong></p>\n\n\n    \n        \n          <img src=\"https://cdn.fliggy.com/upic/1754271450.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/upic/1754271458.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\">\n        \n    \n    \n        \n          <img src=\"https://cdn.fliggy.com/upic/1754271465.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/upic/1754271474.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\">\n        \n    \n",
      "content": "<img src=\"https://cdn.fliggy.com/upic/1754231724.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于周末吃到的一个小鱼小虾炒辣椒，很好吃，非常下饭，特别有小时候在老家吃到的感觉。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>开源的极简的 AI 搜索引擎 Scira</strong><br>\n<a href=\"https://github.com/zaidmukaddam/scira\">https://github.com/zaidmukaddam/scira</a><br>\n开源版本的 Perplexity + DeepSearch 工具，看着UI的效果挺好的，可以试试，可以一键 Vercel 部署。<br>\n<img src=\"https://cdn.fliggy.com/upic/1754232858.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>通义实验室开源了一个 WebAgent</strong><br>\n<a href=\"https://github.com/Alibaba-NLP/WebAgent\">https://github.com/Alibaba-NLP/WebAgent</a><br>\n通义实验室开源了一个 WebAgent，用于网络信息的搜索，包括 WebWalker &#x26; WebDancer &#x26; WebSailor &#x26; WebShaper 这几个模块，除去功能外，还挺喜欢他的命名的，可以去看看效果。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/tw/rtPRep.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>配色生成器</strong><br>\n<a href=\"https://kigen.design/color\">https://kigen.design/color</a><br>\n这个配色生成器很适合我这种强迫症，输入一个颜色，自动帮你生成一批好看的颜色，真的非常建议弄 AI 网站的同学不要再整那种蓝紫色的风格了，一眼就被人看出来是 AI 生成的网站，真的很丑，可以多加入一些自己喜欢的舒服色彩多好啊。<br>\n<img src=\"https://cdn.fliggy.com/upic/1754232179.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>看看 AI</h2>\n<p><strong>从零开始的大语言模型原理与实践教程</strong><br>\n<a href=\"https://datawhalechina.github.io/happy-llm/#/\">https://datawhalechina.github.io/happy-llm/#/</a><br>\n这个可以的，深入理解 LLM 核心原理，动手实现你的第一个大模型，DataWhale 开源免费电子书，非常简单好读。\n<img src=\"https://cdn.fliggy.com/upic/1754231951.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>12-Factor Agents - Principles for building reliable LLM applications</strong><br>\n<a href=\"https://github.com/humanlayer/12-factor-agents\">https://github.com/humanlayer/12-factor-agents</a><br>\nGitHub上整理的这个 12-Factor Agents - Principles for building reliable LLM applications 非常不错，我们能用哪些原则来构建真正够用、可以交付给生产客户使用的LLM驱动软件？写得非常好，值得学习。\n<img class=\"border\" src=\"https://cdn.fliggy.com/upic/1754232031.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>AI代理的上下文工程：构建Manus的经验教训</strong><br>\n<a href=\"https://manus.im/zh-cn/blog/Context-Engineering-for-AI-Agents-Lessons-from-Building-Manus\">https://manus.im/zh-cn/blog/Context-Engineering-for-AI-Agents-Lessons-from-Building-Manus</a>\nManus 这篇文章值得一读 「AI代理的上下文工程：构建Manus的经验教训」，把不少内部探索过程中踩坑的东西给分享出来了，挺好的。<br>\n<img class=\"border\" src=\"https://cdn.fliggy.com/upic/1754232241.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>6K / 48K / 231 / 102K，感谢喜欢，继续 Code / Write / Share。</strong></p>\n\n\n    \n        \n          <img src=\"https://cdn.fliggy.com/upic/1754271450.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/upic/1754271458.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\">\n        \n    \n    \n        \n          <img src=\"https://cdn.fliggy.com/upic/1754271465.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/upic/1754271474.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\">\n        \n    \n",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "41c004a90907",
      "blog_name": "美团技术团队",
      "title": "ACL 2025 | 美团技术团队论文精选",
      "link": "https://tech.meituan.com/2025/08/01/acl-2025.html",
      "published": "2025-08-01T00:00:00+00:00",
      "timestamp": 1754006400,
      "summary": "本文介绍了美团技术团队在国际顶会ACL 2025中发表的8篇论文，研究方向覆盖了生成式检索算法、多目标偏好对齐训练、富文本图像理解、搜索词推荐、跨语言迁移能力、多模态数学推理、第三人称任务等技术领域，希望相关研究能给同学们带来一些帮助或启发。",
      "content": "\n<blockquote><p>本文介绍了美团技术团队在国际顶会<a href=\"https://2025.aclweb.org/\">ACL 2025</a>中发表的8篇论文，研究方向覆盖了生成式检索算法、多目标偏好对齐训练、富文本图像理解、搜索词推荐、跨语言迁移能力、多模态数学推理、第三人称任务等技术领域，希望相关研究能给同学们带来一些帮助或启发。</p></blockquote><p>ACL是计算语言学和自然语言处理领域最重要的顶级国际会议，由国际计算语言学协会组织，每年举办一次。据谷歌学术计算语言学刊物指标显示，ACL影响力位列第一，是CCF-A类推荐会议。ACL成立于1962年，是世界上影响力最大、最具活力的国际学术组织之一，它每年夏天都会召开大会，供学者发布论文，分享最新成果，它的会员来自全球60多个国家和地区，是NLP领域最高级别的国际学术组织，代表了国际计算语言学的最高水平。</p><h2>01 Multi-level Relevance Document Identifier Learning for Generative Retrieval</h2><p><strong>论文类型</strong>：Long Paper（ACL 2025 Main）</p><p><strong>论文下载</strong>：<a href=\"https://aclanthology.org/2025.acl-long.497.pdf\">PDF</a></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/dd3a48435ec8c38add5b32f8a62c8cd6377216.png\"></p><p><strong>论文简介</strong>：本文提出一种基于多级相关性的生成式检索文档标识符学习方法（MERGE），旨在解决生成式检索范式中的关键挑战。针对现有方法仅依赖文档文本生成离散标识符（DocIDs）导致语义关联不足的问题，本方法引入查询作为关联桥梁，构建多级文档相关性学习框架。该方法通过三个核心模块实现：多相关性查询-文档对齐模块建立文档表征与相关查询的有效映射，外层对比学习模块捕捉二元相关性特征，内层多级相关性学习模块实现细粒度文档区分。该方法在保持文档标识符唯一性的同时，编码了丰富的层次化语义信息。在公开的多语言电商搜索数据集的实验表明，MERGE在检索性能上显著优于现有基准方法，验证了其通过多级相关性建模提升文档标识符语义表征能力的有效性。</p><h2>02 HierGR: Hierarchical Semantic Representation Enhancement for Generative Retrieval in Food Delivery Search</h2><p><strong>论文类型</strong>：Industry Oral</p><p><strong>论文下载</strong>：<a href=\"https://aclanthology.org/2025.acl-industry.31.pdf\">PDF</a></p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/e12c2e4a6558b72baeaffb1e86cf79bd281787.png\"></p><p><strong>论文简介</strong>：本文针对生成式检索（Generative Retrieval, GR）在外卖搜索场景中的实际应用挑战展开研究，提出基于层次化语义表征增强的生成式检索方法（HierGR）。针对在线部署面临的商品规模大、大模型推理延迟高及地理位置服务（LBS）限制严格等核心问题，本文提出了离线训练与在线部署协同优化方法：首先设计改进残差量化过程的层次化语义标识符生成方法，构建具有空间层级特征的语义ID体系；其次采用查询缓存机制降低延迟，并通过与在线稠密检索模型的联合部署满足实时搜索需求。实验结果表明，在美团外卖搜索场景下，复杂意图Query的搜索效果提升显著，千人成单+0.68%，验证了生成式检索技术在外卖搜索领域落地的可行性。</p><h2>03 AMoPO: Adaptive Multi-objective Preference Optimization without Reward Models and Reference Models</h2><p><strong>论文类型</strong>：Long Paper</p><p><strong>论文下载</strong>：<a href=\"https://arxiv.org/pdf/2506.07165\">PDF</a></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/b613d277af382c05e7461f6ee9c8f0c2331462.png\"></p><p><strong>论文简介</strong>：本文提出了一种自适应参考模型自由的多目标偏好优化算法AMoPO（Adaptive Reference-free Multi-objective Preference Optimization），以解决现有多目标偏好优化方法在训练复杂度和计算资源消耗上的突出问题。传统方法如DPO、SimPO和MODPO在多目标优化时需要多轮训练或多个奖励模型，导致效率低下、资源消耗大。而在实际业务中，对一个回复的评估常常涉及多个维度（如拟人性、指令遵循性等），单一维度的优化难以满足需求。</p><p>为此，本论文提出了AMoPO算法无需依赖参考模型和奖励模型，通过自适应采样策略动态调整各维度权重，在单次优化过程中即可高效实现多目标偏好优化。该方法显著降低了计算资源消耗，同时实现了多维度偏好的自适应优化。在公开数据集上以及业务上的实验结果表明，AMoPO在有效性、效率和多维度自适应优化能力方面均具有显著优势。</p><h2>04 Multimodal Large Language Models for Text-rich Image Understanding: A Comprehensive Review</h2><p><strong>论文类型</strong>：Findings</p><p><strong>论文下载</strong>：<a href=\"https://arxiv.org/pdf/2502.16586\">PDF</a></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/103d7d716b46829c1442bc1be649544a875909.png\"></p><p><strong>论文简介</strong>：近年来，多模态大型语言模型（MLLM）的兴起为富文本图像理解（TIU）领域引入了一个新的维度，这些模型展现出令人印象深刻的性能。然而，它们的快速发展和广泛应用使得研究者们跟上最新进展变得越来越具有挑战性。为了解决这个问题，我们提出了一项系统而全面的综述，以促进对 TIU MLLM 的进一步研究。首先，我们概述了几乎所有 TIU MLLM 的时间线、架构和流程。然后，我们回顾了所选模型在主流基准测试中的表现。最后，我们探讨了该领域的发展方向、挑战和局限性。</p><h2>05 Consistency-Aware Online Multi-Objective Alignment for Related Search Query Generation</h2><p><strong>论文类型</strong>：Industry Track</p><p><strong>论文下载</strong>：<a href=\"https://aclanthology.org/2025.acl-industry.96.pdf\">PDF</a></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/2edf0945debfa9bc8d3ae7e5a03516f7503711.png\"></p><p><strong>论文简介</strong>：在现代数字平台中，相关搜索场景下的搜索词推荐对于提升用户参与度和内容发现至关重要。然而，现有方法往往难以在优化点击率（CTR）和促进主题延展性这两个核心目标之间取得平衡，尤其是在利用大型语言模型（LLM）进行查询生成时，多目标对齐的挑战尤为突出。这主要面临三大挑战：1）如何精确量化并建模不同的优化目标（如CTR和主题延展性）；2）如何确保生成搜索词的格式和风格与平台保持一致；3）如何有效协调可能冲突的多目标以实现共同提升，避免顾此失彼。</p><p>针对这些挑战，本文提出了CMAQ（Consistency-aware Multi-objective Aligned Query generation），一个面向相关搜索词生成的在线多目标对齐框架。CMAQ包含三个关键组成部分：1）精确的奖励建模，针对两个目标的区别，为CTR和主题扩展分别使用不同策略训练奖励模型；2）搜索词风格对齐，通过监督微调（SFT）使LLM适应平台搜索词风格；3）一致性感知的多目标优化，迭代式直接偏好优化（DPO）策略。该策略通过几何平均奖励进行一致性数据采样，并引入样本级别自适应的β调整DPO损失，从而在优化过程中提升样本层面和损失层面两个目标的一致性，缓解目标冲突。离线实验结果显示，CMAQ在以CTR奖励和延展性奖励为维度的帕累托前沿上显著优于基线方法。同时，在大型工业级生活服务平台大众点评上进行的在线A/B测试表明，CMAQ实现了显著的在线CTR提升（+2.3%）。此外，人工评估也证实了CMAQ生成的查询质量更高。这些结果共同证明了CMAQ不仅能有效提升查询生成质量和用户参与度，也为多目标LLM对齐提供了新的思路，有助于维护平台生态健康。</p><h2>06 Investigating and Scaling up Code-Switching for Multilingual Language Model Pre-Training</h2><p><strong>论文类型</strong>：Findings</p><p><strong>论文下载</strong>：<a href=\"https://aclanthology.org/2025.findings-acl.575.pdf\">PDF</a></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/a0fbb332317344e7c2f9a373a2693be8330047.jpg\"></p><p><strong>论文简介</strong>：在本文中，我们聚焦于当前大语言模型的自发跨语言迁移能力：尽管大多数开源大模型在其预训练语料中仅包含少量多语言数据（例如 LLaMA-3 的多语言数据占比仅为8%，平均到每种非英语语言则比例极低），这些模型却仍展现出较强的多语言理解与生成能力。我们认为，这种现象源于模型在预训练过程中发生了自发的跨语言迁移 ，即模型能够从主要训练语言（如英语）中学习到的能力自动迁移到其他语言上。然而，目前关于这一现象的研究尚缺乏对其数据层面成因的系统解释 ，这在一定程度上限制了多语言大模型的发展与优化。</p><p>针对该现象，本文开展了深入研究，我们发现，即使在大模型的预训练语料中 Code-Switching 数据的比例非常低，它们仍然是引发大模型自发跨语言迁移的关键因素，其中 Code-Switching 指的是在同一个上下文中混合使用多种语言的现象。在此基础上，我们进而提出了一种低成本、高效率的 Code-Switching 数据合成方法 SynCS（Synthetic Code-Switching）。我们系统比较了不同类型的 Code-Switching 数据在扩大规模时对模型跨语言迁移能力的影响差异，最终形成了一套通过合成 Code-Switching 数据来增强大模型多语言能力的有效策略 。</p><h2>07 The Role of Visual Modality in Multimodal Mathematical Reasoning: Challenges and Insights</h2><p><strong>论文类型</strong>：ACL 2025 Main（Oral）</p><p><strong>论文下载</strong>：<a href=\"https://aclanthology.org/2025.acl-long.1102.pdf\">PDF</a></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/d5f2c2c573160e7a80b740e603a95362320218.png\"></p><p><strong>论文简介</strong>：随着大型视觉-语言模型（LVLMs）的迅猛发展，多模态数学推理成为了AI研究中的热门领域。然而，视觉信息在模型推理中真正发挥了多少作用？在本研究中，我们揭示了现有模型可能过于依赖文本而忽略了视觉信息的潜在价值。我们设计了一项视觉模态扰动实验，在训练过程中随机打乱图像与文本之间的对应关系或完全移除图像，训练完成后与正常训练的模型对比性能差异。结果显示，即使在这些干扰下，当前主流模型的推理性能也仅出现了轻微下降。这表明，模型的推理过程主要受文本信息的引导，视觉信息的作用远未被充分利用。与之对照的是，通用领域中，对视觉模态的扰动会大幅度降低性能。</p><p>进一步分析发现，现有的评测基准中存在两个明显的问题：很大一部分数据由文本模型即可正确回答以及模型可以根据选项来猜测答案。基于上述的观察，我们认为现有的评测数据集无法准确反映视觉模态在推理过程中的重要性，因此提出了HC-M3D数据集。该数据集包含1,851条人工标注的数据，其中429个问题包含对照组，对照组为对图片做出关键修改来确保答案变化。实验发现即便是最先进的模型在面对这些细微变化时也频频「失明」，超过一半的情况下坚持原本的预测，未能根据视觉变化进行修正。这一系列发现凸显了现有多模态数学推理模型对视觉信息利用不足的深层问题，也为未来的研究指明了明确方向。我们建议，构建更具视觉挑战性的数据集、设计更精细的图像编码器以及开发更有效的视觉依赖增强机制，将是未来研究的重要突破口。</p><h2>08 From Observation to Understanding: Front-Door Adjustments with Uncertainty Calibration for Enhancing Egocentric Reasoning in LVLMs</h2><p><strong>论文类型</strong>：Findings</p><p><strong>论文下载</strong>：<a href=\"https://aclanthology.org/2025.findings-acl.979.pdf\">PDF</a></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/79133ef535ca5655fdc418609f0e7068840356.png\"></p><p><strong>论文简介</strong>：近年来，大型视觉语言模型（LVLMs）在第三人称任务中展现出巨大潜力。现有方法在将LVLMs应用于第一人称任务时，往往忽视了关键的主体与环境的交互信息，限制了其自我中心推理能力。例如下图中MiniGPT4未能准确聚焦右下角人物与物体的交互区域，根据经验误判右手握持的物体为手机。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/a91d26d8c108876210212a1f1b1fecd9961092.png\"></p><p>本论文提出了基于不确定性校准的前门调整方法（Front-Door Adjustments with Uncertainty Calibration，FRUIT），通过结构因果模型增强大型视觉语言模型（LVLMs）的自我中心推理能力。该方法分观察与理解两阶段：首先定位交互区域并构建层次化的视觉-文本线索，然后通过不确定性过滤线索中的噪声信息，最终将优化的观察结果整合到提示模板中，指导模型进行第一人称视角的语义理解。</p>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "54268eb6a4e7",
      "blog_name": "潮流周刊",
      "title": "第231期 - 一树橘子",
      "link": "https://weekly.tw93.fun/posts/231-%E4%B8%80%E6%A0%91%E6%A9%98%E5%AD%90/",
      "published": "2025-07-28T00:00:00",
      "timestamp": 1753632000,
      "summary": "<img src=\"https://cdn.fliggy.com/uPic/23121.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于周末看到的一树茂密的橘子，很硕果累累的感觉，可惜这种橘子更多是观赏看看，怀念小时候那种皮薄的青皮透黄的橘子，很好吃。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<p>号外，号外，号外，有没有发现潮流周刊的网站变好看了，我的 <a href=\"https://tw93.fun/\">博客</a> 也变好看了，周末我升级了下，试试新字体，试试点击图片的效果，试试一些细节的地方 🏂 </p>\n<h2>潮流工具</h2>\n<p><strong>这个打字机的极简写作应用 monotype 好有趣</strong><br>\n<a href=\"https://monotype.app/\">https://monotype.app/</a><br>\n哈哈，这个打字机的极简写作应用 monotype 好有趣，可惜不支持中文，纯英文打字，这个交互做得真好，还有音效，非常有打字的愉悦感。<br>\n<video width=\"800px\"></video></p>\n<p><strong>记账的软件最后还是选择了钱迹</strong><br>\n<a href=\"https://qianjiapp.com/\">https://qianjiapp.com/</a><br>\n换到 Android 后，记账的软件最后还是选择了钱迹，很简单朴素，几乎所有平台都支持，应用市场搜索名字直接下载即可，作者大义，免费版本功能都是够用的，无广告、无开屏、无理财，可以试试看看。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ymqh0L21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Kagi 推出的一个 AI 整理新闻的网站：风筝</strong><br>\n<a href=\"https://kite.kagi.com/\">https://kite.kagi.com/</a><br>\nKagi 推出的一个 AI 整理新闻的网站 风筝，从选择新闻，提炼出摘要，并翻译成用户指定的语言全部 AI 来做，简单看了看质量还不错。<br>\n<img src=\"https://cdn.fliggy.com/uPic/vdElAJ21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>这个免费的在线拼图工作做得很简单</strong><br>\n<a href=\"https://img.ops-coffee.cn/photo/\">https://img.ops-coffee.cn/photo/</a><br>\n这个免费的在线拼图工作做得很简单，朴素美，所有操作在浏览器本地执行，相比一些复杂的 App 好用不少，可以很好顺手来解决一些痛点。<br>\n<img src=\"https://cdn.fliggy.com/uPic/YQ5B2S21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>懂车帝的这个新能源车的辅助驾驶安全测试非常值得一看</strong><br>\n<a href=\"https://www.bilibili.com/video/BV1vz8FzDEyE/\">https://www.bilibili.com/video/BV1vz8FzDEyE/</a><br>\n懂车帝的这个新能源车的辅助驾驶安全测试非常值得一看，特别是想买车的小伙伴，看完之后更坚定了我投资特斯拉的信心，看到评论里这个，有时间的朋友可以去各大保险公司的官网上查一下，看看它们对某几个争议比较大的车型的车险报价，再跟视频的内容对比一下，真的非常有意思。<br>\n<img src=\"https://cdn.fliggy.com/uPic/opqAtC21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>给大伙去店里看看富士最近的几款新相机</strong><br>\n做得真好看啊，第一个是 XE5，可以当做可以换镜头的 X100VI，预计 8 月多正式卖，然后还有一款很贵的 GFX 100RF，非常有质感漂亮，把玩把玩。</p>\n\n\n    \n        \n           <img src=\"https://cdn.fliggy.com/uPic/IMG2025072013085121.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"420\">\n        \n        \n           <img src=\"https://cdn.fliggy.com/uPic/IMG2025072013085621.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"420\">\n        \n        \n           <video width=\"340px\"></video>\n        \n    \n",
      "content": "<img src=\"https://cdn.fliggy.com/uPic/23121.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于周末看到的一树茂密的橘子，很硕果累累的感觉，可惜这种橘子更多是观赏看看，怀念小时候那种皮薄的青皮透黄的橘子，很好吃。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<p>号外，号外，号外，有没有发现潮流周刊的网站变好看了，我的 <a href=\"https://tw93.fun/\">博客</a> 也变好看了，周末我升级了下，试试新字体，试试点击图片的效果，试试一些细节的地方 🏂 </p>\n<h2>潮流工具</h2>\n<p><strong>这个打字机的极简写作应用 monotype 好有趣</strong><br>\n<a href=\"https://monotype.app/\">https://monotype.app/</a><br>\n哈哈，这个打字机的极简写作应用 monotype 好有趣，可惜不支持中文，纯英文打字，这个交互做得真好，还有音效，非常有打字的愉悦感。<br>\n<video width=\"800px\"></video></p>\n<p><strong>记账的软件最后还是选择了钱迹</strong><br>\n<a href=\"https://qianjiapp.com/\">https://qianjiapp.com/</a><br>\n换到 Android 后，记账的软件最后还是选择了钱迹，很简单朴素，几乎所有平台都支持，应用市场搜索名字直接下载即可，作者大义，免费版本功能都是够用的，无广告、无开屏、无理财，可以试试看看。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ymqh0L21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Kagi 推出的一个 AI 整理新闻的网站：风筝</strong><br>\n<a href=\"https://kite.kagi.com/\">https://kite.kagi.com/</a><br>\nKagi 推出的一个 AI 整理新闻的网站 风筝，从选择新闻，提炼出摘要，并翻译成用户指定的语言全部 AI 来做，简单看了看质量还不错。<br>\n<img src=\"https://cdn.fliggy.com/uPic/vdElAJ21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>这个免费的在线拼图工作做得很简单</strong><br>\n<a href=\"https://img.ops-coffee.cn/photo/\">https://img.ops-coffee.cn/photo/</a><br>\n这个免费的在线拼图工作做得很简单，朴素美，所有操作在浏览器本地执行，相比一些复杂的 App 好用不少，可以很好顺手来解决一些痛点。<br>\n<img src=\"https://cdn.fliggy.com/uPic/YQ5B2S21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>懂车帝的这个新能源车的辅助驾驶安全测试非常值得一看</strong><br>\n<a href=\"https://www.bilibili.com/video/BV1vz8FzDEyE/\">https://www.bilibili.com/video/BV1vz8FzDEyE/</a><br>\n懂车帝的这个新能源车的辅助驾驶安全测试非常值得一看，特别是想买车的小伙伴，看完之后更坚定了我投资特斯拉的信心，看到评论里这个，有时间的朋友可以去各大保险公司的官网上查一下，看看它们对某几个争议比较大的车型的车险报价，再跟视频的内容对比一下，真的非常有意思。<br>\n<img src=\"https://cdn.fliggy.com/uPic/opqAtC21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>给大伙去店里看看富士最近的几款新相机</strong><br>\n做得真好看啊，第一个是 XE5，可以当做可以换镜头的 X100VI，预计 8 月多正式卖，然后还有一款很贵的 GFX 100RF，非常有质感漂亮，把玩把玩。</p>\n\n\n    \n        \n           <img src=\"https://cdn.fliggy.com/uPic/IMG2025072013085121.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"420\">\n        \n        \n           <img src=\"https://cdn.fliggy.com/uPic/IMG2025072013085621.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"420\">\n        \n        \n           <video width=\"340px\"></video>\n        \n    \n",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "bf60e9849a88",
      "blog_name": "潮流周刊",
      "title": "第230期 - 蓝色夜晚",
      "link": "https://weekly.tw93.fun/posts/230-%E8%93%9D%E8%89%B2%E5%A4%9C%E6%99%9A/",
      "published": "2025-07-21T00:00:00",
      "timestamp": 1753027200,
      "summary": "<img src=\"https://cdn.fliggy.com/uPic/23020.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于晚上找了一个躺椅，头顶是大树，然后天空刚好是蓝色的，有点儿风，不至于感觉到热，很舒服。</p>\n<h2>随便写写</h2>\n<p><strong>工程师如何更好投资</strong><br>\n<a href=\"https://tw93.fun/2025-07-17/money.html\">https://tw93.fun/2025-07-17/money.html</a><br>\n上周在团队内部的一次简单分享，周末抽空随便理了理，聊聊工程师如何更好投资，由于买美股风险很高，不建议大家参照，需要有自己的判断，当做我在瞎说来看随便看看就好了，内容比较长，就当做本次周刊的主要内容好了。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250720-rwse-220.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>妙言最近更新到 1.16，取名 Small delight🎉</strong><br>\n<a href=\"https://github.com/tw93/MiaoYan\">https://github.com/tw93/MiaoYan</a><br>\n哈哈 失踪人口回归，我的原生 Mac 轻灵的 Markdown 笔记本妙言最近更新到 1.16，取名「Small delight🎉」，新增了个很好看的字体，在设置中更新 TsangerJinKai。此外支持公式 Latex 支持块渲染、修复标题大小写重复提示、邮箱不高亮展示不点击等等细节优化，感兴趣的小伙伴可以去玩玩看。<br>\n<img src=\"https://cdn.fliggy.com/uPic/1220.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>潮流工具</h2>\n<p><strong>发现一个全球气温地图工具</strong><br>\n<a href=\"https://zoom.earth/maps/temperature/\">https://zoom.earth/maps/temperature/</a><br>\n最近天气又非常热了，发现一个全球气温地图，很全，可以用这个来看看世界的火炉有哪些地方。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ThnJhc20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Rewind 这款音乐 App 做得非常简洁</strong><br>\n<a href=\"https://apps.apple.com/us/app/rewind-music-time-travel/id6444778869\">https://apps.apple.com/us/app/rewind-music-time-travel/id6444778869</a><br>\n这款音乐 App 做得非常简洁，叫做 Rewind: Music Time Travel ，穿梭音乐世界的时光机，支持 Android 和 iPhone 使用，可以选择过去年代、历史本周的音乐，设计很舒服，免费，可以玩玩看。<br>\n<img src=\"https://cdn.fliggy.com/uPic/1Ysmdo20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>简洁的 Colorful QRCode 扩展</strong><br>\n<a href=\"https://chromewebstore.google.com/detail/colorful-qrcode/nenelpicledkmgnlaibhjkjobffpjoan?pli=1\">https://chromewebstore.google.com/detail/colorful-qrcode/nenelpicledkmgnlaibhjkjobffpjoan?pli=1</a><br>\n开发的时候会需要把当前网页的信息扫到 App 上去看效果，不少二维码扩展有点儿花里胡哨复杂了，可以试试这个 Colorful QRCode，可以设置黑白，最后就是一个这么极简的二维码。<br>\n<img src=\"https://cdn.fliggy.com/uPic/gQLBMz21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>买了一个有线平头塞玩一玩</strong><br>\n直接 TypeC 的口子，不锈钢材质，新风铃升级版本，动铁圈瓷压电振膜双腔 MMCX 平头塞，质感很好，音质也还不错，继续听听看。</p>\n\n\n    \n    \n          <img src=\"https://cdn.fliggy.com/uPic/IMG2025072014281821.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"370\">\n        \n        \n          <img src=\"https://cdn.fliggy.com/uPic/IMG2025072021111521.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"630\">\n        \n    \n",
      "content": "<img src=\"https://cdn.fliggy.com/uPic/23020.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于晚上找了一个躺椅，头顶是大树，然后天空刚好是蓝色的，有点儿风，不至于感觉到热，很舒服。</p>\n<h2>随便写写</h2>\n<p><strong>工程师如何更好投资</strong><br>\n<a href=\"https://tw93.fun/2025-07-17/money.html\">https://tw93.fun/2025-07-17/money.html</a><br>\n上周在团队内部的一次简单分享，周末抽空随便理了理，聊聊工程师如何更好投资，由于买美股风险很高，不建议大家参照，需要有自己的判断，当做我在瞎说来看随便看看就好了，内容比较长，就当做本次周刊的主要内容好了。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250720-rwse-220.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>妙言最近更新到 1.16，取名 Small delight🎉</strong><br>\n<a href=\"https://github.com/tw93/MiaoYan\">https://github.com/tw93/MiaoYan</a><br>\n哈哈 失踪人口回归，我的原生 Mac 轻灵的 Markdown 笔记本妙言最近更新到 1.16，取名「Small delight🎉」，新增了个很好看的字体，在设置中更新 TsangerJinKai。此外支持公式 Latex 支持块渲染、修复标题大小写重复提示、邮箱不高亮展示不点击等等细节优化，感兴趣的小伙伴可以去玩玩看。<br>\n<img src=\"https://cdn.fliggy.com/uPic/1220.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>潮流工具</h2>\n<p><strong>发现一个全球气温地图工具</strong><br>\n<a href=\"https://zoom.earth/maps/temperature/\">https://zoom.earth/maps/temperature/</a><br>\n最近天气又非常热了，发现一个全球气温地图，很全，可以用这个来看看世界的火炉有哪些地方。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ThnJhc20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Rewind 这款音乐 App 做得非常简洁</strong><br>\n<a href=\"https://apps.apple.com/us/app/rewind-music-time-travel/id6444778869\">https://apps.apple.com/us/app/rewind-music-time-travel/id6444778869</a><br>\n这款音乐 App 做得非常简洁，叫做 Rewind: Music Time Travel ，穿梭音乐世界的时光机，支持 Android 和 iPhone 使用，可以选择过去年代、历史本周的音乐，设计很舒服，免费，可以玩玩看。<br>\n<img src=\"https://cdn.fliggy.com/uPic/1Ysmdo20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>简洁的 Colorful QRCode 扩展</strong><br>\n<a href=\"https://chromewebstore.google.com/detail/colorful-qrcode/nenelpicledkmgnlaibhjkjobffpjoan?pli=1\">https://chromewebstore.google.com/detail/colorful-qrcode/nenelpicledkmgnlaibhjkjobffpjoan?pli=1</a><br>\n开发的时候会需要把当前网页的信息扫到 App 上去看效果，不少二维码扩展有点儿花里胡哨复杂了，可以试试这个 Colorful QRCode，可以设置黑白，最后就是一个这么极简的二维码。<br>\n<img src=\"https://cdn.fliggy.com/uPic/gQLBMz21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>买了一个有线平头塞玩一玩</strong><br>\n直接 TypeC 的口子，不锈钢材质，新风铃升级版本，动铁圈瓷压电振膜双腔 MMCX 平头塞，质感很好，音质也还不错，继续听听看。</p>\n\n\n    \n    \n          <img src=\"https://cdn.fliggy.com/uPic/IMG2025072014281821.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"370\">\n        \n        \n          <img src=\"https://cdn.fliggy.com/uPic/IMG2025072021111521.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"630\">\n        \n    \n",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "180cd7586e44",
      "blog_name": "美团技术团队",
      "title": "美团开源OIBench与CoreCodeBench：揭示大模型编程能力的真实水平",
      "link": "https://tech.meituan.com/2025/07/17/meituan-m17-oibench-corecodebench.html",
      "published": "2025-07-17T00:00:00+00:00",
      "timestamp": 1752710400,
      "summary": "Meituan-M17 团队联合上海交大等机构，分别推出了 OIBench（聚焦高区分度算法题评测）与 CoreCodeBench（聚焦多场景工程级代码基准）两大数据集，旨在揭示大模型编程能力真实水平，这两大数据集已分别在GitHub和Huggingface上进行开源。",
      "content": "\n<p>当前，大语言模型（LLMs）在编程领域的能力宣称引人瞩目——DeepMind 的 AlphaCode 曾对标人类竞技编程选手，OpenAI 顶尖模型屡被报道通过谷歌面试、挑战 LeetCode 表现不俗。然而，当深入审视这些模型在真实、复杂场景下的表现时，现有评估体系的深层局限性便暴露无遗，形成了显著的“宣传与现实的认知鸿沟”。</p><p>一方面，在<strong>算法能力评估</strong>上，尽管模型在传统基准（如 HumanEval、MBPP）上通过率高达90%，但移植到更高难度的信息学奥赛或 Codeforces Div.2 C 级题目时，顶尖模型的通过率骤降至个位数或不足15%，远逊于人类选手（如ACM校队成员平均70%），动态规划等题型错误率甚至超80%。传统评测集已“饱和”且区分度不足，新引入的高难度题目又面临数据“泄漏”风险和人机对比（Elo）的复现性差、效率指标粗略等问题。</p><p>另一方面，转向<strong>真实工程能力评估</strong>，问题同样严峻。现有工程基准（如 FullStackBench、SWEBench）虽在多样性和语言覆盖上有进展，但其任务类型主要集中于单段落代码生成，难以覆盖真实开发中跨文件协作、代码修复（BugFix）、测试驱动开发、多函数协同等核心环节。数据构建方法也受限于随机挖空（易忽略核心逻辑）或依赖稀缺的 GitHub PR 记录（需大量人工清洗标注），导致评测“偏科”，无法科学、全面地评估模型在复杂工程中的准确性、健壮性和适用性。</p><p>为了系统性地解决这两大评估困境——<strong>更真实地衡量顶尖模型的算法推理能力与更全面地评估其工程级代码能力</strong>——Meituan-M17 团队联合上海交大等机构，分别推出了 OIBench（聚焦高区分度算法题评测）与 CoreCodeBench（聚焦多场景工程级代码基准）两大数据集，并托管于 AGI-Eval 评测社区。下文将详细介绍它们的构建理念、评测方法及对主流大模型能力的深度剖析。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/707a2d1d2bf198c2510043dcd4fb1663877512.png\"></p><h2>背景：评测集局限性的深层分析</h2><p>尽管 GPT-4o 模型被冠以 “竞赛级” 头衔，甚至有声音称其算法水平接近 ACM 区域赛金牌选手，但实际在面对未经大量公开数据训练的、更高难度的信息学奥赛级别问题时，其通过率却往往低至个位数，与 985 级别高校 ACM 校队成员的平均通过率存在显著差距。</p><p>当部分评测宣称 Claude 3.5 Sonnet 可替代中级开发人员时，它在动态规划等高难度题型中错误率却高达 80% 以上，且无法独立完成需数学建模的复杂竞赛题。</p><p>诸如文心一言、通义千问等模型在 MBPP 基础题库中通过率可达 90% 以上，但移植至 Codeforces Div.2 C 级题目时，通过率却不足 15%，远低于人类选手平均 70% 的水平。</p><p>这些鲜明的对比，共同指向一个核心问题：当前对 LLM 编程能力的评估，存在明显的 “宣传与现实的认知鸿沟”。这种差异不仅源于模型能力边界的复杂性，也暴露出现有评估体系的诸多局限性。具体表现为：</p><ul><li><strong>评测集 “饱和” 与区分度不足</strong>：传统评测集（如 HumanEval、MBPP）由于模型能力的快速提升，通过率普遍超过 90%，已无法有效区分最先进模型的细微优劣。</li><li><strong>数据 “泄漏” 风险</strong>： 尽管一些新评测集（如 Codeforces、USACO、LeetCode）引入了高难度题目，但由于大模型预训练数据包含大量互联网公开内容，这些题目可能已被模型 “见过”，导致评测结果虚高，无法真实反映其推理能力。</li><li><strong>人机对比的局限性</strong>：现有基于 Elo 评分体系的模型与真人选手对比方法，存在周期长、选手水平波动大、复现性差等问题，难以提供精确且可靠的评估。</li></ul><p>效率指标的粗略性： 部分评测虽引入运行时间、内存等效率指标，但通常仅为粗略的平均分，无法细致反映模型在不同类型题目上的性能差异。</p><p>为了解决上述这些评估困境、评测出全球顶尖模型真实的编程能力， Meituan-M17 团队推出了<strong>更真实、更具区分度的评估基准 OIBench 数据集，并托管于 AGI-Eval 评测社区</strong>，并在 <a href=\"https://huggingface.co/datasets/meituan/OIBench\">Huggingface</a> 和 <a href=\"https://github.com/AGI-Eval-Official/OIBench\">GitHub</a> 上开源。基于此数据集，我们对全球 18 个主流大模型的算法编程能力进行了系统评测并量化得分，详细评分榜单如下所示，可以看到全球顶尖大模型距离以往所宣称的编程能力还存在很大差距，哪怕是最高分的 o4-mini-high 也仅仅只有 36.35 分，距离人类竞赛选手的水平还相差甚远，甚至很多模型只有个位数的得分。</p><p><img alt=\"表1: OIBench AC Rate表\" src=\"https://p1.meituan.net/meituantechblog/c15ae4d3cace0307a614ece0854b52e071970.png\"></p><p>OIBench 的评测榜单未来将由 AGI-Eval 评测社区长期维护更新，欢迎持续关注。榜单地址如下：</p><ul><li><strong>网页端地址</strong>：<a href=\"https://agi-eval.cn/evaluation/detail?id=60\">https://agi-eval.cn/evaluation/detail?id=60</a></li><li><strong>微信公众号文章</strong>：<a href=\"https://mp.weixin.qq.com/s/qjZLqHVz-BxQweApyUEtDw\">AGI-Eval大模型评测</a></li><li><strong>论文地址</strong>：<a href=\"https://arxiv.org/abs/2506.10481\">https://arxiv.org/abs/2506.10481</a></li><li><strong>Github地址</strong>：<a href=\"https://github.com/AGI-Eval-Official/OIBench\">https://github.com/AGI-Eval-Official/OIBench</a></li></ul><p>本文数据均引用自 OIBench v1.0 论文（arxiv:2506.10481v3），发布日期 2025 年 6 月 13 日。</p><p>接下来为大家详细介绍 OIBench 数据集是如何构建以及如何对大模型进行评测的。</p><h2>1. OIBench 的构建与创新</h2><p>OIBench 是一个高质量、私有且极具挑战性的信息学奥赛级别算法题库，旨在提供一个更真实、更具区分度的评估基准。该数据集的算法题主要来源于中国 ACM-ICPC 队伍和信息学奥赛的高校教练团队精心编纂，他们拥有丰富的高难度算法题设计经验和独到见解。</p><p>为了确保 OIBench 题目的高质量和高挑战性，我们制定了三条严格的准入标准，OIBench 具备以下关键特性：</p><ul><li><strong>原创性与私有性</strong>：OIBench 包含 250 道候选题目，经难度验证后保留 212 道高难度、防泄漏的信息学奥赛题目（IOI Level）。所有题目在发布前都经过严格检索，确保未在任何公开平台出现，最大程度避免数据污染风险。</li><li><strong>难度分级与把控</strong>：每道题目都参照信息学竞赛和 Codeforces 难度评级进行标注。同时，为避免主观偏差，我们引入了自动化验证机制 —— 只有当 GPT-4o、Qwen2.5-Coder-32B、Doubao-32k-pro、Llama3.1-405B 这几个标杆大模型中 “最多只有一个模型能解出” 时，该题才会被收录，从而确保了题目的 “硬核” 难度。</li><li><strong>高标准测试用例与标准解答</strong>：每道题都配备覆盖大数据量、边界情况等多样的测试用例，力求暴露代码在时间和空间上的潜在瓶颈。同时，每道题都必须配备经过所有测试用例严格验证的 C++ 标准解答，以确保题目本身的准确性及评测的公正性。</li><li><strong>中英文双语支持</strong>： 数据集提供中英文双语版本，方便全球大模型从业者使用。</li></ul><p>我们还在论文中展示了 OIBench 与其他主流评测集的对比（见下表），可以看到 OIBench 在题目难度和测试用例规模上都相对更高。</p><p><img alt=\"表2: OIBench 与其他代码评测集基础统计信息表\" src=\"https://p0.meituan.net/meituantechblog/ad5a7a3767a8e629b0b759e2c2b7cea864999.png\"></p><p>OIBench 在题目难度和测试用例规模上显著领先于其他主流评测集。例如，在其他榜单上表现较好的 GPT-4o 模型在 OIBench 上仅能答对 2.6% 的题目，同时 OIBench 的测试用例数量大幅超过了其他算法竞赛基准，对标真实的竞赛环境。</p><p><img alt=\"表3: GPT-4o 模型在 OIBench 与其他评测集通过率对比表\" src=\"https://p1.meituan.net/meituantechblog/18647fd505aefa45fcc54194188f0ef121519.png\"></p><p><strong>强抗数据污染能力</strong>：在评测集设计中，“同源污染” 是一个重要挑战。由于大模型的预训练和微调数据往往会爬取大量互联网内容，容易出现模型在训练阶段就见过类似题目的情况，从而导致评测分数虚高，无法真实反映模型实际能力。虽然 OIBench 在数据构造时极力避免使用互联网可公开检索的题目，但一些相近的题目仍可能在大模型的预训练或微调阶段带来数据污染。为此，我们专门设计了实验来验证 OIBench 的抗污染能力：</p><ul><li><strong>具体做法</strong>：我们从 OIBench 中抽取部分题目，模拟它们在模型训练数据中 “泄漏” 的场景，并与常规训练数据混合，对比模型在 OIBench 上的表现提升。</li><li><strong>实验证明</strong>：即使模拟少量题目 “泄漏” 到模型的训练数据中，OIBench 的得分提升也极为有限，风险分数几乎为零，表明其对数据污染具有很强的鲁棒性。</li></ul><h2>2. OIBench 评测结果与发现</h2><p><strong>参评模型与评测方式</strong></p><p>OIBench 对 18 个主流大模型（包括 14 个指令微调模型和 4 个基础模型）进行了 zero-shot 评测，涵盖 C++、Python、Java、JavaScript 四种语言。</p><p><img alt=\"表4:  OIBench 上基座模型、指令微调模型、推理模型的表现\" src=\"https://p0.meituan.net/meituantechblog/eb24e8bc42ce3120a20be682dae41ff3240284.png\"></p><p><strong>主榜单结果</strong></p><ul><li><strong>推理模型表现突出</strong>：推理类模型（如 o4-mini-high）在 OIBench 上的平均得分高达 21.4%，远高于普通指令微调模型（约 3.6%）。这表明 OIBench 能有效区分模型的推理和链式思考能力，且 o4-mini-high 在所有语言和任务上表现最优。</li><li><strong>闭源模型优势明显</strong>：闭源模型平均得分 14.5%，显著高于开源模型（6.3%），这主要得益于闭源模型在算力和数据质量上的优势。</li><li><strong>基础模型决定上限</strong>：指令微调模型在 OIBench 上的表现高度依赖其基础模型的能力，说明基础模型的预训练质量是决定代码能力的关键。</li><li><strong>DeepSeek-V3-0324 的亮点</strong>：作为非推理模型，DeepSeek-V3-0324 表现突出，得益于其采用了 DeepSeek-R1 的链式推理蒸馏方案，推理能力大幅提升。</li><li><strong>语言偏好与中英文差异</strong>： 模型在 JavaScript 和 Python 上的表现平均比 C++ 和 Java 低 10% 以上，可能与训练数据分布有关；中英文题目表现差异极小，甚至中文略优。</li></ul><p><strong>伪代码（Pseudocode）提示的积极作用</strong></p><p>OIBench 的高难度对普通模型来说挑战巨大。为了更细致地分析模型的能力，我们还引入了 “伪代码提示” 评测：将标准解答转为伪代码并作为提示输入，考查模型理解和复现解题思路的能力。</p><p>结果显示，所有模型在有伪代码提示时表现均有明显提升，尤其是强推理模型（如 o3-mini-high 和 o4-mini-high）提升尤为显著。这说明伪代码极大降低了题目的推理难度，更能考查模型的代码理解与生成能力。同时，推理模型在理解解题思路方面依然具备优势。进一步分析发现，指令微调模型的表现与其基础模型高度相关，说明代码生成能力主要取决于预训练水平。</p><p>在提供伪代码提示后，所有模型表现均有明显提升，尤其是强推理模型，这说明伪代码能有效降低推理难度，更能考查模型的代码理解与生成能力。</p><p><strong>推理效率</strong>：随着 “测试时推理” 成为提升大模型能力的重要手段， OpenAI-o1、DeepSeek-R1 等模型在解题时会生成大量推理内容。我们统计了各模型推理时的 Token 消耗与通过率的关系，发现 o4-mini-high 能以更少的 Token 解出更多题目，推理效率最高；DeepSeek-V3-0324 虽然表现不俗，但推理 Token 数量也最多，体现其长链推理的特点。</p><p><img alt=\"图 1: OIBench 模型通过率与推理消耗 Token 量关系图\" src=\"https://p0.meituan.net/meituantechblog/ea497e4d24ab1e6451de79600bcf9a9d150460.png\"></p><h2>3. 模型与人类选手的对比</h2><p>许多技术人员都关心：现在的大语言模型在算法编程题上的表现，和真正的竞赛选手相比到底如何？OpenAI、 DeepSeek 会用线上编程平台 Codeforces 的 Elo 评分体系来做模型与人类的对比，并报告自家模型最新的 Elo 分数，但这种方式存在一些问题：比如数据时间跨度长（一般需要半年以上的参赛记录）、在线选手水平波动大，导致对比结果不够精确，也不容易复现。</p><p><strong>OIBench 创新性地采用了更可控的方法</strong>：邀请了中国 985 级别高校 ACM 校队选手参与部分题目的作答，并将其成绩与大模型直接对比，提供了更精准、可复现的人机对比数据；我们用小提琴图展示了每个模型在所有人类选手中的排名分布，能直观反映模型与人类在不同题目上的表现差异。</p><p><strong>排名规则参考了信息学奥赛（IOI）的标准</strong>：先比较通过的测试用例数量，数量相同则按运行时间排序（越快越高）。</p><p><strong>提交标准</strong>：人类选手的答案以最后一次提交为准。</p><p><strong>人类解答开源</strong>: 分析中所涉及的人类解答记录也将匿名化并开源，便于后续研究和复现。</p><p><img alt=\"图 2: 模型与人类选手的对比关系图\" src=\"https://p0.meituan.net/meituantechblog/364b49bcc6369d303486297b86de3364257727.png\"></p><p>在小提琴图中，各模型在每道题中的人类排名位置会作为一个数据点，这些数据点形成的概率密度图就是小提琴图中的“琴身”。“琴身”的宽度显示模型排名分布的密度，越宽表示模型在对应的排名区间内出现的频率越高，从而直观地反映出模型排名表现的集中趋势。中央的框线代表排名数据最集中的区域，以o4-mini-high举例，它的排名大致超过了42%的人类选手。</p><p><strong>三种类型的模型表现</strong></p><ul><li><strong>低谷型</strong>： 多数题目排名靠后，只能超越不到 20% 的人类选手，多为没有长链推理能力的模型。</li><li><strong>双峰型</strong>： 在部分题目上能超越一半人类选手，但在另一些题目上表现较差，多数支持长链推理的模型属于此类型，显示其在特定题型上的优势和短板。</li><li><strong>橄榄型</strong>： 排名分布更均匀，表现更接近人类整体能力分布，目前只有 o4-mini-high 具备这种全面和稳定的推理特征。</li></ul><h2>4. OIBench总结与展望</h2><p>本文深入分析了当前大模型编程能力评估中存在的认知鸿沟，揭示了 “宣传” 与 “现实” 之间的差距。Meituan-M17团队 通过 OIBench 这一高质量、高区分度的私有数据集，清晰揭示了顶级 LLM 在面对复杂算法挑战时，与人类顶尖水平之间的真实差距。不仅为大语言模型的算法推理能力评测树立了一个全新标杆，也为整个行业带来了更多思考。</p><p>它让我们看到：即使在模型能力突飞猛进的今天，真正高质量、高难度的算法挑战依然能够 “难倒” 最先进的 AI。尤为重要的是，希望 OIBench 的开源和透明能够为社区协作和持续创新做出一些贡献。我们期待它能成为连接学术、产业和开发者的桥梁，推动大模型在算法智能领域迈向新高度。未来，随着模型能力和评测需求的不断演进，OIBench 也会持续迭代，与大家共同见证 AI 推理的进化之路。</p><p>与此同时，我们也观察到，对于大多数人类开发者来说，即使他们接受过专业的算法设计训练，面对高难度算法和复杂系统设计，同样需要工具和智能助手的辅助才能更上一层楼。大模型的强大推理和代码生成能力，正好能为人类开发者提供有力支持，帮助他们提升算法设计和代码实现的效率。OIBench 促使我们深入思考：<strong>未来的代码开发，已超越 “人” 或 “模型” 单打独斗的模式，转变为人机协同、优势互补的新范式</strong>。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/360c6cf939102e6a97ae8c3d3ab62d64883165.png\"></p><h2>背景：工程级代码评估的挑战</h2><p>研究发现，现有的代码基准数据集在面对复杂的工程场景时普遍存在缺乏多样性和可控性的双重问题：</p><ul><li><strong>工程开发环节覆盖有限</strong>：尽管现有基准（如 FullStackBench、SWEBench）在领域和语言多样性上取得进展，但其任务类型仍主要集中于单段落代码生成。而真实工程实践通常涉及跨文件、跨模块的协同，以及代码修复、测试驱动开发、多函数协作等复杂任务，这些都应被工程级基准全面覆盖。</li><li><strong>数据构建方法局限</strong>：大多数数据集采用随机挖空或从代码仓库的历史 PR 记录中提取修改点（如 GitHub 的 Pull Request）。前者容易忽略项目的核心逻辑代码段，后者不仅数据量稀少，还需投入大量人工进行数据清洗和标注，难以规模化构建高质量的评测题目。</li></ul><p>总之，我们发现现有的代码基准测试大多“偏科”了。它们要么只关注单个函数的补全，忽略了开发者修复 Bug 、根据单元测试反向开发的真实场景；要么采用随机挖空的方式，难以触及代码的核心逻辑。这导致我们无法科学、完整、全面地测评 LLM 在真实工程场景中的代码能力，尤其是在可靠性和适用性方面，我们亟需一个能解决此难题的方案。</p><p>为了应对上述挑战， Meituan-M17 团队、上海交大联合发布了一个全新的<strong>大模型工程级别代码基准测试 CoreCodeBench 数据集，托管到 AGI-Eval 社区</strong>。</p><ul><li><strong>CoreCodeBench榜单地址</strong>：<a href=\"https://agi-eval.cn/evaluation/detail?id=64\">https://agi-eval.cn/evaluation/detail?id=64</a></li><li><strong>微信公众号文章</strong>：<a href=\"https://mp.weixin.qq.com/s/ihNeyk1RauSUicBcGWI2pA\">AGI-Eval模型评测</a></li><li><strong>论文预印版</strong>：《CoreCodeBench: A Configurable Multi-Scenario Repository-Level Benchmark》。</li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/6db13f36c76ac08f4e76f2301112430f132450.png\"></p><ul><li><p><strong>论文地址</strong>：<a href=\"http://arxiv.org/abs/2507.05281\">http://arxiv.org/abs/2507.05281</a></p></li><li><p><strong>GitHub地址</strong>：<a href=\"https://github.com/AGI-Eval-Official/CoreCodeBench\">https://github.com/AGI-Eval-Official/CoreCodeBench</a></p></li></ul><p>它专注于评估大语言模型在真实工程项目中的综合代码能力，覆盖了从代码开发到代码修正的多个核心阶段。</p><p><img alt=\"图 3: CoreCodeBench 题型展示\" src=\"https://p0.meituan.net/meituantechblog/d00f4a444d9cce46b92a9ca1c04ff32b141353.png\"></p><p><img alt=\"图 4: CoreCodeBench 模型能力榜单\" src=\"https://p1.meituan.net/meituantechblog/e7d7f6245abec170dad5a1910d4aecf963987.png\"></p><p>通过在 CoreCodeBench 上对当前主流大语言模型的全面评测，我们得出了以下关键结论：</p><ul><li><strong>大模型编程能力迭代进步显著，但发展不均衡</strong>：较新的模型 {如 Claude 3.7 、o4 mini（high）} 相较于前代产品表现出明显进步。然而，受测模型在代码修正（BugFix）任务上表现欠佳，尤其是单函数任务场景下，修正任务的成功率全部低于开发任务，这揭示了当前 LLM 在理解和修复深层逻辑错误方面存在的普遍短板。</li><li><strong>多函数协作是当前大模型编程场景的主要瓶颈</strong>：几乎所有模型在处理多函数任务时的表现都显著劣于单函数任务。这表明，当需要同时处理多个函数间的依赖关系、调用逻辑和协同实现时，当前大模型的跨函数推理和规划能力尚显不足。</li><li><strong>大模型编程场景普遍缺乏灵活的规划与分层推理能力</strong>：在多函数代码生成任务中，我们观察到大多数模型严格遵循输入提示中的函数顺序生成代码，而非像人类工程师那样，基于功能依赖（如先实现被调用的工具函数）进行优化。这一现象反映了当前模型在面对复杂任务时，倾向于采用默认的顺序策略，缺乏主动规划的意识。</li></ul><h2>1. 基准构建方法与实验分析</h2><p><strong>数据集构建方法：CorePipe 流程</strong></p><p>为了构建一个既关注多样化工程问题，又聚焦于核心代码的基准，CoreCodeBench 中设计了从工程代码仓库到多种函数题型的全自动化构建流程CorePipe。</p><p><img alt=\"图 5: CorePipe 自动化生产数据流程示意图\" src=\"https://p0.meituan.net/meituantechblog/c0fafa80ae9fcd7b85d7bca671ec2934319541.png\"></p><p>如上图所示，CorePipe 基于函数调用树，系统化地生成覆盖三大核心场景的单函数与多函数题目，确保每一道题目都直击“要害”：</p><p><strong>精选真实项目</strong>：我们从 PyPI 对应的 GitHub 仓库中筛选出高活跃度、高测试覆盖率和高技术复杂度的顶级开源项目。</p><p><strong>定位核心代码</strong>：通过动态和静态追踪代码的执行，我们首先构建函数调用图，再利用抽象语法树（AST）抽取出关键函数中的核心代码，精准定位项目中那些“牵一发而动全身”的核心代码块。我们能精准定位项目中那些“牵一发而动全身”的核心函数。</p><p><strong>模拟三大真实场景</strong>：</p><ul><li><strong>直接开发</strong>（Development）： 不仅仅是填空，我们利用 GPT-4o 生成高质量的函数功能描述，并由 Claude 3.5 Sonnet 进行“挑刺”和审核，确保模型是在理解真正需求的前提下进行开发。</li><li><strong>代码修正</strong>（BugFix）：告别简单的语法错误，转而使用 LLM 生成更隐蔽、更复杂的逻辑错误，真实模拟了开发中那些令人头疼的 Bug 。</li><li><strong>测试驱动开发</strong>（TDD）：提供完整的单元测试，要求模型根据测试用例反向开发功能代码，考察其遵循现代开发范式的能力。</li></ul><p><strong>引入多函数难题</strong></p><p>我们将上述单函数问题按照真实的函数调用关系组合起来，创造出更复杂的多函数题目，全面考验模型在宏观层面的代码组织和规划能力。</p><h2>2. 实验结果与深度分析</h2><p>为确保评测的科学性，我们采用了信息增益分数（IG Score）作为核心指标，并通过 <strong>IG Filter（信息增益过滤）和专业工程师人工审核（最终合格率78.55%）</strong> 对题目质量进行充分的监测，兼具<strong>可读性、准确性和完整性</strong>。</p><h3>2.1 单函数与多函数任务分析</h3><p><img alt=\"表 5: CoreCodeBench 单函数和多函数任务榜单\" src=\"https://p0.meituan.net/meituantechblog/3880e195179b9c7170e4b2dc56760d0e155540.jpg\"></p><p>如上图可以看出，实验结果有力地支持了我们的核心结论， Claude 3.7 在所有任务中表现突出。</p><p>但所有模型在多函数任务上的普遍表现下滑差于单模型任务，这可能是因为多函数任务需同时处理多个函数间的依赖关系、调用逻辑和协同实现，对大语言模型的跨函数推理和规划能力要求更高，以及在 BugFix 任务上的集体短板，清晰地勾勒出当前技术的能力边界。</p><h3>2.2 模型规划能力洞察</h3><p>多函数任务的实验分析揭示，<strong>模型缺乏对实现顺序的规划能力</strong>。</p><p>大多数模型严格遵循输入提示中的函数顺序生成代码。当前模型在多函数代码生成时缺乏灵活规划能力与分层推理能力，往往采用默认的顺序输出策略，而非基于逻辑或功能依赖进行优化。</p><p>这种“顺序执行”而非“逻辑执行”的策略，是其与人类工程师在解决复杂问题思路上的一大差异。</p><h3>2.3 极限挑战</h3><p><img alt=\"图 6: CoreCodeBench-Difficult 数据集的模型结果\" src=\"https://p0.meituan.net/meituantechblog/014baa15a3e9fa538f8946e1ef87a6cc169891.png\"></p><p>我们通过放宽多函数问题的复杂度限制，构建了 CoreCodeBench-Difficult 数据集。</p><p>在该测试中，所有模型的通过率均低于30%，这不仅印证了该基准在揭示模型局限性方面的有效性，也为未来技术的突破提供了严苛的测试平台。</p><h3>2.4 LLM 代码能力全景雷达图</h3><p><img alt=\"图 7: 前沿 LLM 代码能力雷达图\" src=\"https://p0.meituan.net/meituantechblog/968a856ea20107dbef5236fbb904b6f8249232.png\"></p><p>我们将模型的六个核心场景表现绘制成雷达图，可以直观地看到：</p><ul><li>没有一个模型能在所有场景中独占鳌头，证明了 CoreCodeBench <strong>评估维度的全面性</strong>。</li><li>开发（Development）和测试驱动开发（TDD）任务中，单/多函数表现并不完全相关，说明<strong>开发多关联函数需要额外的规划能力</strong>。</li><li>代码修正（BugFix）任务中，单/多函数表现高度相关，这说明<strong>调试更依赖于一种通用的、局部的错误修正技能</strong>。</li></ul><p>为进一步分析各评测维度之间的关系，我们计算了所有模型在六个维度上的皮尔逊相关系数并绘制热力图。</p><p><img alt=\"图 8: 代码能力项相关度分析\" src=\"https://p0.meituan.net/meituantechblog/855a4c86166ab69686d5b2daa2504e56137569.png\"></p><p>如上图所示可以观察得到，相关系数的测算结果表明，CoreCodeBench 的六个核心场景之间既存在一定的<strong>相关性</strong>，也体现出各自的<strong>差异性</strong>：</p><ul><li>Single-function 任务之间相关性较高，表现出<strong>单函数任务在基础编程、理解和实现能力上的共性</strong>。</li><li>Multi-TDD 和 Multi-Development 存在一定的相关性，这是因为 <strong>Multi-function 任务通常考察模型在更复杂场景下的综合能力</strong>，包括多步推理、实现规划等，与单函数任务所需的基础能力存在明显区别。</li><li>Multi-BugFix 虽然属于多函数任务，但它和单函数任务相关性高，反而和 Multi-TDD、Multi-Development 相关性低。这是因为 <strong>Multi-BugFix 任务的本质更接近于“单点排查”，它更侧重于具体细节或某一局部的能力考察，而与需要全局综合能力的多函数任务存在差异</strong>。</li></ul><h2>3. CoreCodeBench总结与展望</h2><p>CoreCodeBench 的构建与应用，旨在为大语言模型的代码能力评估提供一把更科学、更全面、更贴近真实的“工程标尺”。回顾我们的研究，我们系统性地揭示了当前顶尖 LLM 在真实工程场景中的核心短板：<strong>无论是多么先进的模型，都在逻辑错误修复方面步履维艰；在面对多函数协同任务时，其跨函数推理与规划能力都显得捉襟见肘；并且，它们普遍缺乏人类工程师所具备的灵活规划与分层推理能力</strong>。</p><p>然而，这些被揭示的局限性并非技术的终点，而是为下一代大语言模型的发展指明了清晰的优化方向。我们相信，通过在 CoreCodeBench 这类更贴近真实工程需求的基准上进行训练和迭代，大语言模型将能更快地从一个“代码片段生成器”，进化成一个真正具备分析、规划和解决复杂工程问题的“虚拟软件工程师”，从而在软件开发领域释放出更深远的变革力量。</p><h2>总结</h2><p>通过OIBench和CoreCodeBench两大基准的构建和评测，Meituan-M17团队系统性地揭示了当前大语言模型在编程领域的真实能力边界。这两个数据集不仅填补了现有评估体系的空白，更重要的是为整个行业提供了一面”照妖镜”，让我们能够更清晰地看到顶尖AI模型与人类专业水平之间的真实差距。</p><p><strong>核心发现包括</strong>：</p><ul><li>即使是最强的推理模型，在复杂算法挑战面前仍显不足，距离真正的竞赛选手水平还有很大差距；</li><li>在工程级代码任务中，模型普遍在代码修复和多函数协作方面存在明显短板；</li><li>现有模型缺乏人类工程师所具备的灵活规划和分层推理能力。</li></ul><h2>展望未来</h2><p>这些发现并非技术发展的终点，而是为下一代大语言模型的优化指明了明确方向。我们相信，通过在更贴近真实需求的基准上持续训练和迭代，AI将逐步从”代码生成工具”进化为真正的”智能开发伙伴”，与人类开发者形成优势互补的协作关系。</p><p>Meituan-M17团队将持续致力于高质量评估研究，推动大语言模型技术向更广阔的未来发展。</p>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "1287d6226aba",
      "blog_name": "潮流周刊",
      "title": "第229期 - 换到安卓",
      "link": "https://weekly.tw93.fun/posts/229-%E6%8D%A2%E5%88%B0%E5%AE%89%E5%8D%93/",
      "published": "2025-07-14T00:00:00",
      "timestamp": 1752422400,
      "summary": "<img src=\"https://cdn.fliggy.com/uPic/22922.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于天目里 B1OCK 这家空中花园餐厅 fine by FINE 的外面的果树，刚好下完雨，这家餐厅有格调很好吃，寿喜烧牛肉意面是我吃过最好吃的意面，有空你可以去试试。</p>\n\n\n    \n    \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_20250712_21314322.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"600\">\n        \n        \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_20250712_21291322.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"600\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_20250712_21295922.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"360\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_20250712_21305522.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"360\">\n        \n    \n\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<p>这期不推荐技术和文章，想聊聊我从 iPhone 切到 Android 的一个变化，挺有趣的。</p>\n<p>对于一个十多年 iPhone 用户，切到 Android 差不多一个月样子，选的 OPPO Find X8s，比想象中迁移成本小很多，而且谁能想到 Android 变成了主力机，想和大伙随便聊聊这个过程想法的变化。</p>\n\n\n    \n    \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_438722.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_439522.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_439022.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_439622.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n    \n\n<p><strong>为啥不坚持 iPhone 了？</strong></p>\n<p>只能说苹果这几年的确不太不思进取了，之前很期待每年的发布会，会在第一时间换上新款，但是老感觉这几年没有啥变化，特别是 AI 这一块，系统层面没啥好玩的，更多是系统版本数字的升级而已，同时不太喜欢被“绑架感”，手表、耳机、电脑全部一套系统，更多还是自己随便选择，哪个我用用哪个，防止被绑架更深，想着要不要试试 Android 玩玩看。</p>\n<p>上一个手机是 15 Pro Max，屏幕观看视频/文章大小非常好，但到了夏天真的太太太大了，特别是放短裤袋子，好比装了一块砖块在口袋，同时很不好单手握持，特别是手指握住还有一点点空余，这样很好把玩。</p>\n<p><strong>Android 里面为啥选择了 OPPO Find X8s？</strong></p>\n<p>首先考虑的是小屏机器，需要单手可以握住，我去店里看了 vivo X200 Pro mini、小米 15、一加 13T、iPhone 16E，都是 6.3 左右机器，这里面只有 OPPO 这个屏幕观感，特别是文字渲染看着更精致点，同时重量是这几个里面最轻的 179g，边框也是最窄了。</p>\n<p>其实很多时候阻碍 iPhone 用户迁移到 Android 的，我看来第一点应该就是屏幕和字体，人是习惯性记忆，突然看到一个和 iPhone 不一样感受的屏幕特别是 Android 的字体渲染，基本上就把人给劝退了，因为反过来也是，我大概 20 多天没有用 iPhone，突然一样，居然感觉也非常不习惯。</p>\n<p>ColorOS 15 的系统比我想的流程简洁太多了，玩了玩对应的小布 AI 工具，有记忆助手，好比大模型的知识库，可以系统级别调用软件本身能力， 可玩性非常适合我，iPhone 16E 有点儿想喷，居然 4000 多，套了个 13 的模子，不过 16E 的背面其实非常好看的。</p>\n<p><strong>Android 和 OPPO 的优点有哪些？</strong></p>\n<p>第一个优点，我认为是可玩性，特别是换字体，给系统换上了苍耳今楷这个字体，原来我微信读书的字体，非常舒服，立马就把原来 Android 默认字体那种粗糙感给高级化了。然后还有一块 iPhone 用户的痛点，就是很多时候有牛皮癣的国内 APP 图标上被粘上了广告语，Android 基本上可以换图标，甚至你还可以换成和苹果一样的图标。</p>\n<p>第二个优点就是系统便捷度，各种小细节的优化，现在特别喜欢用 Ai 助手帮忙接不想接的电话，对于通话可以用 AI 记录并摘要分析，把苹果好的地方也借鉴到了，比如 Action 按钮快捷唤起，还有各种系统里面的小细节，侧边唤起，三指截图、滚动截图、录屏可录多线声音、应用分屏等，当然有不想用的，你也可以关掉，让他很简洁，系统自带了骚扰拦截、电话短信识别也非常方便。</p>\n<p>第三个优点是速度，ColorOS 真的很顺滑，速度非常快，还有一个速度是网络本身，在电梯、地库照样网络很足，特别是迁移手机资料的时候，直接 90M 从 iPhone 传输过来，不到半小时资料差不多都传递完了，这里很突破我的原有想法，原来是被苹果妥协了这么多年。</p>\n<p>第四个是很多东西都可以关掉，比如说之前借助 gkd 可以很便捷的关掉系统的广告、系统本身设置可以关掉大量的东西，甚至底部的导航栏横条你也可以隐藏掉。</p>\n<p>第五个优点就是性价比很高，这个机器边框非常窄，非常窄，手感很好，特别是终于告别了大刘海和大岛，简洁派很喜欢，屏幕指纹解锁虽然比不上 iPhone 的解锁，但是也很容易习惯，机器加上国补才 3600 多，相比 9000 的 PM，性价比还是高太多了。</p>\n<p>第六个是超级快充的速度，之前用 iPhone 时候从来没有想到，以后晚上不要给手机充电了，直接早上醒来，刷牙洗漱吃早饭时候电就充满了，5700 毫安，80w 充电，真的是能看到电量上涨，这一点非常之爽。</p>\n<p><strong>那么 Android 手机的有什么缺点呢？</strong></p>\n<p>第一个缺点，手机比 iPhone 更容易发烫，特别是连续下载多个应用、同步很多数据、拍摄高容量视频的时候很明显，发热这里是一个小痛点，不过正常时间使用还好。</p>\n<p>第二个缺点，系统的一致性软件兼容美感没有 iPhone 好，不过 ColorOS 很勤奋，做了很多本身系统的兼容，兼容性特别是各种 App 的兼容适配，大部分都做得很不错了，不过偶尔有小部分的一致性上，特别是国外本身一些 App 在字体以及底部 bar 兼容上，对于强迫症还是有一点接受成本，苹果的生态在手机里面仍然是第一。</p>\n<p>第三个缺点，系统精细化节约上，外放的音质其实没有 iPhone 好，不过好在平时外放不多，也还是可以接受，比如虽然说是 5700 毫安的大电池，其实没有 pro max 那种看着电量不大但是很耐用的感觉，不过满足一天正常使用没有问题。</p>\n<p>第四个缺点，和苹果系统的联动上，虽然 OPPO 戏称为 OPhone，属于对于苹果生态做得很不错的，比如说 Live Photos、文件传输、可用 AirPods 等还是不错的，但是比如我想短信验证码转发到 Mac，不装 App 情况下文件自然传输到 mac，原有苹果的备忘录、todo 软件就不好同步了，不过这些其实可以慢慢改变使用系统。</p>\n<p><strong>换系统可能的担忧点？</strong></p>\n<p>我用习惯了 iPhone 的软件，担心 Android 上没有？这一点倒是还好，假如你不是那种手机装了非常多苹果小众软件的人，常规软件基本上都可以找到的，甚至配置上了你喜欢的字体，真的整体太舒服了。</p>\n<p>同时担心 Android 机器用一年会不会变卡，特别多 iPhone 用户一直有这个固执的想法，我当时也是，其实现在 Android 机器堆料已经解决了这个问题，甚至你会觉得比非旗舰的最新版本 iPhone 顺滑很多，我感觉用个两年多问题不大，因为即使是 iPhone，用 2 年你也会经常有换机欲望的。</p>\n<p>也有人担心安全性的，这一点，的确 Android 的可自定义性很强于苹果，通过从 Google Play 或者系统自带的下载安装，不乱搞其实还好，但是比如说有些公司类员工办公软件、非正常渠道下载的还是需要注意安全，或许以后，可以买一个备用机数字版 iPhone 来解决这个问题。</p>\n<p>总之，这次尝试，我认为带来的使用体验是正向的，而且改变了一些自己固有的观点，当然，你也可以试试看，防止以后老了，想换机没有啥兴趣了。</p>",
      "content": "<img src=\"https://cdn.fliggy.com/uPic/22922.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于天目里 B1OCK 这家空中花园餐厅 fine by FINE 的外面的果树，刚好下完雨，这家餐厅有格调很好吃，寿喜烧牛肉意面是我吃过最好吃的意面，有空你可以去试试。</p>\n\n\n    \n    \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_20250712_21314322.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"600\">\n        \n        \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_20250712_21291322.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"600\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_20250712_21295922.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"360\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_20250712_21305522.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"360\">\n        \n    \n\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<p>这期不推荐技术和文章，想聊聊我从 iPhone 切到 Android 的一个变化，挺有趣的。</p>\n<p>对于一个十多年 iPhone 用户，切到 Android 差不多一个月样子，选的 OPPO Find X8s，比想象中迁移成本小很多，而且谁能想到 Android 变成了主力机，想和大伙随便聊聊这个过程想法的变化。</p>\n\n\n    \n    \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_438722.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_439522.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_439022.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_439622.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n    \n\n<p><strong>为啥不坚持 iPhone 了？</strong></p>\n<p>只能说苹果这几年的确不太不思进取了，之前很期待每年的发布会，会在第一时间换上新款，但是老感觉这几年没有啥变化，特别是 AI 这一块，系统层面没啥好玩的，更多是系统版本数字的升级而已，同时不太喜欢被“绑架感”，手表、耳机、电脑全部一套系统，更多还是自己随便选择，哪个我用用哪个，防止被绑架更深，想着要不要试试 Android 玩玩看。</p>\n<p>上一个手机是 15 Pro Max，屏幕观看视频/文章大小非常好，但到了夏天真的太太太大了，特别是放短裤袋子，好比装了一块砖块在口袋，同时很不好单手握持，特别是手指握住还有一点点空余，这样很好把玩。</p>\n<p><strong>Android 里面为啥选择了 OPPO Find X8s？</strong></p>\n<p>首先考虑的是小屏机器，需要单手可以握住，我去店里看了 vivo X200 Pro mini、小米 15、一加 13T、iPhone 16E，都是 6.3 左右机器，这里面只有 OPPO 这个屏幕观感，特别是文字渲染看着更精致点，同时重量是这几个里面最轻的 179g，边框也是最窄了。</p>\n<p>其实很多时候阻碍 iPhone 用户迁移到 Android 的，我看来第一点应该就是屏幕和字体，人是习惯性记忆，突然看到一个和 iPhone 不一样感受的屏幕特别是 Android 的字体渲染，基本上就把人给劝退了，因为反过来也是，我大概 20 多天没有用 iPhone，突然一样，居然感觉也非常不习惯。</p>\n<p>ColorOS 15 的系统比我想的流程简洁太多了，玩了玩对应的小布 AI 工具，有记忆助手，好比大模型的知识库，可以系统级别调用软件本身能力， 可玩性非常适合我，iPhone 16E 有点儿想喷，居然 4000 多，套了个 13 的模子，不过 16E 的背面其实非常好看的。</p>\n<p><strong>Android 和 OPPO 的优点有哪些？</strong></p>\n<p>第一个优点，我认为是可玩性，特别是换字体，给系统换上了苍耳今楷这个字体，原来我微信读书的字体，非常舒服，立马就把原来 Android 默认字体那种粗糙感给高级化了。然后还有一块 iPhone 用户的痛点，就是很多时候有牛皮癣的国内 APP 图标上被粘上了广告语，Android 基本上可以换图标，甚至你还可以换成和苹果一样的图标。</p>\n<p>第二个优点就是系统便捷度，各种小细节的优化，现在特别喜欢用 Ai 助手帮忙接不想接的电话，对于通话可以用 AI 记录并摘要分析，把苹果好的地方也借鉴到了，比如 Action 按钮快捷唤起，还有各种系统里面的小细节，侧边唤起，三指截图、滚动截图、录屏可录多线声音、应用分屏等，当然有不想用的，你也可以关掉，让他很简洁，系统自带了骚扰拦截、电话短信识别也非常方便。</p>\n<p>第三个优点是速度，ColorOS 真的很顺滑，速度非常快，还有一个速度是网络本身，在电梯、地库照样网络很足，特别是迁移手机资料的时候，直接 90M 从 iPhone 传输过来，不到半小时资料差不多都传递完了，这里很突破我的原有想法，原来是被苹果妥协了这么多年。</p>\n<p>第四个是很多东西都可以关掉，比如说之前借助 gkd 可以很便捷的关掉系统的广告、系统本身设置可以关掉大量的东西，甚至底部的导航栏横条你也可以隐藏掉。</p>\n<p>第五个优点就是性价比很高，这个机器边框非常窄，非常窄，手感很好，特别是终于告别了大刘海和大岛，简洁派很喜欢，屏幕指纹解锁虽然比不上 iPhone 的解锁，但是也很容易习惯，机器加上国补才 3600 多，相比 9000 的 PM，性价比还是高太多了。</p>\n<p>第六个是超级快充的速度，之前用 iPhone 时候从来没有想到，以后晚上不要给手机充电了，直接早上醒来，刷牙洗漱吃早饭时候电就充满了，5700 毫安，80w 充电，真的是能看到电量上涨，这一点非常之爽。</p>\n<p><strong>那么 Android 手机的有什么缺点呢？</strong></p>\n<p>第一个缺点，手机比 iPhone 更容易发烫，特别是连续下载多个应用、同步很多数据、拍摄高容量视频的时候很明显，发热这里是一个小痛点，不过正常时间使用还好。</p>\n<p>第二个缺点，系统的一致性软件兼容美感没有 iPhone 好，不过 ColorOS 很勤奋，做了很多本身系统的兼容，兼容性特别是各种 App 的兼容适配，大部分都做得很不错了，不过偶尔有小部分的一致性上，特别是国外本身一些 App 在字体以及底部 bar 兼容上，对于强迫症还是有一点接受成本，苹果的生态在手机里面仍然是第一。</p>\n<p>第三个缺点，系统精细化节约上，外放的音质其实没有 iPhone 好，不过好在平时外放不多，也还是可以接受，比如虽然说是 5700 毫安的大电池，其实没有 pro max 那种看着电量不大但是很耐用的感觉，不过满足一天正常使用没有问题。</p>\n<p>第四个缺点，和苹果系统的联动上，虽然 OPPO 戏称为 OPhone，属于对于苹果生态做得很不错的，比如说 Live Photos、文件传输、可用 AirPods 等还是不错的，但是比如我想短信验证码转发到 Mac，不装 App 情况下文件自然传输到 mac，原有苹果的备忘录、todo 软件就不好同步了，不过这些其实可以慢慢改变使用系统。</p>\n<p><strong>换系统可能的担忧点？</strong></p>\n<p>我用习惯了 iPhone 的软件，担心 Android 上没有？这一点倒是还好，假如你不是那种手机装了非常多苹果小众软件的人，常规软件基本上都可以找到的，甚至配置上了你喜欢的字体，真的整体太舒服了。</p>\n<p>同时担心 Android 机器用一年会不会变卡，特别多 iPhone 用户一直有这个固执的想法，我当时也是，其实现在 Android 机器堆料已经解决了这个问题，甚至你会觉得比非旗舰的最新版本 iPhone 顺滑很多，我感觉用个两年多问题不大，因为即使是 iPhone，用 2 年你也会经常有换机欲望的。</p>\n<p>也有人担心安全性的，这一点，的确 Android 的可自定义性很强于苹果，通过从 Google Play 或者系统自带的下载安装，不乱搞其实还好，但是比如说有些公司类员工办公软件、非正常渠道下载的还是需要注意安全，或许以后，可以买一个备用机数字版 iPhone 来解决这个问题。</p>\n<p>总之，这次尝试，我认为带来的使用体验是正向的，而且改变了一些自己固有的观点，当然，你也可以试试看，防止以后老了，想换机没有啥兴趣了。</p>",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "5577c71759a1",
      "blog_name": "潮流周刊",
      "title": "第228期 - 彩色天空",
      "link": "https://weekly.tw93.fun/posts/228-%E5%BD%A9%E8%89%B2%E5%A4%A9%E7%A9%BA/",
      "published": "2025-07-07T00:00:00",
      "timestamp": 1751817600,
      "summary": "<img src=\"https://cdn.fliggy.com/uPic/22821.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于某个周五下班时候的天空，非常好看，有一种红色、蓝色水墨画的感觉。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>舒适地监控您的网络流量 Sniffnet</strong><br>\n<a href=\"https://github.com/GyulyVGC/sniffnet\">https://github.com/GyulyVGC/sniffnet</a><br>\n一款网络监控工具，帮助你轻松追踪互联网流量，无论你是想收集统计数据，好奇自己与谁在进行数据交换，还是需要深入检查网络中发生的情况，应该都能满足你的需求。<br>\n<img src=\"https://cdn.fliggy.com/uPic/RYYT3522.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>开源的白板工具 Drawnix</strong><br>\n<a href=\"https://drawnix.com\">https://drawnix.com</a><br>\n这个开源的白板工具 Drawnix 做得挺简洁的，支持随便画画、画脑图、工作流程图，有需要的场景可以自己部署一个玩玩。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250629-tuwk21.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>快捷键查找工具 Keycheck</strong><br>\n<a href=\"https://keycheck.dev/\">https://keycheck.dev/</a><br>\n很多时候给自己软设置快捷键挺考验人的，基本做法是和其他工具保持高度一致性，让用户的学习成本最低以及最顺手，同时也可以避免和系统快捷键冲突，这个工具就是让你在几秒钟内找到适合自己 APP 的快捷键的。<br>\n<img src=\"https://cdn.fliggy.com/uPic/wCjSXW21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Figma 上的 50 张产品落地页参考</strong><br>\n<a href=\"https://www.figma.com/design/nYPqNEV19jaLTAJrW5cRe0/50--Landing-page-designs--Community-?t=kn4WteYo3bCDgEfc-0\">https://www.figma.com/design/nYPqNEV19jaLTAJrW5cRe0/50—Landing-page-designs—Community-?t=kn4WteYo3bCDgEfc-0</a><br>\n比较适合给产品做落地页时候，可以去参考一些设计风格的东西。<br>\n<img src=\"https://cdn.fliggy.com/uPic/3JEMsj21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>ECMAScript 2025: What’s new?</strong><br>\n<a href=\"https://2ality.com/2025/06/ecmascript-2025.html\">https://2ality.com/2025/06/ecmascript-2025.html</a><br>\n2025 年 6 月 25 日，第 129 届 Ecma 全体大会通过了 ECMAScript 2025 语言规范（新闻稿），这意味着它现在正式成为标准。可以看看都有哪些新的。</p>\n<p><strong>我在阿那亚的海边住了 10 天帐篷，做了一个 AI 装置艺术</strong><br>\n<a href=\"https://greatdk.com/2091.html\">https://greatdk.com/2091.html</a><br>\n爱探索的登科，6 月 17 日在阿那亚的海边沙滩，屹立起来了一座三角形的透明房子，他和艺术家任爽共同制作的一个装置艺术作品，名字叫未来辩证。<br>\n<img src=\"https://cdn.fliggy.com/uPic/QSla3322.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>程序员的提示工程实战手册</strong><br>\n<a href=\"https://baoyu.io/translations/the-prompt-engineering-playbook-for\">https://baoyu.io/translations/the-prompt-engineering-playbook-for</a><br>\n宝玉兄 6 月份的一篇翻译的文章，程序员的提示工程实战手册，一份适合新人的快速入门备忘录。<br>\n<img src=\"https://cdn.fliggy.com/uPic/CUWJ0021.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "content": "<img src=\"https://cdn.fliggy.com/uPic/22821.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍摄于某个周五下班时候的天空，非常好看，有一种红色、蓝色水墨画的感觉。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>舒适地监控您的网络流量 Sniffnet</strong><br>\n<a href=\"https://github.com/GyulyVGC/sniffnet\">https://github.com/GyulyVGC/sniffnet</a><br>\n一款网络监控工具，帮助你轻松追踪互联网流量，无论你是想收集统计数据，好奇自己与谁在进行数据交换，还是需要深入检查网络中发生的情况，应该都能满足你的需求。<br>\n<img src=\"https://cdn.fliggy.com/uPic/RYYT3522.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>开源的白板工具 Drawnix</strong><br>\n<a href=\"https://drawnix.com\">https://drawnix.com</a><br>\n这个开源的白板工具 Drawnix 做得挺简洁的，支持随便画画、画脑图、工作流程图，有需要的场景可以自己部署一个玩玩。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250629-tuwk21.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>快捷键查找工具 Keycheck</strong><br>\n<a href=\"https://keycheck.dev/\">https://keycheck.dev/</a><br>\n很多时候给自己软设置快捷键挺考验人的，基本做法是和其他工具保持高度一致性，让用户的学习成本最低以及最顺手，同时也可以避免和系统快捷键冲突，这个工具就是让你在几秒钟内找到适合自己 APP 的快捷键的。<br>\n<img src=\"https://cdn.fliggy.com/uPic/wCjSXW21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Figma 上的 50 张产品落地页参考</strong><br>\n<a href=\"https://www.figma.com/design/nYPqNEV19jaLTAJrW5cRe0/50--Landing-page-designs--Community-?t=kn4WteYo3bCDgEfc-0\">https://www.figma.com/design/nYPqNEV19jaLTAJrW5cRe0/50—Landing-page-designs—Community-?t=kn4WteYo3bCDgEfc-0</a><br>\n比较适合给产品做落地页时候，可以去参考一些设计风格的东西。<br>\n<img src=\"https://cdn.fliggy.com/uPic/3JEMsj21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>ECMAScript 2025: What’s new?</strong><br>\n<a href=\"https://2ality.com/2025/06/ecmascript-2025.html\">https://2ality.com/2025/06/ecmascript-2025.html</a><br>\n2025 年 6 月 25 日，第 129 届 Ecma 全体大会通过了 ECMAScript 2025 语言规范（新闻稿），这意味着它现在正式成为标准。可以看看都有哪些新的。</p>\n<p><strong>我在阿那亚的海边住了 10 天帐篷，做了一个 AI 装置艺术</strong><br>\n<a href=\"https://greatdk.com/2091.html\">https://greatdk.com/2091.html</a><br>\n爱探索的登科，6 月 17 日在阿那亚的海边沙滩，屹立起来了一座三角形的透明房子，他和艺术家任爽共同制作的一个装置艺术作品，名字叫未来辩证。<br>\n<img src=\"https://cdn.fliggy.com/uPic/QSla3322.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>程序员的提示工程实战手册</strong><br>\n<a href=\"https://baoyu.io/translations/the-prompt-engineering-playbook-for\">https://baoyu.io/translations/the-prompt-engineering-playbook-for</a><br>\n宝玉兄 6 月份的一篇翻译的文章，程序员的提示工程实战手册，一份适合新人的快速入门备忘录。<br>\n<img src=\"https://cdn.fliggy.com/uPic/CUWJ0021.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "b3f78ae9cc47",
      "blog_name": "潮流周刊",
      "title": "第227期 - 怀念五月",
      "link": "https://weekly.tw93.fun/posts/227-%E6%80%80%E5%BF%B5%E4%BA%94%E6%9C%88/",
      "published": "2025-06-30T00:00:00",
      "timestamp": 1751212800,
      "summary": "<p><video width=\"800px\"></video></p>\n<p>封面图拍摄于 5 月初从千岛湖返回杭州所拍的视频，那时候下完雨的天气非常凉爽，山里的雾气加上绿色我非常喜欢这种感受，相比起这个周末的酷热真的是很是怀念。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>Apple iOS 26 Library 的 设计 sketch 文件</strong><br>\n<a href=\"https://sketch.com/s/f63aa308-1f82-498c-8019-530f3b846db9\">https://sketch.com/s/f63aa308-1f82-498c-8019-530f3b846db9</a><br>\nApple iOS 26 Library 的 设计 sketch 文件，对于新软件设计的同学可能用得上，苹果在 VR 时代的“多端一致性”，虽然我感觉每次苹果设计升级都不那么好看的样子，但是基本上看段时间又被习惯了。<br>\n<img src=\"https://cdn.fliggy.com/uPic/x41EOB22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>中国城市地铁可视化的效果</strong><br>\n<a href=\"https://subway.cuvii.dev\">https://subway.cuvii.dev</a><br>\n地图爱好者好玩的东西，中国城市地铁可视化的效果，杭州地铁线路居然比我想的多，可以选择城市，然后选择线路看到详细的路线站点。<br>\n<img src=\"https://cdn.fliggy.com/uPic/v2STGN22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>LibreTube：Android Youtube 的第三方可选替代</strong><br>\n<a href=\"https://github.com/libre-tube/LibreTube\">https://github.com/libre-tube/LibreTube</a><br>\n假如你使用 Android，可以试试这个第三方的 Youtube，界面上挺漂亮的。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ir9I3q22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>美团技术：可信实验白皮书</strong><br>\n<a href=\"https://tech.meituan.com/2025/05/22/meituan-ab-online-controlled-experiment-01.html\">https://tech.meituan.com/2025/05/22/meituan-ab-online-controlled-experiment-01.html</a><br>\n美团技术最近在写一个《可信实验白皮书》，讲了在业务过程中各种实验过程的一些方法论，从 AB/随机对照/随机轮转/准实验/可观察循序渐进讲，当前写到了系列 06，值得一看。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ra2zxl22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>OpenAI 最近出了一个构建 AI Agent 的实用指南</strong><br>\n<a href=\"https://cdn.openai.com/business-guides-and-resources/a-practical-guide-to-building-agents.pdf\">https://cdn.openai.com/business-guides-and-resources/a-practical-guide-to-building-agents.pdf</a><br>\n值得一看，PDF 文档下载地址在上面。<br>\n<img src=\"https://cdn.fliggy.com/uPic/dblEnL22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\"></p>\n<p><strong>How we built our multi-agent research system</strong><br>\n<a href=\"https://anthropic.com/engineering/built-multi-agent-research-system\">https://anthropic.com/engineering/built-multi-agent-research-system</a><br>\nClaude 最近也出了一个 How we built our multi-agent research system，我们是如何构建多 Agent 研究系统，可以和上一个 OpenAI 那个对比着来阅读，最近继续补补课去。<br>\n<img src=\"https://cdn.fliggy.com/uPic/US9poC22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>随便听听：周末晚上用磁带播放谢霆锋的因为爱所以爱</strong><br>\n如果在办公室，建议耳机，防止外放影响到同事。<br>\n<video controls width=\"800px\"></video></p>",
      "content": "<p><video width=\"800px\"></video></p>\n<p>封面图拍摄于 5 月初从千岛湖返回杭州所拍的视频，那时候下完雨的天气非常凉爽，山里的雾气加上绿色我非常喜欢这种感受，相比起这个周末的酷热真的是很是怀念。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>Apple iOS 26 Library 的 设计 sketch 文件</strong><br>\n<a href=\"https://sketch.com/s/f63aa308-1f82-498c-8019-530f3b846db9\">https://sketch.com/s/f63aa308-1f82-498c-8019-530f3b846db9</a><br>\nApple iOS 26 Library 的 设计 sketch 文件，对于新软件设计的同学可能用得上，苹果在 VR 时代的“多端一致性”，虽然我感觉每次苹果设计升级都不那么好看的样子，但是基本上看段时间又被习惯了。<br>\n<img src=\"https://cdn.fliggy.com/uPic/x41EOB22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>中国城市地铁可视化的效果</strong><br>\n<a href=\"https://subway.cuvii.dev\">https://subway.cuvii.dev</a><br>\n地图爱好者好玩的东西，中国城市地铁可视化的效果，杭州地铁线路居然比我想的多，可以选择城市，然后选择线路看到详细的路线站点。<br>\n<img src=\"https://cdn.fliggy.com/uPic/v2STGN22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>LibreTube：Android Youtube 的第三方可选替代</strong><br>\n<a href=\"https://github.com/libre-tube/LibreTube\">https://github.com/libre-tube/LibreTube</a><br>\n假如你使用 Android，可以试试这个第三方的 Youtube，界面上挺漂亮的。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ir9I3q22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>美团技术：可信实验白皮书</strong><br>\n<a href=\"https://tech.meituan.com/2025/05/22/meituan-ab-online-controlled-experiment-01.html\">https://tech.meituan.com/2025/05/22/meituan-ab-online-controlled-experiment-01.html</a><br>\n美团技术最近在写一个《可信实验白皮书》，讲了在业务过程中各种实验过程的一些方法论，从 AB/随机对照/随机轮转/准实验/可观察循序渐进讲，当前写到了系列 06，值得一看。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ra2zxl22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>OpenAI 最近出了一个构建 AI Agent 的实用指南</strong><br>\n<a href=\"https://cdn.openai.com/business-guides-and-resources/a-practical-guide-to-building-agents.pdf\">https://cdn.openai.com/business-guides-and-resources/a-practical-guide-to-building-agents.pdf</a><br>\n值得一看，PDF 文档下载地址在上面。<br>\n<img src=\"https://cdn.fliggy.com/uPic/dblEnL22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\"></p>\n<p><strong>How we built our multi-agent research system</strong><br>\n<a href=\"https://anthropic.com/engineering/built-multi-agent-research-system\">https://anthropic.com/engineering/built-multi-agent-research-system</a><br>\nClaude 最近也出了一个 How we built our multi-agent research system，我们是如何构建多 Agent 研究系统，可以和上一个 OpenAI 那个对比着来阅读，最近继续补补课去。<br>\n<img src=\"https://cdn.fliggy.com/uPic/US9poC22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>随便听听：周末晚上用磁带播放谢霆锋的因为爱所以爱</strong><br>\n如果在办公室，建议耳机，防止外放影响到同事。<br>\n<video controls width=\"800px\"></video></p>",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "01bd0e0aab7f",
      "blog_name": "美团技术团队",
      "title": "可信实验白皮书系列07：高阶实验工具",
      "link": "https://tech.meituan.com/2025/06/26/meituan-ab-online-controlled-experiment-07.html",
      "published": "2025-06-26T00:00:00+00:00",
      "timestamp": 1750896000,
      "summary": "本文系《可信实验白皮书》系列的第七篇文章。上一篇我们重点介绍了观察性研究，内容主要包括合成控制法、匹配方法、Causal Impact等几个方面。针对单次实验功效不足、假阳性、策略调优等实验中面临的问题，本篇我们来介绍几个高阶实验工具，重点解读了统合分析、多重比较，同时还有一些拓展与展望。",
      "content": "\n<p>在前面的几个章节中，我们已经详细讨论了许多实验方法的适用场景以及实验设计与评估流程，然而在实际操作中，实验者仍会面临一些常见的困难和疑问。例如由于业务约束，实验者常常无法在单个城市选取足够流量进行实验，即单次实验的样本量难以达到检测出预期提升的功效，从而无法得到显著的实验结论。为此，实验者可能会在多城进行实验或者在同一个城市多次进行实验，以期积累样本量使得能够检测出显著的实验效果。此时，实验者需寻求新手段，科学地整合多次实验的结果，以最终确定策略的有效性。</p><p>此外，在一些在线实验中，实验者可能需要考察十几甚至几十个指标的变化情况，或者分多个实验组以同时考察多个策略的效果，甚至实验者有时还会倾向于在完整实验周期结束之前监控实验结果，提前查看显著性。这些操作本质上都涉及到多重的假设检验，当实验指标、组别数量增多和查看结果的频率提高时，假设检验的次数也随之增加。虽然单次假设检验能将第一类错误率控制在5%，但在多次假设检验中犯第一类错误（无效策略错误判为有效）的概率却不再是5%，而是可能远大于这个概率。</p><p>即如果继续采用原始逻辑进行显著性判断，往往会发现更容易出现一些误判策略显著的结果。因此，如何在多重比较的情况下防止假阳性带来的错误判断，也是实验者需关注的问题。针对单次实验功效不足、假阳性、策略调优等实验中面临的问题，我们也针对性的探索并建设了一些高阶实验工具予以解决。</p><h2>7.1 统合分析</h2><h3>7.1.1 统合分析概述</h3><p>在实际业务中，可能在不同城市等（可不同时）开展同一个实验，或者在同一城市进行正交随机化后的重复实验，亦或是两者皆有。这些实验相互之间可以认为是独立的。统合分析旨在综合考虑多个考察同一策略的独立实验，对这些实验的实验结果进行统合分析，从而给出对于这些实验整体效果的评估结果。一种业务上常用的整体评估方式是打包分析，即将多次实验的实验单位数据放在一起进行计算。</p><p>但这会遇到两个问题：（1）其一是辛普森悖论，当不同实验各组的分组比例不同时，可能出现整体结果与单次实验结果截然相反的情况。这通常与业务的常规认知相悖。（2）其二是对于同一城市进行不同周期多次正交打散的实验时，可能会存在实验单位在多次实验中的实验组和对照组中都出现。如果实验可以认为是独立的（即不存在前序实验对后序实验的结果造成影响），这种情况下的同一单位在两次实验中应当被当作两个独立的单位进行处理，这在数据分析时需要注意。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/c6375ceeee76e4e299c69796306a9089156894.png\"></p><p>统合分析相比直接打包分析有几个主要优势：</p><ol><li>统合分析提高实验功效。例如在多个城市分别开展多次实验时，如图7-2所示，城市间的差异可能导致打包分析的方差较大，而统合分析实际上考虑了按子实验的分层，降低子实验之间差异带来的方差，提高检验灵敏度。而从估计量业务口径上来说，统合分析在很多时候也能与打包分析的估计结果对齐。</li><li>统合分析快捷方便。当在不同时间进行多次实验得到各自单个实验的结果后，打包分析需要拿到所有实验的明细数据进行整体的显著性计算，而统合分析只用在各个实验的结果基础上进行二次处理即可。</li><li>当使用逆方差等加权方式来进行统合分析时，能够有效避免辛普森悖论对分析结果的影响，得到业务上较好解释的整体结果。</li></ol><p>在统合分析的具体应用时，我们同样可根据具体场景与用户诉求来确定具体使用的统合分析加权方式，产出的结果包括实验估计量的加权结果，以及MDE估计量的加权结果，最终给出统合分析的P值以及显著性结论。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/08fe53de54ae1df7ade3ac9549572b37238130.png\"></p><h3>7.1.2 统合分析原理</h3><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/8143ee6a00c913edc79d0edd18d2fda9125055.png\"></p><p><strong>1.逆方差加权（固定效应模型）</strong></p><p>逆方差加权（固定效应模型）提高实验功效的效果是最佳的，因为它在所有加权方式中选取了使得统合后方差最小的加权方式。从统计学直观上来说，对于方差较大的实验，我们可以认为其估计结果相对不太精确，会给予较低的权重。反之对于方差较小的实验，我们可以认为其估计结果相对精确，会给予较高的权重。但同样逆方差加权的使用所依赖的假设条件也是最强的，需要假设每个实验的实验效果都能认为是相同的。此外需要注意的是，使用固定效应模型的逆方差加权在解释意义上与传统的打包实验意义会有不同，导致口径存在区别（在每个实验样本独立同分布时往往比较类似）。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/27d5da3cbe28ef06d4561c81429c368659841.png\"></p><p><strong>2.逆方差加权（随机效应模型）</strong></p><p>逆方差加权（随机效应模型）与逆方差加权（固定效应模型）的核心思想类似，但在假设上相对较为宽松，认为多个实验的策略效果估计量实际上是在一个平均效果附近波动的随机变量，通过正态分布来刻画多个实验结果。同样在解释意义上，会与打包分析的口径存在一定区别。具体的对于随机效应模型，权重可以取为：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/299e035d744e9e4d5212b825d70421ae193504.png\"></p><p><strong>3.分母求和加权（比率型指标）</strong></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/9569fa07271023d77836d8ee3ae7a2f5214979.png\"></p><p><strong>4.样本量加权（连续型指标）</strong></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/e0f77bf72e737befd5415463c687a23f237957.png\"></p><h3>7.1.3 统合分析的实际选取逻辑</h3><p>面对多种统合分析权重，以履约实验为例，在兼顾业务解释意义以及功效角度下，建议实际选取逻辑为：</p><p><strong>Step1</strong>：先判断是同城多实验统合，还是多城实验统合。如果是同城多实验统合，则直接使用逆方差加权（固定效应模型），否则进入下一步。</p><p><strong>Step2</strong>：判断是比率型指标还是连续型指标。</p><p>(1) 如果是比率型指标，先计算分母求和加权的前提条件，即实验组的分母权重比例，对照组的分母权重比例是否超出总体的分母权重比例的正负20%区间范围。如果有超出，则进入下一步；如果均未超出，如果有填预期提升则判断是否分母求和加权的MDE小于预期提升量或者$p$值显著，如果未填则判断是否$p$值显著，若是则采用分母求和加权，否则进入下一步。</p><p>(2) 如果是连续型指标，先计算样本量加权的前提比例条件，即实验组的样本量比例，对照组的样本量比例是否超出总体的样本量比例的正负20%区间范围。如果有超出，则进入下一步；如果均未超出，如果有填预期提升则判断是否样本量加权的MDE小于预期提升量或者$p$值显著，如果未填则判断是否$p$值显著。若是，则采用样本量加权，否则进入下一步。</p><p><strong>Step3</strong>：先使用逆方差加权（随机效应模型），如果有填预期提升则判断是否MDE小于预期提升量或者$p$值显著，如果未填则判断是否$p$值显著，则采用随机效应模型下的逆方差加权，否则进入下一步。</p><p><strong>Step4</strong>：使用逆方差加权（固定效应模型）。</p><h2>7.2 多重比较</h2><h3>7.2.1 多重比较概述</h3><p>多重比较问题（Multiple Comparison Problem）是统计分析中常见的一个挑战，特别是在同时进行多个假设检验时。随着检验数量的增加，出现假阳性结果（即错误地拒绝原假设）的概率也显著增加。这会导致结果的不可靠性和科学发现的误导性。</p><p>例如，我们进行20个指标的独立检验，每次的显著性水平为0.05，那么至少出现一次假阳性的概率为$1-(1-0.05)^{20}\\approx 0.64$。因此在同时进行多个假设检验时，我们会调整检验的思路，从将至少出现一次假阳性的概率控制在5%以下变更为：控制在多重假设检验中被错误拒绝的原假设的比例在5%以下。具体来说，FDR（False Discovery Rate，假发现率）控制的是在所有被拒绝的原假设中，实际为真（即错误拒绝）的比例，以便在进行多个统计检验时减少假阳性结果的比例，而不是控制每个单独检验的错误率。</p><h3>7.2.2 二阶段Benjamini-Hochberg方法规避假阳性</h3><p>在业界与学界当中，对于多重比较情况有很多方法可以来纠正P值，例如Bonferroni、Holm、Conditional Calibration BH等技术，受限于篇幅这里一一列举。我们主要依赖的理论是Benjamini-Hochberg方法。</p><p>在实际应用中，我们对于同时检验的多个指标，会采用二阶段Benjamini-Hochberg方法来进行$p$值的修正。二阶段BH方法在每个阶段动态调整FDR阈值，以适应数据中的实际显著性模式。这种自适应调整允许在控制FDR的同时，尽量减少漏掉真正显著假设的可能性。通过结合宽松的初步筛选和严格的确认检验，二阶段BH方法在提高统计功效的同时，有效控制FDR。二阶段Benjamini-Hochberg方法除了能够处理多个独立的假设检验，对于多个假设检验正相关或弱负相关的情况也能较好的应对，能够有效防止业务对于在多重比较情况下出现的显著结果而做出错误决策。</p><p><strong>Benjamini-Hochberg方法</strong></p><p>具体步骤如下：</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/a15f05d2c80e2dbe0e5280ab44a78f89161397.png\"></p><p><strong>二阶段Benjamini-Hochberg方法</strong></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/22114817228ab2b52b60b182255349d5276597.png\"></p><h2>7.3 拓展与展望</h2><p>在互联网的线上实验当中，实验者往往期望在实验运行期间就不断监控实验结果，来观测实验的走势是否符合策略预期以及样本量是否能满足需求。这里常常会有一个误区，例如在传统的随机对照实验中，实验者在实验中期观察到有策略显著的情况时，会认为策略有效从而提前结束实验，以缩减实验周期并加快策略迭代频率。然而，学界有不少研究指出，在实验期间不断偷窥实验结果会带来假阳性问题，因为直观来说，实验者每看一次结果都相当于进行了一次假设检验，多次查看即会有多重比较问题。理论上如果实验周期足够长，并且在实验期间不断进行数据收集和分析，那么几乎一定观察到一次显著的情况，这显然是不符合实验的初衷的。在这种情况下，为了兼顾实验者缩减实验周期提前观测结果的诉求与多重比较情况下的显著性结果科学性，我们探索了混合序贯概率比检验、成组序贯分检验等序贯分析的方式，能够在控制第一类错误的情况下进行中期分析，一旦统计学上足够显著即可立即停止实验，节省实验成本。一般来说，这些序贯分析的方式通常要求在不同时间进入实验的实验单元相互是独立的，因此通常较为适用于订单随机分流等实验单元只会随着时间唯一出现的情形。</p><p>此外，一般实验者在策略中会涉及到很多参数的选择，如何对合适的策略对象选择效果最优的参数也是实验者十分关心的问题。<strong>异质性因果效应</strong>估计即HTE方法会关注不同子群体对同一策略的不同反应。传统的随机对照实验通常假设所有实验单元对策略的响应是均匀的，但在实际情况中，不同的用户群体可能对同一策略有不同的反应。在实验中，HTE方法允许实验者在实验过程中进行更细粒度的分析，识别不同子群体的反应差异。在参数寻优方面，<strong>MAB</strong>（多臂老虎机）是一种动态分配策略，旨在在实验过程中不断调整资源分配，以最大化策略的整体收益。它模拟了赌博机的操作，试图在不同策略（臂）之间找到最优选择。MAB适用于需要在实验过程中快速迭代和调整策略的场景。通过动态分配资源，MAB能够在保证探索和利用之间取得平衡。MAB方法在实验中期允许实验者根据实时反馈调整策略分配，减少资源浪费并提高实验效率。这在资源有限或时间紧迫的情况下尤其有用。</p><p>在搜索、广告和推荐等排序场景中，为解决溢出效应以及提高实验灵敏度，<strong>Interleaving（交错式）实验设计</strong>不失为一种可行的解决方案。与传统的A/B实验不同，Interleaving实验考虑将A、B两种策略的推荐结果依次随机交织到同一个推荐列表后再展示给用户，而不是将用户分成不同组分别展示不同算法的结果。通过观察用户在这些混合结果中的行为（如点击行为），可以更快速和精确地评估哪种算法更优。该方法的优势在于使用较少的样本量就能区分出两种策略的优劣，然而其无法直接给出具体的差异值，并且工程实现成本较高。在使用时也可考虑先通过该方法快速筛选出较优的策略，如有需要再使用其他实验方法得到具体的提升幅度。</p><p>除此之外，学术界还存在贝叶斯实验评估等高阶实验技术，受限于白皮书篇幅，目前暂不做大规模详细介绍。对于这些方法，我们进行了线下小范围探索与应用，未来也计划成体系的进行建设，然后进行实践与应用。</p>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "7d011b9c7d20",
      "blog_name": "美团技术团队",
      "title": "开源 | MeiGen-MultiTalk：基于单张照片实现多人互动演绎",
      "link": "https://tech.meituan.com/2025/06/26/multitalk-github.html",
      "published": "2025-06-26T00:00:00+00:00",
      "timestamp": 1750896000,
      "summary": "近日，美团推出了音频驱动的多人对话视频生成框架MultiTalk，并在GitHub上开源，首创L-RoPE绑定技术，通过标签旋转位置编码精准解决多音频流与人物错位难题。该框架创新性地采用局部参数训练+多任务学习策略，在保留复杂动作指令跟随能力的同时，实现自适应动态人物定位。只需输入多人音频流、参考图像和文本提示，即可生成口型精准同步、肢体自然的交互视频，可支持影视制作、直播电商等场景的工具升级。",
      "content": "\n<p>近日，美团推出了音频驱动的多人对话视频生成框架MultiTalk，并在GitHub上开源，首创L-RoPE绑定技术，通过标签旋转位置编码精准解决多音频流与人物错位难题。该框架创新性地采用局部参数训练+多任务学习策略，在保留复杂动作指令跟随能力的同时，实现自适应动态人物定位。只需输入多人音频流、参考图像和文本提示，即可生成口型精准同步、肢体自然的交互视频，可支持影视制作、直播电商等场景的工具升级。</p><p>如果给你一张图片，再给你一段语音，怎么能让它们完美融合在一起，让图片中人物自然说话和做动作，甚至多人之间还能互动起来呢？近日，美团视觉智能团队在GitHub上开源了一款产品<a href=\"https://meigen-ai.github.io/multi-talk/\">MeiGen-MultiTalk</a>，它就非常巧妙地解决了这个问题。先上视频，看一下它实力如何：</p><p>1.输入图像+对话语音</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/e80a66b3da52892be04f3bc9ed03d7bd654709.png\"></p><p>2.使用MultiTalk生成视频</p><p>注：图像和音频均由AI生成。</p><p>还有下面这部《Smile》短片中所有镜头，也都是由MeiGen-MultiTalk合成的，是不是很惊艳？</p><p>注：每个镜头首帧图像和音频来源《Smile》- Morgan Wallen</p><p>不仅仅是这种风格，还有很多其他很多类型的融合，让小猫说话，给动画片配音，甚至还让双人对唱飚高音，它也表现的相当不错。感兴趣的同学，可移步到<a href=\"https://meigen-ai.github.io/multi-talk/\">项目主页</a>进行查看。或者查看美团技术团队微信公众号的推文：<a href=\"https://mp.weixin.qq.com/s/EJHbR0ShT53BhMTUceY9pg\">开源 | MeiGen-MultiTalk：基于单张照片实现多人互动演绎</a>。展示完毕，接下来就是最重要的部分，上链接！</p><ul><li><strong>项目主页</strong>：<a href=\"https://meigen-ai.github.io/multi-talk/\">https://meigen-ai.github.io/multi-talk/</a></li><li><strong>开源代码</strong>：<a href=\"https://github.com/MeiGen-AI/MultiTalk\">https://github.com/MeiGen-AI/MultiTalk</a></li><li><strong>技术报告</strong>：<a href=\"https://arxiv.org/abs/2505.22647\">https://arxiv.org/abs/2505.22647</a></li></ul><h2>一、引言：超越“会说话的头”——AI人像视频的下一个前沿</h2><p>当前，人工智能在视觉内容生成领域取得了令人瞩目的进展，尤其是在音频驱动的人像视频方面。无论是“会说话的头”还是“会说话的身体”技术，都已能够从音频信号生成与面部动作高度同步、视觉质量令人满意的视频。这些技术在模拟单人讲话方面表现出色，例如在虚拟主播或数字替身等应用中展现出逼真的效果。</p><p>然而，现有方法在处理更复杂的场景时，其局限性也日益凸显，面对多人对话视频生成时面临三大挑战：</p><ol><li><strong>多音频流输入适配</strong>：如何区分并绑定不同人物的音频信号？</li><li><strong>动态人物定位</strong>：当人物在画面中移动时，如何精准定位其运动区域？</li><li><strong>指令遵循能力</strong>：如何让生成的视频严格遵循文本描述的复杂动作（如大幅肢体动作）？</li></ol><p>这些挑战促使研究人员思考，AI人像视频的下一个前沿究竟在哪里。从最初仅关注面部表情的“会说话的头”，到能够模拟全身动作的“会说话的身体”，再到如今MultiTalk所提出的“多人物对话视频生成”，这清晰地揭示了AI人像视频领域从关注局部细节到全身动作，再到模拟复杂社会互动的演进趋势。这种演进不仅仅是技术能力的简单提升，更体现了对真实世界复杂性模拟需求的增长，以及AI在内容创作中扮演更高级角色的潜力。用户对AI生成内容的“真实感”和“复杂性”要求越来越高，简单的“动起来”已不足够，现在需要AI能够“自然地互动”并“理解和执行复杂指令”。</p><h2>二、MultiTalk的框架图：如何实现AI对话视频生成</h2><p>MultiTalk实现音频驱动的多人物对话视频生成的技术框架，如下图2所示：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/a9f86818109f01ce0e61b2e8227238f5408600.png\"></p><h3>2.1 基础模型结构：DiT与3D VAE</h3><p>MultiTalk以DiT（Diffusion-in-Transformer）为基础的视频扩散模型作为其核心骨架。DiT模型因其在图像和视频生成方面的卓越性能而备受关注，它用Transformer结构替代了传统的U-Net，能够更好地捕捉长距离依赖关系。</p><p>为了高效处理视频数据，MultiTalk集成了3D变分自编码器（VAE）。3D VAE能够对视频数据在空间和时间维度上进行压缩，将高维原始视频数据编码成更紧凑的潜在表示。这种压缩大大降低了后续扩散模型的计算负担，同时保留了关键的视觉信息。</p><p>首先，使用文本编码器，将用户输入的文本提示（例如“一个男人和女人正在舞台上唱歌”）转化为文本条件嵌入，指导视频内容的生成。其次，通过CLIP图像编码器提取的全局上下文信息也被注入到DiT模型中。这些图像上下文与文本条件通过解耦的交叉注意力机制协同作用，为生成视频提供视觉和语义指导，确保生成内容与参考图像和文本提示保持一致。</p><h3>2.2 让AI“说话”：单人音频集成</h3><p>基础的图像到视频（I2V）扩散模型通常不原生支持音频输入。为了让模型能够“说话”，MultiTalk在每个DiT块的文本交叉注意力层之后，添加了新的层，这些层包含层归一化和音频交叉注意力机制，专门用于处理和整合音频条件。</p><p>在音频嵌入的提取与上下文整合方面，MultiTalk采用了Wav2Vec，这是一种广泛使用的音频特征提取器，能够将音频波形转换为高维的音频嵌入。在音频驱动的人体视频中，当前时刻的动作不仅受当前音频帧影响，也受前后音频帧的影响。因此，MultiTalk遵循现有方法，将与当前帧相邻的音频嵌入进行拼接（通过上下文长度k参数控制），形成更具时间上下文信息的音频嵌入，以更好地捕捉语音的动态变化。</p><p>一个重要的挑战是，由于3D VAE对视频数据进行了时间压缩，视频潜在空间的帧长度通常比原始音频嵌入的帧长度短，这使得两者之间无法直接进行帧对帧的交叉注意力计算。为了解决这种时序长度不匹配的问题，MultiTalk使用了一个音频适配器。该适配器通过一系列操作对音频嵌入进行压缩和对齐：首先将输入音频嵌入分割为初始帧和后续帧；然后对后续帧进行下采样；接着分别通过多个MLP层编码初始帧和下采样后的后续帧；将编码后的特征拼接起来；最后，再次通过MLP层对拼接后的特征进行编码，从而获得与视频潜在空间帧长度匹配的压缩音频条件。音频适配器解决了视频和音频数据固有的时间粒度不匹配问题，确保了信息流的顺畅，使得不同模态的数据能够高效地在同一框架内进行交互。</p><h3>2.3 核心挑战：当多重声音让AI“困惑”</h3><p>与单人视频相比，多人物对话视频生成带来了多重复杂性，这些是现有方法无法解决的。首先，对话场景中，音频信号来自多个人物，模型需要能够同时、独立地处理这些不同的音频流，这是“多流音频输入处理”的挑战。其次，也是最核心的挑战之一，是“音频与人物的精确绑定”。必须确保视频中的每个人物只由其对应的音频流驱动，以防止唇形同步错误地出现在所有人物身上，导致不自然的“齐声说话”现象，这在真实对话中是极不自然的。最后，生成视频中的人物是动态的，他们的位置和姿态会随着对话和动作而变化。这要求模型具备一种“自适应方法”，能够精确追踪每个人物在视频帧中的运动区域，以便将音频准确地映射到正确的视觉区域。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/dc10d7786a98691135b1e6726397e1fd152618.png\"></p><p>在探索多流音频注入方案时，MultiTalk尝试了多种直觉性的方法，如上图3所示。但多数都未能有效解决音频与人物的绑定问题，这凸显了问题本身的复杂性，并非简单的拼接或分割就能解决。最初的尝试包括：</p><ul><li><strong>直接拼接多流音频嵌入</strong>： 将多流音频的嵌入直接拼接起来，然后与视频潜在空间进行交叉注意力计算。然而，这种方法未能将拼接后的多流音频与视频中对应的特定人物区域绑定，导致混乱的同步。</li><li><strong>分别计算后相加</strong>： 分别计算每个音频流与视频潜在空间的交叉注意力结果，然后将这些结果相加。然而，这种方法同样未能解决绑定问题，模型无法区分哪个音频应该驱动哪个人物。</li><li><strong>分割视频潜在空间（左右区域）</strong>： 考虑到视频中人物通常位于左右两侧，MultiTalk尝试将视频潜在空间简单地分割成左右两部分，并让每个部分与对应的音频流计算注意力。虽然这种方法在一定程度上成功绑定了多流音频到不同人物，但其泛化能力极其有限。它仅适用于人物动作范围很小的视频；一旦人物出现大范围移动或交叉，这种简单的空间分割就会导致音频绑定失败。</li></ul><p>这些传统方法失败的根本原因在于它们缺乏自适应的对动态主体进行定位的能力。直接拼接、简单相加或基于固定空间位置的分割，无法让模型理解哪个音频流应该对应视频中哪个动态变化的人物。缺乏这种深层的“人物感知”和“语义绑定”机制，导致了“错误绑定”——所有人都同步说话，这在对话场景中是极不自然的，严重影响了生成视频的真实感和可用性。</p><h3>2.4 让AI“交谈”：L-ROPE实现无缝多人物绑定</h3><p>为了解决这个问题，MultiTalk提出了L-ROPE。在应用L-ROPE进行音频绑定之前，MultiTalk首先需要解决一个基础问题：如何在视频中动态地识别并追踪每个人物的位置。给定包含多个人物的参考图像，模型首先识别出每个人物的掩码区域以及背景掩码。在DiT模型中，视频的第一帧通常作为参考图像。MultiTalk利用“参考图像到视频的自注意力图”。如图4a），通过计算视频潜在空间中每个Token与参考图像中每个人物掩码的平均相似度，模型能够得到一个相似度矩阵。利用这个相似度矩阵，模型可以自适应地确定视频中每个潜在Token属于哪个人物或背景，从而实现了对每个人物的动态定位和追踪。</p><p>Label Rotary Position Embedding （L-ROPE）是MultiTalk的核心创新，它基于ROPE（Rotary Position Embedding）的思想。ROPE是一种在大型语言模型（LLMs）和视频扩散模型中广泛使用的相对位置编码技术，以其在捕捉Token间关系和处理时空信息方面的卓越能力而闻名。L-ROPE的创新之处在于，它将“类别标签”融入到位置编码中，从而在DiT块的音频交叉注意力层中，实现了多流音频与多个人物的精准绑定。</p><p>在标签分配策略上，视频潜在空间包多个类别，比如多个人物和背景的区域。MultiTalk为每个人物分配了一个特定的数值范围作为标签（例如，第一个人物的视觉标签范围是{0-4}，第二个人物是{20-24}）。视频潜在空间中每个Token的最终标签，是根据其与对应人物掩码的相似度，通过归一化函数在这个范围内计算得出的。背景区域则被赋予一个静态标签，以确保它不与任何音频流关联，避免背景元素被音频驱动。对于多流音频嵌入，MultiTalk首先将它们拼接起来，然后为每个音频流分配一个静态的、唯一的标签。为了与视频中的人物绑定，这些音频标签被精心选择，与对应人物的视觉标签范围“接近”或“匹配”（例如，第一个音频流标签为2，第二个音频流标签为22）。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/bc0a055b4629bff8e1c65542bda8510b378519.png\"></p><p>L-ROPE的特点在于它将“类别信息”（哪个像素属于哪个人物类或背景类）巧妙地融入了“位置编码”中。传统的ROPE处理的是纯粹的时空位置信息，而L-ROPE则更进一步，将“类别”信息编码进去。它使得模型能够区分场景中的不同个体。在音频交叉注意力机制中，Q（来自视频潜在空间）和K（来自多流音频嵌入）都经过L-ROPE处理。通过这种带有语义标签的旋转，当视频潜在空间中某个区域（例如，对应人物1的区域）的标签与音频1的标签“匹配”时，它们之间的注意力权重就会被有效激活，从而强制模型将音频1的驱动作用集中到人物1身上，解决了不正确的绑定问题，如图4c)。这种策略能够有效激活音频交叉注意力图中的特定区域，从而确保音频与对应人物的唇形和动作精确同步。</p><p>为了验证L-ROPE的有效性，论文进行了一项消融研究，重点关注标签范围的选择。实验结果（如下表3所示）表明，即使为不同人物选择不同的标签范围，所产生的性能指标接近。这说明L-ROPE对具体的标签范围变化不敏感。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/f4ac2450fca0b5d054de52397751d4de67107.png\"></p><h3>2.5 训练策略</h3><p>MultiTalk框架采用了多项训练策略，这些策略共同确保了模型在多人物场景下的高性能、精确的音频同步以及指令遵循能力。</p><p><strong>1. 两阶段训练：循序渐进的技能提升</strong></p><p>MultiTalk的训练过程被划分为两个阶段，旨在逐步增强模型的音频处理和唇形同步能力。第一阶段的主要目标是开发模型对单人视频的强大能力，此阶段模型使用单人说话视频数据集进行训练。在模型掌握了单人视频能力之后，进入第二阶段。第二阶段使用专门收集的包含双流音频的训练数据，以促进模型学习多人物视频和交互。</p><p><strong>2. 部分参数训练：精准调优，避免退化</strong></p><p>这是MultiTalk训练中的一个关键策略。在整个训练过程中，研究者仅更新音频交叉注意力层和音频适配器中的网络参数，而冻结了所有其他基础模型的网络参数。论文发现表明，在计算资源和数据量有限的情况下，如果进行全参数训练，会导致模型指令遵循能力的显著下降（特别是对于复杂的动作和人物交互），甚至可能引起生成视频中手部和物体变形等视觉伪影。相反，通过仅训练与音频输入直接相关的特定层，MultiTalk能够很好地保留基础模型原有的强大指令遵循能力，并避免了上述视觉退化问题。</p><p><strong>3. 多任务训练：丰富场景理解，强化指令遵循</strong></p><p>MultiTalk采用了多任务混合训练范式，将模型训练任务分为音频+图像到视频（AI2V）训练和图像到视频（I2V）训练。尽管任务不同，但它们共享相同的网络参数。在AI2V任务中，模型同时使用参考图像和音频作为条件输入，专注于学习音频驱动的唇形同步和动作生成。在I2V任务中，音频条件被移除（通过将音频嵌入置零）。I2V任务使用的训练数据是独特的，主要包含大量多事件视频。这些视频涵盖了人物、物体和场景之间复杂的交互，例如人物拿起杯子、与环境互动等。这种多事件数据集对于确保模型能够准确理解和执行文本提示中描述的复杂动作和交互至关重要。论文指出，如果仅使用说话的头和身体数据进行AI2V训练，网络的指令遵循能力会显著削弱。然而，通过将I2V训练纳入多任务范式，模型能够有效地保留其强大的指令遵循能力，从而生成更符合用户意图的视频，如下图5所示。这种策略体现了泛化与鲁棒性，即通过多任务训练，在保持特定任务能力的同时，增强模型的通用理解和指令遵循能力。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/f562c2d9e5f31f37aa32eb5af396ccae1041360.png\"></p><h3>2.6 长视频生成</h3><p>尽管MultiTalk模型能够生成高质量的短视频（例如3-5秒），但这对于实际应用场景（如制作电影片段、直播内容）来说远远不够，因为这些场景通常需要持续更长的视频。为了突破单次生成长度的限制，MultiTalk引入了一种基于自回归（Autoregressive）的方法来生成长视频。将之前生成视频的末尾部分作为条件，来生成新的视频片段，从而实现时间上的连续性和扩展。</p><p>在具体的实现机制上，传统的图像到视频（I2V）模型通常只使用视频的第一帧作为生成后续帧的条件。MultiTalk在此基础上进行了关键改进。在生成新的视频片段时，它不再仅仅依赖第一帧，而是将先前已生成视频的最后5帧作为额外的条件输入到当前的推理步骤中。这使得模型能够“记住”并延续之前的动作和场景状态。这些作为条件的5帧视频，首先会通过3D VAE进行压缩，将其转化为更紧凑的2帧潜在噪声表示。随后，为了匹配DiT模型的输入格式，新的视频帧（除了从历史信息得来的2帧潜在噪声）会用零填充。这些填充的帧、来自历史信息的潜在噪声以及一个视频掩码被拼接在一起，形成完整的输入。最终，这个包含历史上下文信息的输入被送入DiT模型进行推理，生成新的视频片段。下面视频展示了生成结果的流畅性。</p><ol><li>输入图像+对话语音</li></ol><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/d4b32003858006661c6841d483756706398763.png\"></p><ol><li>使用MultiTalk生成视频|</li></ol><p>注：图像和音频源于《破产姐妹》。</p><h2>三、MultiTalk实战：性能表现</h2><p>MultiTalk的性能通过广泛的实验进行了验证，包括与现有最先进方法的定量和定性比较，充分展示了其在多人物对话视频生成方面的能力。</p><p>在数据集与评估指标方面，MultiTalk的训练数据集在第一阶段使用了约2K小时的单人说话视频，用于学习基础的音频驱动视频能力；第二阶段则使用了100小时的双人对话视频，用于专门训练多人物交互和绑定。MultiTalk在三类不同的测试数据集上进行了评估：说话的头数据集（HDTF 和 CelebV-HQ ）、说话的身体数据集（EMTDT ）以及双人说话身体数据集（MTHM）。评估采用了行业内通用的多维度指标：FID (Frechet Inception Distance) 和 FVD (Fréchet Video Distance) 用于评估生成数据质量；E-FID (Expression-FID) 用于评估生成视频中面部表情的表现力；Sync-C 和 Sync-D 用于精确测量生成视频中唇部动作与音频的同步程度。</p><p>在定量评估中，MultiTalk在说话的头和说话的身体生成任务上，与AniPortrait、VExpress、EchoMimic、Hallo3、Sonic、Fantasy Talking等多个最先进的方法进行了对比。结果显示，MultiTalk在大多数指标上超越了这些方法，尤其在唇形同步（Sync-C, Sync-D）和视频质量（FID, FVD）方面表现出卓越性能。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/3e33002f1509661bb7b37d22ab9facec267815.png\"></p><p>此外，我们还专门探讨了多流音频训练是否会导致单人视频性能下降的问题（具体可以参考<a href=\"https://arxiv.org/abs/2505.22647\">论文</a>）。实验结果（表1和表2中“MultiTalk-single”与“MultiTalk-multiple”的对比）显示，MultiTalk的多人视频模型在单人数据集上表现与单人视频模型相当。这表明，MultiTalk在引入多人物处理能力时，并未牺牲原有的单人视频性能，实现了能力的无损叠加。</p><p>在定性评估中，MultiTalk取得了不错的效果，如下图6所示。其显著优势之一是强大的指令遵循能力。当提供复杂的文本提示（例如“一个男人合上笔记本电脑并放在桌上”、“一个女人戴着耳机坐在桌旁，然后她拿起耳机”）时，MultiTalk能够成功生成精确响应这些指令的视频，而其他同类方法则难以做到，往往出现动作不符或物体变形。MultiTalk生成的视频中，视觉伪影（如手部或物体扭曲）显著减少，整体视觉质量更高，画面更自然真实。作为首个专门针对多人物生成任务设计的方法，MultiTalk在处理复杂的交互场景时表现出色。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/e21193cc8cd88ca829d2839017a515871936717.png\"></p><p>与简单的“视频拼接”方法（即将左右人物视频分别生成再拼接）相比（如下图7所示），MultiTalk能够有效处理人物间的互动，避免了拼接方法中常见的左右片段不一致性问题，使得多人物对话和互动更加流畅自然。论文还通过可视化自注意力图，直观地展示了MultiTalk能够自适应地识别视频中特定人物的定位，这进一步证明了L-ROPE方法在实现精确音频绑定方面的有效性。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/6d6d9386d2ae3c3be3450f6b1d65b6b11148887.png\"></p><h2>四、总结与展望</h2><p>MultiTalk提出一种音频驱动多人物对话视频生成方案，其核心突破在于其创新的L-ROPE方法，它通过结合自适应人物定位和带有类别信息的标签编码，有效解决了多流音频的注入和人物绑定这一难题。此外，其精心设计的部分参数训练和多任务训练策略，确保了模型在有限资源下依然能够保持强大的指令遵循能力和高质量的视觉输出。</p><p>MultiTalk的诞生，预示着其在多角色电影制作、虚拟直播、游戏开发、教育内容创作等领域具有广阔的应用前景。我们深信，未来它将极大地降低多角色视频的制作门槛，使个性化、交互式内容创作变得更加高效和便捷。尽管仍存在真实音频与合成音频的性能差距等局限，但MultiTalk为未来的研究指明了方向。我们期待MultiTalk及其后续研究能够进一步推动AI在模拟和创造复杂人机交互方面的能力，使数字世界中的人物更加栩栩如生。</p><p>现在，MultiTalk已经在GitHub上<a href=\"https://github.com/MeiGen-AI/MultiTalk\">开源</a>，欢迎更多的同学加入我们，一起共建。</p><h2>五、关于美团视觉智能部</h2><p>美团视觉智能部围绕丰富的本地生活电商场景，建设从基础通用到细分领域的视觉技术能力，包括：视觉生成大模型、多模交互虚拟人，助力营销创意生产和商家低成本直播；文档、商品、安全多模态大模型，助力商家开店经营、平台商品治理和违规账号治理；人脸识别、文字识别、细粒度图像分析、高性能检测分割、街景理解，成为公司基础设施能力。曾开源行业最大规模<a href=\"http://123.57.42.89/FoodProject.html\">食品图像数据集Food2K</a>被全球各地区上百家机构使用，<a href=\"https://github.com/meituan/YOLOv6\">目标检测框架YOLOV6</a>荣登2023年度世界开源贡献榜，获得10+项国际竞赛冠军，上百项发明专利，60+篇顶会顶刊论文。曾与国内多家知名科研机构合作，多次获得省部级科技进步奖项。</p>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "69985771c7de",
      "blog_name": "潮流周刊",
      "title": "第226期 - 我爱南京",
      "link": "https://weekly.tw93.fun/posts/226-%E6%88%91%E7%88%B1%E5%8D%97%E4%BA%AC/",
      "published": "2025-06-23T00:00:00",
      "timestamp": 1750608000,
      "summary": "<img src=\"https://cdn.fliggy.com/uPic/22722.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍于买的南京市民李先生家的我爱南京 T 恤，终于绿色款有货了，立马下单，期待下次穿着去南京 1701。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>Dia 终于可以使用了</strong><br>\n<a href=\"https://www.diabrowser.com/\">https://www.diabrowser.com/</a><br>\n永远不要怀疑 ARC 团队的设计，这个之前被炒的比较火的 AI 新浏览器开始开放给原有 arc 的用户使用了，有兴趣小伙伴可以试试看，我愿称为漂亮的 AI Chrome 浏览器。<br>\n<img src=\"https://cdn.fliggy.com/uPic/CYpjWT22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Piko 这个 revanced-patches for twitter</strong><br>\n<a href=\"https://github.com/crimera/piko\">https://github.com/crimera/piko</a><br>\n假如你用 Android 手机，刚好觉得 X 的客户端不好用，哈哈，那可以试试 piko 这个 revanced-patches for twitter，github 上可以搜索到对应的安装包，可以移除广告、保留小蓝鸟、移除很多乱七八糟的东西、可使用系统字体、下载视频、隐藏掉一切你感觉不喜欢的东西，非常好用，非常清晰。<br>\n<img src=\"https://cdn.fliggy.com/uPic/Y2AUgH22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>开源的 Google Analytics 替代工具 Rybbit</strong><br>\n<a href=\"https://www.rybbit.io/\">https://www.rybbit.io/</a><br>\n这个开源的 Google Analytics 替代工具 Rybbit 做得很好看，轻量、无cookie 的网页及产品分析工具，可以简单自己部署使用。<br>\n<img src=\"https://cdn.fliggy.com/uPic/sAgTJK22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Opik：开源的 LLM 评估平台</strong><br>\n<a href=\"https://www.comet.com/docs/opik/\">https://www.comet.com/docs/opik/</a><br>\n其实 AI 在企业级应用的场景，并不是简单写好可以跑起来就够，反而更重要的是高效的效果迭代和评估，对于工程而言更重要做的是如何在这个生命周期让使用者可以更快的实验和优化效果迭代上线，可以研究一下 Opik 这个开源工具。<br>\n<img src=\"https://cdn.fliggy.com/uPic/QB9Zeb22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一个现代的、轻量级的开源 CAPTCHA 替代方案 Cap</strong><br>\n<a href=\"https://capjs.js.org/\">https://capjs.js.org/</a><br>\n一个现代的、轻量级的开源 CAPTCHA 替代方案 Cap，速度很快，用于网站上验证是否真人在操作，效果如截图，可以自己部署。<br>\n<img src=\"https://cdn.fliggy.com/uPic/qlEz4222.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>Twitter 公布的这个时间线推荐算法</strong><br>\n<a href=\"https://blog.x.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm\">https://blog.x.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm</a><br>\nTwitter 公布的这个时间线推荐算法居然都过去了两年了，一个推荐算法将每天发布的约 5 亿条推文提炼成最终显示在你软件上，为你量身推荐的时间线上的少量顶级推文，这个文章就是介绍了算法是如何为你的时间线选择推文的，对于玩 Twitter 的小伙伴也可以研究下。<br>\n<img src=\"https://cdn.fliggy.com/uPic/TdVCaP22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一份 CS 论文格式、结构、呈现方式的检查清单指南</strong><br>\n<a href=\"https://github.com/yzhao062/cs-paper-checklist\">https://github.com/yzhao062/cs-paper-checklist</a><br>\n一份 CS 论文格式、结构、呈现方式的检查清单指南，根据作者自己沉淀出来的一些实际的经验，非常适合会议/期刊投稿场景，基于此提供具体的提醒，以及常见被拒绝的坑说得挺清楚的。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SsticD22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "content": "<img src=\"https://cdn.fliggy.com/uPic/22722.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍于买的南京市民李先生家的我爱南京 T 恤，终于绿色款有货了，立马下单，期待下次穿着去南京 1701。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>Dia 终于可以使用了</strong><br>\n<a href=\"https://www.diabrowser.com/\">https://www.diabrowser.com/</a><br>\n永远不要怀疑 ARC 团队的设计，这个之前被炒的比较火的 AI 新浏览器开始开放给原有 arc 的用户使用了，有兴趣小伙伴可以试试看，我愿称为漂亮的 AI Chrome 浏览器。<br>\n<img src=\"https://cdn.fliggy.com/uPic/CYpjWT22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Piko 这个 revanced-patches for twitter</strong><br>\n<a href=\"https://github.com/crimera/piko\">https://github.com/crimera/piko</a><br>\n假如你用 Android 手机，刚好觉得 X 的客户端不好用，哈哈，那可以试试 piko 这个 revanced-patches for twitter，github 上可以搜索到对应的安装包，可以移除广告、保留小蓝鸟、移除很多乱七八糟的东西、可使用系统字体、下载视频、隐藏掉一切你感觉不喜欢的东西，非常好用，非常清晰。<br>\n<img src=\"https://cdn.fliggy.com/uPic/Y2AUgH22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>开源的 Google Analytics 替代工具 Rybbit</strong><br>\n<a href=\"https://www.rybbit.io/\">https://www.rybbit.io/</a><br>\n这个开源的 Google Analytics 替代工具 Rybbit 做得很好看，轻量、无cookie 的网页及产品分析工具，可以简单自己部署使用。<br>\n<img src=\"https://cdn.fliggy.com/uPic/sAgTJK22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Opik：开源的 LLM 评估平台</strong><br>\n<a href=\"https://www.comet.com/docs/opik/\">https://www.comet.com/docs/opik/</a><br>\n其实 AI 在企业级应用的场景，并不是简单写好可以跑起来就够，反而更重要的是高效的效果迭代和评估，对于工程而言更重要做的是如何在这个生命周期让使用者可以更快的实验和优化效果迭代上线，可以研究一下 Opik 这个开源工具。<br>\n<img src=\"https://cdn.fliggy.com/uPic/QB9Zeb22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一个现代的、轻量级的开源 CAPTCHA 替代方案 Cap</strong><br>\n<a href=\"https://capjs.js.org/\">https://capjs.js.org/</a><br>\n一个现代的、轻量级的开源 CAPTCHA 替代方案 Cap，速度很快，用于网站上验证是否真人在操作，效果如截图，可以自己部署。<br>\n<img src=\"https://cdn.fliggy.com/uPic/qlEz4222.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>Twitter 公布的这个时间线推荐算法</strong><br>\n<a href=\"https://blog.x.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm\">https://blog.x.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm</a><br>\nTwitter 公布的这个时间线推荐算法居然都过去了两年了，一个推荐算法将每天发布的约 5 亿条推文提炼成最终显示在你软件上，为你量身推荐的时间线上的少量顶级推文，这个文章就是介绍了算法是如何为你的时间线选择推文的，对于玩 Twitter 的小伙伴也可以研究下。<br>\n<img src=\"https://cdn.fliggy.com/uPic/TdVCaP22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一份 CS 论文格式、结构、呈现方式的检查清单指南</strong><br>\n<a href=\"https://github.com/yzhao062/cs-paper-checklist\">https://github.com/yzhao062/cs-paper-checklist</a><br>\n一份 CS 论文格式、结构、呈现方式的检查清单指南，根据作者自己沉淀出来的一些实际的经验，非常适合会议/期刊投稿场景，基于此提供具体的提醒，以及常见被拒绝的坑说得挺清楚的。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SsticD22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "5a315c6947c7",
      "blog_name": "美团技术团队",
      "title": "JDK高版本特性总结与ZGC实践",
      "link": "https://tech.meituan.com/2025/06/20/jdk17-zgc.html",
      "published": "2025-06-20T00:00:00+00:00",
      "timestamp": 1750377600,
      "summary": "美团信息安全技术团队核心服务升级JDK 17后，性能与稳定性大幅提升，机器成本降低了10%。高版本JDK与ZGC技术令人惊艳，且Java AI SDK最低支持JDK 17。本文总结了JDK 17的主要特性，然后重点分享了JDK 17+ZGC在安全领域的一些实践，希望能对大家有所帮助或启发。",
      "content": "\n<blockquote><p>美团信息安全技术团队核心服务升级JDK 17后，性能与稳定性大幅提升，机器成本降低了10%。高版本JDK与ZGC技术令人惊艳，且Java AI SDK最低支持JDK 17。本文总结了JDK 17的主要特性，然后重点分享了JDK 17+ZGC在安全领域的一些实践，希望能对大家有所帮助或启发。</p></blockquote><p>从一句调侃的话 “你发任你发，我用Java 8！” 可以看出，在开发新项目时，Java 8依然是大家的首选。美团Java 8服务占比超过70%，可以说Java 8依然是绝对的主流。但是，我们在多个核心服务上遇到较多的性能问题，这些问题无法通过JVM参数微调来解决，为此我们对部分核心服务使用了 JDK 17，升级后服务性能和稳定性指标也得到巨大的飞跃，同时机器成本可以下降约10%，升级JDK版本收益十分明显。另外，目前正处在AI时代的爆发期，Java AI SDK的最小支持版本为JDK 17，这让升级JDK版本变得更具价值。接下来，期望跟大家一起探索JDK高版本和ZGC技术的奥秘，开启优化Java应用的新征程。</p><h2>1. JDK 17的主要特性</h2><blockquote><p>包含JDK 9~17等中间版本的特性。</p></blockquote><p>从 JDK 8 直接升级到 JDK 17，以下是需要重点关注的特性，这些特性对开发效率、代码风格、性能优化和安全性都有显著影响。</p><h3>1.1 语言特性[1]</h3><h4>1.1.1 局部变量类型推断</h4><p>使用var关键字来声明局部变量，而无需显式指定变量的类型。在Java 17中，可以使用局部变量类型推断的扩展来编写更简洁的代码。其他语言如Golang很早就支持了var变量。</p><pre><code>// JDK8\nString str = \"Hello world\";\n\n// JDK17\nvar str = \"Hello world\";\n</code></pre><blockquote><p>需要注意的是，var类型的局部变量仍然具有静态类型，一旦被推断出来，类型就会固定下来，并且不能重新赋值为不兼容的类型。</p></blockquote><h4>1.1.2 密封类</h4><p>它允许我们将类或接口的继承限制为一组有限的子类。如果想将类或接口的继承限制为一组有限的子类时，这非常有用。在下面的示例中，可以看到我们如何使用sealed关键字将类的继承限制为一组有限的子类。我们可以通过在类的声明前加上sealed关键字来将该类声明为密封类。然后，可以使用permits关键字列出该密封类允许继承的子类。这些子类必须直接或间接地继承自密封类。这样，只有在这个预定义的子类中，才能继承该密封类。</p><pre><code>//使用permits关键字列出了允许继承的子类Circle、Rectangle和Triangle\npublic sealed class Shape permits Circle, Rectangle, Triangle {\n    // 省略实现\n}\n\n// 在与密封类相同的模块或包中 定义以下三个允许的子类， Circle，Square和：Rectangle\npublic final class Circle extends Shape {\n    public float radius;\n}\n \npublic non-sealed class Square extends Shape {\n   public double side;\n}   \n \npublic sealed class Rectangle extends Shape permits FilledRectangle {\n    public double length, width;\n}\n</code></pre><h4>1.1.3 Record 类</h4><p>Record 类的主要目的是提供一种更简洁、更安全的方式来定义不可变的数据载体类。它自动实现了常见的方法（如<code>equals()</code>、<code>hashCode()</code>、<code>toString()</code>和构造函数），从而减少了样板代码。</p><p><strong>特点</strong></p><ol><li><strong>不可变性</strong>：Record类的字段默认是<code>final</code>的，因此 Record 类是不可变的。</li><li><strong>简洁性</strong>：Record类自动提供了构造函数、<code>equals()</code>、<code>hashCode()</code>和<code>toString()</code>方法，无需手动编写。</li><li><strong>组件访问</strong>：Record类的字段可以通过<code>recordName.fieldName</code>的方式直接访问。</li><li><strong>模式匹配</strong>：Record类支持模式匹配（Pattern Matching），可以与<code>instanceof</code>和<code>switch</code>表达式结合使用。</li></ol><p>Record类的定义非常简单，只需要使用<code>record</code>关键字，并声明字段类型和名称即可。例如：</p><pre><code>// 这里有一个包含两个字段的记录类\nrecord Rectangle(double length, double width) { }\n\n// 这个简洁的矩形声明等同于以下普通类\npublic final class Rectangle {\n    private final double length;\n    private final double width;\n\n    public Rectangle(double length, double width) {\n        this.length = length;\n        this.width = width;\n    }\n\n    double length() { return this.length; }\n    double width()  { return this.width; }\n\n    // ...\n    public boolean equals...\n    public int hashCode...\n\n    // ...\n    public String toString() {...}\n}\n</code></pre><h4>1.1.4 switch表达式优化</h4><p>在Java 17中使用switch表达式时，不必使用关键字break来跳出switch语句，或return在每个switch case上使用关键字来返回值；相反，我们可以返回整个switch表达式。这种增强的switch表达式使整体代码看起来更清晰，更易于阅读。switch打印一周中某一天的字母数量的语句。</p><p><strong>JDK 8</strong></p><pre><code>public enum Day { SUNDAY, MONDAY, TUESDAY,\n    WEDNESDAY, THURSDAY, FRIDAY, SATURDAY; }\n\n\t\t// ...\n\n    int numLetters = 0;\n    Day day = Day.WEDNESDAY;\n    switch (day) {\n        case MONDAY:\n        case FRIDAY:\n        case SUNDAY:\n            numLetters = 6;\n            break;\n        case TUESDAY:\n            numLetters = 7;\n            break;\n        case THURSDAY:\n        case SATURDAY:\n            numLetters = 8;\n            break;\n        case WEDNESDAY:\n            numLetters = 9;\n            break;\n        default:\n            throw new IllegalStateException(\"Invalid day: \" + day);\n    }\n    System.out.println(numLetters);\n</code></pre><p><strong>JDK 17</strong></p><pre><code>\t\tDay day = Day.WEDNESDAY;    \n    System.out.println(\n        switch (day) {\n            case MONDAY, FRIDAY, SUNDAY -&gt; 6;\n            case TUESDAY                -&gt; 7;\n            case THURSDAY, SATURDAY     -&gt; 8;\n            case WEDNESDAY              -&gt; 9;\n            default -&gt; throw new IllegalStateException(\"Invalid day: \" + day);\n        }\n    ); \n</code></pre><h4>1.1.5 文本块</h4><p>在不使用转义序列的情况下创建多行字符串。在创建SQL查询或JSON字符串时非常有用。在下面的示例中，可以看到使用文本块时代码看起来更加简洁。</p><pre><code>// JDK8\nString message = \"'The time has come,' the Walrus said,\\n\" +\n                 \"'To talk of many things:\\n\" +\n                 \"Of shoes -- and ships -- and sealing-wax --\\n\" +\n                 \"Of cabbages -- and kings --\\n\" +\n                 \"And why the sea is boiling hot --\\n\" +\n                 \"And whether pigs have wings.'\\n\";\n\n// 使用文本块可以消除大部分混乱：\nString message = \"\"\"\n    'The time has come,' the Walrus said,\n    'To talk of many things:\n    Of shoes -- and ships -- and sealing-wax --\n    Of cabbages -- and kings --\n    And why the sea is boiling hot --\n    And whether pigs have wings.'\n    \"\"\";\n</code></pre><p><strong>SQL注解描述</strong></p><pre><code>// JDK8    \n@Select(\"select distinct ta.host_name from tb_agent_info tai, tb_agent ta where 1=1 \" +\n        \"and ta.host_name=tai.host_name and ta.status=1 and ta.master=1 and tai.report_pid_count &gt; 0\")\nSet&lt;String&gt; queryAllJavaHost();\n\n// JDK17\n@Select(\"\"\"\n    SELECT DISTINCT ta.host_name\n    FROM tb_agent_info tai, tb_agent ta\n    WHERE 1=1\n      AND ta.host_name = tai.host_name\n      AND ta.status = 1\n      AND ta.master = 1\n      AND tai.report_pid_count &gt; 0\n \"\"\")\n Set&lt;String&gt; queryAllJavaHost2();\n</code></pre><ul><li><strong>可读性更强</strong>：文本结构清晰可见，无需处理转义字符或字符串连接。</li><li><strong>减少错误</strong>：不需要手动添加换行符（\\n），降低了出错的可能性。</li><li><strong>易于编辑</strong>：可以直接复制粘贴格式化好的JSON，而不需要额外的处理。</li><li><strong>保留缩进</strong>：文本块会保留的缩进，使得其在Java代码中的呈现更加美观。</li></ul><h4>1.1.6 模式匹配instanceof优化</h4><p>它允许将instanceof运算符用作返回已转换对象的表达式。当我们使用嵌套的if-else语句时，这非常有用。在下面的示例中，可以看到我们如何使用instanceof运算符来捕获对象，而不是进行显式转换。</p><p><strong>JDK 8</strong></p><pre><code>Object obj = ...;\n\nif (obj instanceof String) {\n    String str = (String) obj;\n    int length = str.length();\n    System.out.println(\"字符串长度：\" + length);\n}\n</code></pre><p><strong>JDK 17</strong></p><pre><code>Object obj = ...;\n\nif (obj instanceof String str) {\n    int length = str.length();\n    System.out.println(\"字符串长度：\" + length);\n}\n</code></pre><h4>1.1.7 NullPointerExceptions的优化</h4><p>对象空指针在日常开发中遇到的比较多，一般代码报错只能精确的某一行，如果该行的代码比较复杂，涉及到多个对象，往往不能直接确定是哪一个对象为空。</p><pre><code>public class NpeDemo { \n  public static void main(String[] args) { \n    Address address=new Address();\n    User user=new User();\n    user.setAddress(address);\n    log.info(user.getAddress().getCity().toLowerCase()); \n  }\n}\n</code></pre><p>上面代码中的第6行链式调用，如果某一个环节出现空指针，将会抛出空指针的异常：</p><pre><code>Exception in thread \"main\" java.lang.NullPointerException \n\t\tat NpeDemo.main(Main.java:6)\n</code></pre><p>使用JDK 17</p><pre><code>Exception in thread \"main\" java.lang.NullPointerException: \nCannot invoke \"String.toLowerCase()\" because the return value of \"Address.getCity()\" is null \n  at NpeDemo.main(Main.java:6)\n</code></pre><h4>1.1.8 集合、Stream和Optional的增强</h4><p>Java 在集合（Collections）、Stream API 和 Optional类方面引入了许多增强功能。主要有：</p><p><strong>集合增强</strong>：不可变集合： 引入了创建不可变集合的便捷方法，如List.of()、Set.of()和Map.of()。这些方法用于快速创建不可变集合，减少了代码量并提高了安全性。</p><pre><code>import java.util.*;\n\npublic class CollectionsDemo {\n    public static void main(String[] args) {\n        // 创建不可变list\n        List&lt;String&gt; list = List.of(\"Java\", \"Golang\", \"Python\");\n        // 创建不可变set\n        Set&lt;String&gt; set = Set.of(\"Java\", \"Golang\", \"Python\");\n        // 创建不可变map\n        Map&lt;String, Integer&gt; map = Map.of(\"Java\", 1, \"Golang\", 2, \"Python\", 3);\n    }\n}\n</code></pre><p><strong>集合工厂方法</strong>：Java 17还引入了集合工厂方法，如List.copyOf()、Set.copyOf() 和 Map.copyOf()，用于从现有集合创建不可变副本。</p><p><strong>Stream API增强</strong>：<code>takeWhile</code>和<code>dropWhile</code>：基于条件截取或跳过元素；<code>iterate</code>：支持终止条件的迭代；<code>ofNullable</code>：将可能为<code>null</code>的值转换为Stream。</p><p><strong>Optional增强</strong>： <code>ifPresentOrElse</code>：值存在时执行操作，否则执行另一个操作；<code>or</code>：在值不存在时提供替代值；<code>stream</code>：将<code>Optional</code>转换为Stream。</p><h3>1.2 新API和工具</h3><h4>1.2.1 新的HttpClient</h4><p>可以使用<code>HttpClient</code>使用来发送请求并检索其响应。 <code>HttpClient</code>可以通过<code>builder</code>来创建。该<code>newBuilder</code>方法返回一个构建器，用于创建默认<code>HttpClient</code>实现的实例。该构建器可用于配置每个客户端的状态，例如：首选协议版本（HTTP/1.1 或 HTTP/2）、是否遵循重定向、代理、身份验证器等。 构建完成后，<code>HttpClient</code>是不可变的，可用于发送多个请求。</p><pre><code>// 同步示例\nHttpClient client = HttpClient.newBuilder()\n        .version(Version.HTTP_1_1)\n        .followRedirects(Redirect.NORMAL)\n        .connectTimeout(Duration.ofSeconds(20))\n        .proxy(ProxySelector.of(new InetSocketAddress(\"proxy.example.com\", 80)))\n        .authenticator(Authenticator.getDefault())\n        .build();\n   HttpResponse&lt;String&gt; response = client.send(request, BodyHandlers.ofString());\n   System.out.println(response.statusCode());\n   System.out.println(response.body());  \n\n// 异步示例\nHttpRequest request = HttpRequest.newBuilder()\n        .uri(URI.create(\"https://foo.com/\"))\n        .timeout(Duration.ofMinutes(2))\n        .header(\"Content-Type\", \"application/json\")\n        .POST(BodyPublishers.ofFile(Paths.get(\"file.json\")))\n        .build();\n   client.sendAsync(request, BodyHandlers.ofString())\n        .thenApply(HttpResponse::body)\n        .thenAccept(System.out::println);  \n</code></pre><p>如果不希望引入三方依赖（三方依赖漏洞和Bug等需要经常升级），可以使用JDK提供的原生的httpClient API，适用场景<code>中间件</code>。</p><h4>1.2.2 打包工具jpackage[2]</h4><p>该工具将以Java应用程序和Java运行时镜像作为输入，生成包含所有必要依赖项的Java应用程序镜像。它能够生成特定平台格式的原生软件包，例如Windows上的exe文件或macOS上的dmg 文件。每种格式都必须在其运行的平台上构建，不支持跨平台。该工具将提供一些选项，允许以各种方式定制打包的应用程序。该工具最大特点是无需单独安装JDK环境，例如用JDK17写了一个MCP Server工具，直接打包为可执行文件安装即可，减少环境依赖安装。</p><h4>1.2.3 进程相关API[3]</h4><p>进程管理功能得到了显著增强，<code>ProcessHandle</code>提供了更强大的功能来创建、监控和管理本地进程。这些改进使得Java程序能够更灵活地与操作系统交互，同时提供了更详细的进程信息和更强大的生命周期管理功能。</p><p><strong>1.创建进程</strong></p><p>在Java中，创建新进程通常使用<code>ProcessBuilder</code>或<code>Runtime.getRuntime().exec()</code>。而Java 17上<code>ProcessHandle</code>提供了更强大的功能来管理这些进程。</p><pre><code>ProcessBuilder pb = new ProcessBuilder(\"echo\", \"Hello World!\");\nProcess p = pb.start();\n</code></pre><p><strong>2.监控进程</strong></p><pre><code>public class ProcessTest {\n\n  // ...\n\n  static public void startProcessesTest() throws IOException, InterruptedException {\n    List&lt;ProcessBuilder&gt; greps = new ArrayList&lt;&gt;();\n    greps.add(new ProcessBuilder(\"/bin/sh\", \"-c\", \"grep -c \\\"java\\\" *\"));\n    greps.add(new ProcessBuilder(\"/bin/sh\", \"-c\", \"grep -c \\\"Process\\\" *\"));\n    greps.add(new ProcessBuilder(\"/bin/sh\", \"-c\", \"grep -c \\\"onExit\\\" *\"));\n    ProcessTest.startSeveralProcesses (greps, ProcessTest::printGrepResults);      \n    System.out.println(\"\\nPress enter to continue ...\\n\");\n    System.in.read();  \n  }\n\n  static void startSeveralProcesses (\n    List&lt;ProcessBuilder&gt; pBList,\n    Consumer&lt;Process&gt; onExitMethod)\n    throws InterruptedException {\n    System.out.println(\"Number of processes: \" + pBList.size());\n    pBList.stream().forEach(\n      pb -&gt; {\n        try {\n          Process p = pb.start();\n          System.out.printf(\"Start %d, %s%n\",\n            p.pid(), p.info().commandLine().orElse(\"&lt;na&gt;\"));\n          p.onExit().thenAccept(onExitMethod);\n        } catch (IOException e) {\n          System.err.println(\"Exception caught\");\n          e.printStackTrace();\n        }\n      }\n    );\n  }\n  \n  static void printGrepResults(Process p) {\n    System.out.printf(\"Exit %d, status %d%n%s%n%n\",\n      p.pid(), p.exitValue(), output(p.getInputStream()));\n  }\n\n  private static String output(InputStream inputStream) {\n    String s = \"\";\n    try (BufferedReader br = new BufferedReader(new InputStreamReader(inputStream))) {\n      s = br.lines().collect(Collectors.joining(System.getProperty(\"line.separator\")));\n    } catch (IOException e) {\n      System.err.println(\"Caught IOException\");\n      e.printStackTrace();\n    }\n    return s;\n  }\n\n  // ...\n}\n</code></pre><p><strong>3.获取进程信息</strong></p><pre><code>public static void getInfoTest() throws IOException {\n        ProcessBuilder pb = new ProcessBuilder(\"echo\", \"Hello World!\");\n        String na = \"&lt;not available&gt;\";\n        Process p = pb.start();\n        ProcessHandle.Info info = p.info();\n        System.out.printf(\"Process ID: %s%n\", p.pid());\n        System.out.printf(\"Command name: %s%n\", info.command().orElse(na));\n        System.out.printf(\"Command line: %s%n\", info.commandLine().orElse(na));\n\n        System.out.printf(\"Start time: %s%n\",\n            info.startInstant().map((Instant i) -&gt; i\n                .atZone(ZoneId.systemDefault()).toLocalDateTime().toString())\n                .orElse(na));\n\n        System.out.printf(\"Arguments: %s%n\",\n            info.arguments().map(\n                (String[] a) -&gt; Stream.of(a).collect(Collectors.joining(\" \")))\n                .orElse(na));\n\n        System.out.printf(\"User: %s%n\", info.user().orElse(na));\n}\n\n输出\nProcess ID: 18761\nCommand name: /usr/bin/echo\nCommand line: echo Hello World!\nStart time: 2017-05-30T18:52:15.577\nArguments: &lt;not available&gt;\nUser: administrator\n</code></pre><h4>1.2.4 AI工具最低版本为JDK17</h4><p>最近火热的AI大模型工具，JDK 8不再兼容，运行的最低版本为JDK 17，例如Spring AI工具。</p><h3>1.3 性能优化与Bug修复</h3><h4>1.3.1 垃圾回收器改进ZGC</h4><p>ZGC作为新一代的垃圾回收器，主要目标：</p><ul><li>支持TB级内存</li><li>停顿时间控制在10ms之内</li><li>对程序吞吐量影响小于15%</li></ul><p>据官方测评数据，在内存为128GB的机器上，相比于G1来说，性能提高30%，停顿时间减少99%。</p><h4>1.3.2 NIO 重写与优化</h4><ul><li><strong>支持Unix-Domain套接字</strong>：在JDK8上如果想要使用UDS，一般使用Netty或者开源的Juds库，JDK 17支持了该功能，无需使用第三方库；</li><li><strong>文件通道的优化</strong>：可以将文件的某个区域直接映射到内存中，从而实现高效的读写操作。这种方式利用了操作系统的内存映射机制，减少了I/O操作的开销；</li><li><strong>零拷贝支持</strong>：允许数据直接从磁盘的一个位置复制到另一个位置，而无需经过用户态内存。这减少了数据在用户态和内核态之间的拷贝次数，从而显著提高了性能。</li></ul><h4>1.3.3 Java SDK模块化设计</h4><p>JVM的模块化是Java 9引入的一个重要特性，通过Java Platform Module System (JPMS) 实现。这一特性旨在解决Java应用在可扩展性和维护上的问题，提供更高级别的封装和依赖管理机制。</p><ul><li><strong>减少环境资源开销</strong>：在JDK 9之前，每次启动JVM都要耗费至少30MB到60MB的内存空间，因为JVM需要加载整个rt.jar。模块化允许JVM选择性地加载必需的模块，从而减少内存占用。</li><li><strong>提升开发效率和运行速度</strong>：随着代码库的复杂性增加，开发效率和运行速度会受到影响。模块化通过规范化路径和依赖关系，使系统更安全、更高效。</li><li><strong>规范化路径及依赖关系</strong>：JDK 9之前，系统没有对不同JAR之间的依赖或敏感路径进行限制，导致所有JAR都可以被访问，暴露了安全问题。模块化通过管理模块间的依赖关系，隐藏不必要的模块，提高了安全性和空间利用率。</li></ul><h4>1.3.4 Java Agent机制的Attach Bug修复</h4><p>Java Attach Socket文件被删除后会导致Java Agent注入失败，在JDK 8上只能通过重启解决，而JDK 17会重新创建一个新的文件。</p><h4>1.3.5 弹性元空间[4]</h4><p>更及时地将未使用的元空间内存回收，减少元空间占用的内存。</p><h2>2. JDK17+ZGC在安全领域的实践</h2><h3>2.1 美团JDK的现状</h3><p>在美团信息安全部，JDK8（Oracle JDK8u201）依然是主流版本，其次是Open JDK17，剩下为Open JDK 11。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/95ae6ec72bf744c4bf5662a8a92b2a5682808.png\"></p><h3>2.2 ZGC适用场景</h3><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/246516d6be843bb50567589d65ef2ad7131919.png\"></p><ul><li>服务器成本压力大：服务器数量大于100台、单机配置大于16C16G、Java堆内存超过16G等。</li><li>单机CPU高：峰值大约在50%</li></ul><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/20fe691b4e863ddc95a1e564b4b774be710374.png\"></p><ul><li>性能火焰图中GC占比高</li><li>高峰期故障雷达、监控大盘和服务日志等告警频繁</li></ul><h3>2.3 ZGC效果</h3><h4>2.3.1 性能压测效果</h4><p>在测试服务不同接口中，ZGC在高QPS场景中收益较大（服务的QPS超过1万）：</p><ul><li><strong>TP9999</strong>：下降220~380ms，下降幅度18%~74%。</li><li><strong>TP999</strong>：下降60-125ms，下降幅度10%~63%。</li><li><strong>TP99</strong>：下降 3ms-20ms，下降幅度0%-25%。</li></ul><p>一些重度依赖外部的接口中性能优化不大，原因是这些服务的响应时间瓶颈不是GC，而是外部依赖的性能，在一些低QPS接口中对比不太明显。</p><h4>2.3.2 案例1：智能决策系统（JDK 11+ZGC 升级到JDK 17+ZGC）</h4><p><strong>峰值cpu.busy指标下降</strong></p><p>升级前: 47.8565%</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/69598308ba975071fafc30ce2fde85f6623326.png\"></p><p>升级后: 41.4933%</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/163685ee9192f8e7da8feafabf8fce27634614.png\"></p><p><strong>系统长期运行时TP9999性能稳定</strong></p><p>运行15天，JDK11机器长时间不重启三九、四九线会逐渐升高，JDK 17机器较为稳定。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/326cfefbf51fed01d0f228471488dc91565378.png\"></p><p><strong>服务失败率显著降低</strong></p><p>UGC集群升级效果：错误数量由峰值6000下降到349。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/734ce277d6e79f0ca775a2038cc96767474297.png\"></p><p><strong>JVM元空间使用降低</strong></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/3eec6b20fd97902c872a44ba7a7cec20533830.png\"></p><p><strong>单机维度高峰期性能指标</strong></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/e25f60e5f16a223f0faf57c2a7c49b6759831.png\"></p><h4>2.3.3 案例2：内容安全核心服务 (JDK 8+CMS升级到JDK 17+ZGC）</h4><p>该服务是内容安全的代理层，主要负责匹配请求的分发、辅助功能支撑（日志、监控、熔断）以及一些个性化业务需求。当前该服务GC是CMS，该服务线上的Young GC平均耗时是17ms，平均每分钟GC次数是6次，该服务接口平均响应时间是2.6ms。</p><p>根据文章《<a href=\"https://tech.meituan.com/2017/12/29/jvm-optimize.html\">从实际案例聊聊Java应用的GC优化</a>》中提供的计算方式，受到Young GC影响的请求占比是：</p><p>$$受GC影响请求占比 = \\frac{N * \\left ( GC时间 + 接口响应时间 \\right ) }{T} = \\frac{6 * \\left ( 17 + 2.6 \\right ) }{60000} = 0.196\\%$$</p><p>即有0.196%的请求收到GC时间0-17ms不等的影响。其中收到GC停顿完整影响的请求占比：</p><p>$$受GC完整影响请求占比 = \\frac{N * \\left (接口响应时间 \\right ) }{T} = \\frac{6 * 2.6}{60000} = 0.026\\%$$</p><p>即其中有0.026%的请求受到完整的GC停顿时间影响，即耗时增加17ms，可以大致理解为请求响应的9999线会因GC停顿而导致17ms的上涨。</p><p>根据ZGC的STW的耗时在毫秒甚至亚毫秒级别，因此理论上升级后服务的9999线可以降低17ms左右。在实际生产中，还会有Full GC的影响，会带来耗时的进一步提升，ZGC在该部分可以避免Full GC带来的影响。</p><p>服务升级采用的是Tomcat 9+JDK 17的配置，录制线上流量进行压测，使用同样的流量对先前采用CMS垃圾回收的以及采用ZGC垃圾回收方式的同时进行压测。服务器配置均为8C16G，800QPS的压测，通过2h左右的压测，</p><p><strong>分析接口耗时统计</strong>：可得到以下数据，发现耗时均有明显下降，9999线的下降量低于理论的17ms，由于实际环境中其他因素的影响也基本符合预期。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/2b39d85474a2c2e9c000f0664473db1c2117542.png\"></p><p>分析CPU和JVM占用情况：CPU和JVM占用情况发现，CPU占用在峰值处会提升10%左右，JVM占用情况基本一致。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/0a9fc4bd77e11aea18690d9c5cbdb14f1614369.png\"></p><h3>2.4 ZGC实现原理简介</h3><blockquote><p>更多详情，可参考《<a href=\"https://tech.meituan.com/2020/08/06/new-zgc-practice-in-meituan.html\">新一代垃圾回收器ZGC的探索与实践</a>》一文。</p></blockquote><h4>2.4.1 CMS与G1停顿时间瓶颈</h4><p>在介绍ZGC之前，首先回顾一下CMS和G1的GC过程以及停顿时间的瓶颈。CMS新生代的Young GC、G1和ZGC都基于标记-复制算法，但算法具体实现的不同就导致了巨大的性能差异。</p><p>标记-复制算法应用在CMS新生代（ParNew是CMS默认的新生代垃圾回收器）和G1垃圾回收器中。标记-复制算法可以分为三个阶段：</p><ul><li><strong>标记阶段</strong>，即从GC Roots集合开始，标记活跃对象；</li><li><strong>转移阶段</strong>，即把活跃对象复制到新的内存地址上；</li><li><strong>重定位阶段</strong>，因为转移导致对象的地址发生了变化，在重定位阶段，所有指向对象旧地址的指针都要调整到对象新的地址上。</li></ul><p>下面以G1为例，通过G1中标记-复制算法过程（G1的Young GC和Mixed GC均采用该算法），分析G1停顿耗时的主要瓶颈。G1垃圾回收周期如下图所示：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/65a7a00640c062f4f8d2166a2c2a3d4d297185.png\"></p><p>G1的混合回收过程可以分为标记阶段、清理阶段和复制阶段：</p><p><strong>标记阶段停顿分析</strong></p><ul><li><strong>初始标记阶段</strong>：初始标记阶段是指从根节点（GC Roots）出发标记全部直接子节点的过程，该阶段是STW的。由于GC Roots数量不多，通常该阶段耗时非常短。</li><li><strong>并发标记阶段</strong>：并发标记阶段是指从GC Roots开始对堆中对象进行可达性分析，找出存活对象。该阶段是并发的，即应用线程和GC线程可以同时活动。并发标记耗时相对长很多，但因为不是STW，所以我们不太关心该阶段耗时的长短。</li><li><strong>再标记阶段</strong>：重新标记那些在并发标记阶段发生变化的对象。该阶段是STW的。</li></ul><p><strong>清理阶段停顿分析</strong></p><ul><li>清理阶段清点出有存活对象的分区和没有存活对象的分区，该阶段不会清理垃圾对象，也不会执行存活对象的复制。该阶段是STW的。</li></ul><p><strong>复制阶段停顿分析</strong></p><ul><li>复制算法中的转移阶段需要分配新内存和复制对象的成员变量。转移阶段是STW的，其中内存分配通常耗时非常短，但对象成员变量的复制耗时有可能较长，这是因为复制耗时与存活对象数量与对象复杂度成正比。对象越复杂，复制耗时越长。</li></ul><p>四个STW过程中，初始标记因为只标记GC Roots，耗时较短。再标记因为对象数少，耗时也较短。清理阶段因为内存分区数量少，耗时也较短。转移阶段要处理所有存活的对象，耗时会较长。因此，G1停顿时间的瓶颈主要是标记-复制中的转移阶段STW。为什么转移阶段不能和标记阶段一样并发执行呢？主要是G1未能解决转移过程中准确定位对象地址的问题。</p><h4>2.4.2 ZGC原理</h4><p>与CMS中的ParNew和G1类似，ZGC也采用标记-复制算法，不过ZGC对该算法做了重大改进：<strong>ZGC在标记、转移和重定位阶段几乎都是并发的</strong>，这是ZGC实现停顿时间小于10ms目标的最关键原因。</p><p>ZGC垃圾回收周期如下图所示：</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/d1b4250a811fc2a12834ed2aef771ae9228449.png\"></p><p>ZGC只有三个STW阶段：<strong>初始标记，再标记，初始转移</strong>。其中，初始标记和初始转移分别都只需要扫描所有GC Roots，其处理时间和GC Roots的数量成正比，一般情况耗时非常短；再标记阶段STW时间很短，最多1ms，超过1ms则再次进入并发标记阶段。即，ZGC几乎所有暂停都只依赖于GC Roots集合大小，停顿时间不会随着堆的大小或者活跃对象的大小而增加。与ZGC对比，G1的转移阶段完全STW的，且停顿时间随存活对象的大小增加而增加。</p><h4>2.4.3 主要特点</h4><ul><li><strong>单代</strong>：ZGC没有分代，基于“大部分对象朝生夕死”的假设，没有Young GC的概念（这里仅指JDK 17，JDK 21支持分代回收，性能更高）。</li><li><strong>基于Region</strong>： G1的每个Region大小是完全一样的，而ZGC的Region更灵活，其中大型Region大小不固定,可以动态变化，也不会被重分配，因为复制一个大对象代价太高。</li><li><strong>部分压缩</strong>： 基于Region，“标记-整理”，相对CMS压缩时间更短。</li><li><strong>支持NUMA</strong>： 对应有UMA，每个CPU对应有一块内存，每个CPU优先访问这块内存。</li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/4ab3968f4fc1bde8f3ad2f9d7721fbb5616562.png\"></p><ul><li><strong>染色指针</strong></li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/5a139524cf8db198ec9f6ad1af43e56b123607.png\"></p><p>以前的垃圾回收器的GC信息都保存在对象头中，ZGC将GC 信息保存在了染色指针上,无需进行对象访问就可以获得GC 信息。这就是ZGC在标记和转移阶段速度更快的原因。Marked0、Marked1和Remapped这三个虚拟内存作为ZGC的三个视图空间，在同一个时间点内只能有一个有效。ZGC就是通过这三个视图空间的切换，来完成并发的垃圾回收。</p><ul><li>读屏障</li></ul><p>读屏障，在标记和移动对象的阶段，每次从堆里对象的引用类型中读取一个指针的时候，都需要加上一个Load Barriers。用于确定对象的引用地址是否满足条件，并作出相应动作。</p><h2>3. JDK 17升级实践过程</h2><p>主要分为三个阶段：安装部署、解决兼容性问题、性能测试与参数优化。</p><blockquote><p>如果公司的中间件大部分基于JDK 8，工程代码编译可以基于JDK 8，运行环境使用JDK 17。</p></blockquote><h3>3.1 安装与兼容性问题</h3><p><strong>1.主要的问题举例</strong></p><p>JVM运行的报错信息：module java.base does not “opens java.util.concurrent.locks” to unnamed module</p><pre><code>[ERROR] main JsonUtil Json parse failed\njava.lang.reflect.InaccessibleObjectException: Unable to make field private final java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock java.util.concurrent.locks.ReentrantReadWriteLock.readerLock accessible: module java.base does not \"opens java.util.concurrent.locks\" to unnamed module @1ba9117e\n\tat java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:354)\n\tat java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)\n\tat java.base/java.lang.reflect.Field.checkCanSetAccessible(Field.java:178)\n\tat java.base/java.lang.reflect.Field.setAccessible(Field.java:172)\n\tat com.fasterxml.jackson.databind.util.ClassUtil.checkAndFixAccess(ClassUtil.java:939)\n\tat com.fasterxml.jackson.databind.deser.impl.FieldProperty.fixAccess(FieldProperty.java:104)\n</code></pre><p><strong>2.原因</strong>：JDK9之后Java API使用了模块化设计方案，用户模块无法反射调用Java代码，需要使用开启对应模块访问权限（没有引入新的安全问题，相当于没有用模块隔离的功能）。</p><p><strong>3.解决方式</strong>：　JVM参数增加如下：</p><pre><code>--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.math=ALL-UNNAMED --add-opens java.base/java.net=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.security=ALL-UNNAMED --add-opens java.base/java.text=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED --add-opens java.base/java.util.concurrent.locks=ALL-UNNAMED --add-opens java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens java.base/jdk.internal.access=ALL-UNNAMED --add-opens java.base/jdk.internal.misc=ALL-UNNAMED\n</code></pre><p>其他软件等兼容性问题，根据自身服务报错，对应解决问题。</p><h3>3.2 性能压测</h3><ul><li><strong>基准</strong>： JDK 8+CMS</li><li><strong>压测</strong>：实验组和对照组压测后重启避免性能优化为结果影响并取平均值</li><li><strong>指标监控</strong>： 峰值CPU、平均CPU、TP9999、报错数量、GC总时间和次数、JVM堆内存和元空间变化等</li><li><strong>其他</strong>：性能火焰图</li></ul><h3>3.3 JVM参数</h3><ul><li>-Xmx18g -Xms18g 堆大小</li><li>-XX:MaxDirectMemorySize=2G 直接内存</li><li>-XX:+HeapDumpOnOutOfMemoryError 当JVM发生OOM时，自动生成DUMP文件。</li><li>-XX:ReservedCodeCacheSize=256m -XX:InitialCodeCacheSize=256m 设置codecache大小 默认128m</li><li>-XX:+UseZGC 使用ZGC</li><li>-XX:ZAllocationSpikeTolerance=2 ZGC触发自适应算法的修正系数，默认2，数值越大，越早的触发ZGC</li><li>-XX:ZCollectionInterval=0 ZGC的周期。默认值为0，表示不需要触发垃圾回收。固定周期垃圾回收。ZGC发生的最小时间间隔，单位秒</li><li>-XX:ConcGCThreads=4 并发阶段的GC线程数，默认是总核数的12.5%</li><li>-XX:ZStatisticsInterval=10 控制统计信息输出的间隔，默认10s</li><li>-XX:ParallelGCThreads=16 并行工作线程数据，STW阶段使用线程数，默认是总核数的60%</li><li>-Xlog:safepoint,classhisto<em>=trace,age</em>,gc*=info:file=/opt/logs/logs/gc-%t.log:time,tid,tags:filecount=5,filesize=50m’ 设置GC日志中的内容、格式、位置以及每个日志的大小</li></ul><p>本服务prod机器16c，16g成功运行起来的JVM参数（还在调整中，仅供参考）：</p><pre><code>-server -Xmx12g -Xms12g -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions -XX:+UseZGC -XX:+UseDynamicNumberOfGCThreads -XX:ConcGCThreads=3 -XX:ParallelGCThreads=8 -XX:ZCollectionInterval=130 -XX:ZAllocationSpikeTolerance=1 -XX:MaxDirectMemorySize=460m -XX:MetaspaceSize=330m -XX:MaxMetaspaceSize=330m -XX:ReservedCodeCacheSize=256m -XX:InitialCodeCacheSize=256m -XX:+UseCountedLoopSafepoints -XX:+SafepointTimeout -XX:SafepointTimeoutDelay=500 -XX:GuaranteedSafepointInterval=0 -XX:+DisableExplicitGC -XX:+HeapDumpOnOutOfMemoryError -XX:ZStatisticsInterval=130 -XX:+PrintGCDetails -Xlog:safepoint,class+load=info,class+unload=info,classhisto*=trace,age*,gc*=info:file=/opt/logs/logs/gc-%t.log:time,tid,tags:filecount=5,filesize=50m --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED --add-opens java.base/java.math=ALL-UNNAMED --add-opens java.base/java.net=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.security=ALL-UNNAMED --add-opens java.base/java.text=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.util.concurrent=ALL-UNNAMED --add-opens java.base/java.util.concurrent.locks=ALL-UNNAMED --add-opens java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens java.base/jdk.internal.access=ALL-UNNAMED --add-opens java.base/jdk.internal.misc=ALL-UNNAMED --add-opens java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED --add-opens java.base/jdk.internal.perf=ALL-UNNAMED --add-opens java.base/java.instrument=ALL-UNNAMED --add-opens jdk.attach/sun.tools.attach=ALL-UNNAMED \n</code></pre><h2>4. 总结</h2><ul><li>ZGC作为新一代垃圾回收器，各项性能指标都比较突出，升级之后，机器成本和性能收益明显；</li><li>Spring AI SDK支持的JDK版本最小为17，升级到JDK 17能更好地拥抱AI新技术；</li><li>直接从JDK 8升级到JDK 17跨度较大，需要解决的兼容性问题较多，如果公司的基础组件不支持JDK 17，可以考虑先升级到JDK 11做一个过渡；</li><li>如果在升级与实践的过程中遇到了一些问题，可以结合AI大模型来给出解决方案，帮助提高升级效率。</li></ul><p><strong>注释</strong></p><ul><li>[1] <a href=\"https://docs.oracle.com/en/java/javase/17/language/java-language-changes-summary.html\">语言特性</a></li><li>[2] <a href=\"https://docs.oracle.com/en/java/javase/17/docs/specs/man/jpackage.html\">打包工具jpackage</a></li><li>[3] <a href=\"https://docs.oracle.com/en/java/javase/17/core/process-api1.html\">进程相关API</a></li><li>[4] <a href=\"https://openjdk.org/jeps/387\">弹性元空间</a></li><li>[5] TP999：指的是OctoService.TP999</li><li>[6] <a href=\"https://malloc.se/blog/zgc-jdk16\">TP9999</a></li></ul>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "16965d3c6d48",
      "blog_name": "美团技术团队",
      "title": "可信实验白皮书系列06：观察性研究",
      "link": "https://tech.meituan.com/2025/06/20/meituan-ab-online-controlled-experiment-06.html",
      "published": "2025-06-20T00:00:00+00:00",
      "timestamp": 1750377600,
      "summary": "本文系《可信实验白皮书》系列的第六篇文章，上一篇我们介绍了准实验，然后重点介绍了双重差分法，包括概述、评估原理及美团的一些实践案例。本篇重点介绍了观察性研究，内容主要包括合成控制法、匹配方法、Causal Impact等几个方面。",
      "content": "\n<p><strong>观察性研究常用于解决无法进行控制实验的问题</strong>。在美团的到家履约业务场景中，由于法律约束以及实际操作成本等多种限制，我们通常无法直接进行控制实验。因此，<strong>观察性研究成为一种重要的替代方法，它允许我们在不进行控制实验，且不影响用户体验的情况下，评估不同策略和措施的业务效果</strong>。</p><p>著名统计学家Cochran（1965）总结了观察性研究的两个常见特征：<strong>一是目标是阐明因果关系，二是使用控制实验不可行</strong>。第一个特征与随机对照实验或准实验相同，但第二个特征与其有根本性的不同：随机对照试验和准实验的干预是外生的，不受实验个体自身控制，不存在自选择问题，而在观察性研究中，干预是不可控的，即我们无法通过实验的方式控制一部分实验个体分配到实验组和对照组，这可能存在<strong>选择性偏差问题</strong>（由于样本的选择方式不当，使得样本不能代表总体，导致评估结果具有偏差）。选择合适的观察性研究方法，能够帮助我们在无法进行控制实验分组的情况下，尽可能消除选择性偏差，得到较为科学的评估结果。</p><p>接下来，我们将介绍一些具体的观察性研究方法，包括合成控制法、匹配方法以及Causal Impact等。各方法的基本思想和适用场景简单总结如下表，每个方法的具体细节可参考对应章节，一些其他观察性研究方法的简单介绍可见拓展部分。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/0555822b2ad39f8bbe62cfe7811e81da284671.png\"></p><h2>6.1 合成控制法</h2><h3>6.1.1 概述</h3><p>2024年，北京发布了《餐饮外卖流通绿色包装评价要求》，这项规定对美团北京地区外卖履约业务会有多大影响？为了评估这类事件或政策的影响，根据潜在因果框架理论，我们需要为受政策影响的地区构建“反事实”结果，即如果该地区未受干预会如何。通常，这需要选择一个在各方面与受干预地区相似的对照组，然而，干预政策通常只发生在特定地区，由于美团外卖履约业务的特殊性，我们很难找到一个业务特征[1]相似的对照组。</p><p>为此，我们可以考虑为干预地区构建一个未受干预且特征相似的对照组，具体而言，通过对若干与干预地区相似的未干预对照组进行线性加权，构造出一个虚拟对照组，用以近似干预地区在未受干预情况下的情形，这便是Abadie和Gardeazabal（2003）[2]提出的“合成控制法”。</p><p><strong>基本思想</strong></p><p>合成控制法（Synthetic Control Method, SCM）的基本思想是通过从其他相似地区的数据中学习权重，构建一个加权平均的“合成对照组”来估计政策或干预对一个处理单元（如一个城市、国家或公司）的因果效应，该方法特别适用于个案研究，尤其是在随机对照试验不可行的情况下，其主要流程可以见下图6-1：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/a5100e6802c241c5cfbe73d21b825176309732.png\"></p><p><strong>适用场景与优缺点</strong></p><p>在实际应用中，合成控制法具有其独特的优势，尤其是在以下业务场景中尤为适用：</p><ul><li><strong>无法进行随机对照实验或准实验</strong>：由于法律约束以及实际操作成本等多种限制，无法实施随机对照实验或准实验时，合成控制法提供了一种有效的替代方法，通过构建合成对照组来模拟对照实验的效果。</li><li><strong>干预单元数量有限</strong>：适用于评估单个或少量干预单元的影响。这种情况下，合成控制法通过利用多个对照单元的数据来创建一个合成对照组。</li><li><strong>丰富的对照组单元</strong>：需要有足够数量和多样性的对照组单元，以便从中选择并加权组合，创建一个合成对照组，使其在未受干预时表现与干预单元相似。</li><li><strong>多期面板数据</strong>：合成控制法依赖于多期面板数据，以观察干预前后干预单元和对照单元的表现。这种数据结构允许更准确地捕捉时间趋势，并验证合成对照组在干预前的适用性。</li></ul><p>随着合成控制法被广泛应用，优缺点也逐渐明显，其优点如下：</p><ul><li><strong>适用于个案研究</strong>：特别适合评估只有单个城市、地区或特定市场的政策或策略影响。</li><li><strong>数据驱动的对照组构建</strong>：通过加权组合多个对照组，创建一个合成对照组，模拟处理组在未受干预时的表现，可以减少单个对照城市的偏差。</li><li><strong>减少模型依赖</strong>：减少对复杂模型假设的依赖，更加依赖于观测数据的实际表现。</li><li><strong>直观的可视化</strong>：结果通常可以通过图形表示，便于干预政策影响的直观理解和解释。</li></ul><p>然而，合成控制法也存在一些局限性，这些限制在特定情况下可能影响其应用效果：</p><ul><li><strong>数据要求高</strong>：需要足够的对照单元和多期面板数据来构建合成对照组，对数据质量要求较高，存在较多缺失数据或者对照单元较少时可能难以评估。</li><li><strong>复杂性</strong>：合成控制的权重计算和假设检验的p值计算可能较为复杂，特别是存在多个处理单元时，需要计算多个权重。</li><li><strong>外推性限制</strong>：结果的外推性可能有限，由于处理组的特殊性可能并不能代表总体情况，无法轻易推广到其他场景或城市。</li><li><strong>处理组和对照组的相似性要求</strong>：要求合成的对照组能很好地模拟处理组在未受干预时的表现，但异质性较大时，合成对照组和实验组在未受干预时差别可能会较大。</li></ul><h3>6.1.2 原理</h3><p>本节我们将详细介绍合成控制法的数学原理。</p><p><strong>基本假定</strong></p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/21ae1e46c64cef62a4e47a96404f9b86271284.png\"></p><p><strong>权重计算</strong></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/7fc551dd27ddc7002f989d69a8bdd625349889.png\"></p><p><strong>显著性评估</strong></p><p>在得到了具体的因果效应估计后，我们自然希望知道其效果是否显著，此时我们可以考虑Fisher精确检验方法计算$p$值：将对照组个体依次作为处理组，计算其效应值，然后确定这些效应值中有多少比例高于处理组个体的效应值，具体计算步骤：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/e1217a8d1438795c6fbeab43c47f90a156893.png\"></p><p>考虑到我们得到的因果效应可能并非完全由干预引起，可能存在一些随机因素，我们需要通过稳健性检验来排除随机因素的影响，此时可以考虑改变干预时间节点进行稳健性检验：即通过提前或延后干预时间，创造一个虚拟干预时间节点，观察在这种情况下得到的平均因果效应，与真实干预时间点的平均因果效应是否存在显著差异。</p><p><strong>合成控制法的拓展</strong></p><p>近年来，针对前述局限性，众多研究者在Abadie和Gardeazabal（2003）提出的合成控制法基础上进行了改进。我们对这些改进方法进行了简要总结，如下表所示，具体细节可参考原文：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/789263b7cad19821211364b47db6e2a2451514.png\"></p><p><strong>评估模型选择</strong></p><p>我们介绍了很多合成控制法的拓展，在面对复杂场景时，我们应该如何选择合适的模型呢？一方面，可以结合具体业务和经验进行判断，例如，当存在多个实验单元时，可以考虑使用广义合成控制法；当存在较多干预前缺失数据时，可以考虑使用稳健合成控制法。另一方面，也可以采用数据驱动（Data-Driven）的方式，利用实验前数据进行模型评估：通过不同模型预测实验前几周的AA数据，如果预测值与真实值接近（以MAPE衡量，即Mean Absolute Percentage Error，平均绝对百分比误差），则说明模型的预测较为准确，实验期间预测值的参考价值较高。此外，还可以计算实验前AA结果的p值，p值越大，说明该模型的AA结果越不显著，因果效应估计值更接近0，这也意味着在实验期间预测值的参考价值更高。</p><h3>6.1.3 实验案例</h3><p><strong>案例背景</strong>：美团履约运营团队设计了一种新的运营策略，希望验证该策略能否实现数量和效率的可控性，使得运力和用户需求更匹配，从而提高骑手和用户的体验。</p><p><strong>评估难点</strong>：受限于多方面的业务约束情况，不适合采用分组实验的方式进行验证。新模式需要通过长期运营来观察和评估用户的接受度，无法实现每日切换，因此也不适合采用时间轮转的实验设计。此外，也难以找到业务特征高度相似的单一城市，作为实施新策略城市的对照组。</p><p><strong>解决方法</strong>：考虑“全城灰度”策略，即在整个城市范围内实施新策略一段时间（如一个月），然后利用合成控制法，从一些还没有实施该新策略的城市中拟合一个虚拟的对照组进行评估。</p><p><strong>评估指标</strong>：**</p><p><strong>评估周期</strong>：**</p><p><strong>评估结果</strong>：</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/1feb2c6a0b85869f2f9c77d86be99f7339185.png\"></p><h2>6.2 匹配方法</h2><h3>6.2.1 概述</h3><p>上文提到，在美团履约和外卖的实验中，部分场景由于法律约束以及实际操作成本等诸多限制，无法开展控制实验。例如，在“评估购买优惠券对订单量增量效果”的研究中，我们无法控制用户是否实际购买优惠券。因此，若要评估整体人群中购买优惠券对订单量的提升效果，随机对照实验并不适用。</p><p>通常，评估购买优惠券对订单量的影响最直接的方法，是比较“购买优惠券”与“不购买优惠券”用户的订单量差异。然而，现实中多种因素都会影响购买优惠券的行为和订单量，购买优惠券的用户与不购买优惠券的用户在某些协变量特征上也往往存在天然差异，直接比较这两类人群的订单量差异会存在选择性偏差问题。</p><p>为此，我们可以采用匹配方法，通过匹配购买优惠券与不购买优惠券用户的协变量特征来控制这些干扰因素，减少因选择偏差导致的估计误差，从而更准确地估计实验效果。</p><p><strong>基本思想</strong></p><p>匹配是因果推断中常用的一种方法，其核心思想是通过平衡处理组和对照组之间的协变量分布，从而消除混杂因素的影响。具体而言，在多维协变量空间中，匹配方法尽量模拟随机分配的情境，为每个处理组个体找到一个或多个相似的对照组个体，作为其反事实结果，从而减少样本间协变量（非处理因素）差异对效果评估的干扰，其基本流程如下图6-2所示：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/5d4e5b3a59ae4897f5ab572c5735aca7120080.png\"></p><p><strong>适用场景与优缺点</strong></p><p>匹配方法在观察性研究中被广泛应用，尤其适用于以下场景：</p><ul><li><strong>无法进行控制试验</strong>：出于法律约束以及实际操作成本等原因，无法实施控制试验时，匹配方法成为因果推断的重要工具。</li><li><strong>处理组与对照组存在相似个体</strong>：匹配方法适用于处理组和对照组中存在相似个体的情况，通过确保这两组在协变量上的分布尽量一致，从而减少因组间差异带来的偏差。</li><li><strong>观测的协变量特征较为全面</strong>：当评估中涉及多个协变量且需要在这些协变量上达到平衡时，匹配方法能够有效控制混杂因素，提高因果效应估计的准确性。</li></ul><p>在应用匹配方法进行因果效应分析时，我们需要详细了解其优势和局限性，从而确保评估的准确性。首先，匹配方法具有以下优点：</p><ul><li><strong>减少选择偏差</strong>：匹配方法通过平衡处理组和对照组的协变量分布，显著减少了由于非随机分配导致的选择偏差，从而提高因果效应估计的准确性。</li><li><strong>易于理解与实施</strong>：相较于其他复杂的因果推断方法，匹配方法直观且易于理解，解释性强。我们可以通过匹配后直接比较处理组和对照组的结果，步骤清晰。</li><li><strong>灵活性高</strong>：匹配方法可以与多种统计模型和技术结合使用，如不同的倾向得分模型、距离度量方法等，适应不同研究需求和数据特点。</li></ul><p>不过，匹配方法也存在以下局限性：</p><ul><li><strong>数据需求较高</strong>：为了有效匹配个体，处理组和对照组需要有足够的重叠区域（Overlap or Common Support），即处理组和对照组中需要存在相似个体，但在某些场景中，可能并不满足该条件，这会限制匹配的有效性。</li><li><strong>无法控制未观测到的混杂因素</strong>：匹配方法仅能控制已观测到的协变量，对于未被包含在匹配过程中的潜在混杂变量，匹配方法可能无法完全消除选择偏差，这可能导致因果效应估计的偏差。</li></ul><h3>6.2.2 原理</h3><p>由上述匹配的基本流程可知，匹配主要包括：选择协变量特征、定义距离度量、选择匹配方法等步骤。在本节，我们将详细介绍这些步骤和一些注意点。</p><p><strong>基本假定</strong></p><p>匹配方法灵活且易于实施，但其评估结果的有效性会依赖于以下两个假定条件：</p><p><strong>条件独立假设</strong>（Conditional Independence Assumption）：在给定观测协变量的条件下，处理的分配与潜在结果独立，其数学表达如下：</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/24af23475e1c05d8d9b0954b3b74b757143032.png\"></p><p><strong>协变量特征选择</strong></p><p>在确定匹配过程中应选择哪些协变量时，关键概念是<strong>条件独立假设</strong>（Conditional Independence Assumption）。匹配方法以及大多数观察性研究方法都依赖于该假设，该假设认为在已观测协变量的条件下，处理组与对照组之间不存在未观测的差异。为了满足可忽略性假设，重要的是在匹配过程中包含<strong>所有已知与处理分配和结果相关的变量</strong>。</p><p>通常，使用相对较少的<strong>便利预测变量</strong>（Predictors of Convenience）的匹配方法表现较差。在使用倾向得分匹配（Propensity Score Matching, PSM，下文将详细介绍）时，包含与处理分配无关的变量几乎没有成本，因为它们对倾向得分模型的影响极小。虽然包含与结果无关的变量可能会略微增加方差，然而，排除潜在的重要混杂变量往往会导致较大的偏差。因此，我们在选择协变量特征时，<strong>应采取宽松的态度，尽可能包含可能与处理分配和结果相关的变量，以提高因果效应估计的准确性</strong>。</p><p>此外，匹配过程中不应包含那些可能受到处理影响的变量，当协变量、处理变量和结果变量同时收集时，这一点尤为重要。如果确实需要控制受处理影响的变量，应该在匹配之后，通过回归调整或其他适当的统计方法在分析模型中进行控制。</p><p><strong>距离度量</strong></p><p>在匹配时，我们需要定义个体之间的距离，用来衡量两个个体的相似性。定义个体$i$和个体$j$之间的距离$D_{ij}$，有以下几种方法，我们总结如下表所示：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/2ec5ebfc9a3e562cc2980c91f9af2693291158.png\"></p><p>在上述距离定义中，除了倾向得分距离之外，其他距离类型都较为常见且易于理解。接下来，我们将对倾向得分距离进行详细介绍。首先我们先简单介绍倾向性得分的定义：倾向性得分（Propensity Score）是指在给定协变量的条件下，个体接受处理的概率。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/fa9a17cdf4ac7f58773fc07806146ddb297690.png\"></p><p><strong>匹配方法</strong></p><p>在匹配方法中，最常见且最容易实施和理解的方法之一是<strong>最近邻匹配</strong>（Nearest Neighbor Matching）。最近邻匹配几乎总是能估计出处理组的平均处理效应（ATT），因为它将对照组个体匹配到处理组，并丢弃未被选为匹配的对照组个体。在其最简单的形式中，<strong>1:1最近邻匹配</strong>为每个处理组个体选择距离最近的一个对照组个体，这也是我们最常用的形式。在使用匹配方法时，经常会存在一些细微问题，我们简单总结如下，具体细节可参考Stuart（2010）[4]的综述论文：</p><ul><li><strong>一对一匹配与一对多匹配</strong>：最常见的形式是使用一对一匹配，但该方式丢弃的对照组个体可能会比较多，检验功效会降低，此时可以考虑一对多匹配，但对应地，其计算复杂度会增加，且匹配效果会依赖于超参数的调整。</li><li><strong>有放回匹配与无放回匹配</strong>：我们一般使用有放回匹配，但一些研究者更倾向于无放回匹配。当对照组的样本量较大时，这两种方法在最终结果上通常不会有太大差异。有放回匹配在计算上更为简便，而无放回匹配则涉及计算密集的离散优化过程。有放回匹配通常能够获得更高质量的匹配，但由于需重复使用相同的样本，可能会引入依赖性。相比之下，无放回匹配的优势在于确保匹配样本的独立性，并简化后续的数据分析过程。</li><li><strong>匹配限制</strong>：在匹配方法中，一个常见的担忧是缺乏限制可能导致不良匹配。例如，某处理组个体的倾向得分（Propensity Score）与对照组中任何个体的相似度不足，无法找到合适的匹配对。为避免此类问题，可以实施卡尺（Caliper），即仅选择匹配距离在预设范围内的对照组个体。虽然这可能导致部分处理组个体无法找到匹配对，增加因果效应解释的难度，但有助于确保匹配质量，减少估计偏差。</li><li><strong>匹配方法的选择</strong>：目前有各种各样的匹配方法可供选择，但相关的指导却相对较少。迄今为止，学术界主要的建议是选择能够实现最佳平衡的方法，例如Ho等人（2007）[5]的研究。然而，定义“最佳平衡”是复杂的，因为这涉及在多个协变量之间进行权衡。选择匹配方法的可能方式包括：(1)在最多协变量上实现最小标准化均差的方法；(2)最小化少数特别具有预测性协变量的标准化均差的方法；(3)产生最少“大”标准化均差（大于0.25）的方法等。这些方法各有侧重，我们可能需要根据具体的研究需求和数据特点选择最合适的匹配方法。</li></ul><p><strong>评估与检验</strong></p><p>在匹配完成后，需要评估匹配的质量，确保处理组和控制组在协变量上的平衡。常用的方法包括：标准化均差（SMD）和分布图。</p><ul><li><strong>标准化均差（SMD）</strong>：评估匹配后协变量的平衡性，确保处理组和对照组在基线特征上相似。标准化均差（Standardized Mean Difference, SMD）是用于衡量两组之间均值差异的标准化效应量。SMD 的公式如下：</li></ul><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/bb8f9db36c2496b9e367448eb231a4ee88022.png\"></p><ul><li><strong>分布图</strong>：绘制协变量的分布图或倾向得分的分布图，检查匹配前后的变化。</li></ul><p>在匹配完成并验证平衡性后，可以估计处理效应。常见的处理效应估计方法包括：</p><ul><li><strong>平均处理效应</strong>（ATE）：估计总体的处理效应。</li><li><strong>处理组平均处理效应</strong>（ATT）：估计处理组的平均处理效应。</li><li><strong>控制组平均处理效应</strong>（ATC）：估计控制组的平均处理效应。</li></ul><p>处理效应的估计通常通过比较匹配后的处理组和控制组的结果变量均值来进行。</p><p><strong>匹配的拓展</strong></p><p>在上文中，我们主要介绍了最常用且最经典的匹配方法。然而，在处理一些复杂情形时，这些方法可能无法充分满足评估需求，因此需要对其进行扩展。我们对此进行了简要总结，具体细节可参考相关文献。</p><p><strong>方差估计</strong>：Badie和Imbens（2008）[6]首次表明，仅通过对原始数据进行重抽样的简单自助法（Bootstrap）无法有效估计匹配估计量的方差，但他们提出的方差估计方法实施起来并不容易。Otsu和 Rai（2017）建议对估计量在线性展开中进行Bootstrap，Otsu和Rai（2017）[7]的Bootstrap本质上产生了方差估计量。得到方差估计后，便可以计算$p$值。</p><p><strong>距离组合</strong>：在某些场景下，我们希望匹配的个体在某些关键协变量特征上（如身份、归属城市）保持完全一致，然后再在这些子组内进行匹配，此时我们可以考虑将上文介绍的距离度量进行组合。例如，我们可以考虑类似粗糙精确匹配（Coarsened Exact Matching，CEM）的距离：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/eb653155a89a59659628f9e84e8fbbcc88157.png\"></p><p><strong>存在多个处理组</strong>：上文我们讨论的都是一个处理组和一个对照组的情形，但是，在很多实际场景下，往往会面临多个处理组的情况，此时往往会更复杂。在面对多个处理组时，我们可以考虑广义倾向性得分（Generalized Propensity Score），利用多项逻辑回归模型（Multinomial Logistic Regression Model）预测每个个体的广义倾向性得分，再利用向量匹配方法（Vector Matching，VM）进行匹配，具体细节可参考Scotina和Gutman(2019)[9]的工作。</p><p><strong>共同支撑问题</strong>：匹配方法中普遍存在共同支持（Common Support）的问题。迄今为止，我们假设两组的倾向得分分布具有明显重叠，但在某些情况下，分布可能不完全重叠。例如，许多对照组个体与处理组成员差异较大，不适合作为估计平均处理效应（ATT）的比较对象。使用卡尺（caliper）的最近邻匹配方法仅匹配位于或接近共同支持区域的个体，而子分类（subclassification）和加权（weighting）方法则通常使用所有个体，无论分布是否重叠，具体细节可参考的Dehejia 和 Wahba(1999)[10]的工作。</p><p><strong>协变量缺失问题</strong>：大多数关于匹配和倾向性得分的文献都假设协变量是完全观测的，但实际上大多数研究至少存在一些缺失数据。一种可能性是使用广义提升模型（Generalized Boosted Models）来估计倾向得分，因为它们不需要完全观测的协变量。另一种推荐的方法是进行简单的单一插补（Single Imputation）来填补缺失的协变量，并在倾向得分模型中包含缺失数据指示变量，具体细节可参考Greenland和Finkle(1995)[11]的工作。</p><h3>6.2.3 实际案例</h3><p><strong>案例背景</strong>：美团神会员是美团推出的综合权益卡，用户可通过免费领取或者支付一个很低的价格成为“美团神会员”。用户成为神会员用户，可以享受到平台的各种优惠权益。神会员项目中售卖的无门槛券包称为省钱包，目前用户可以通过在美团神会员Tab页直接购买。业务方需要对用户在不同行业中购买省钱包后的下单行为变化进行定量分析，以评估用户购买省钱包对业务的影响。</p><p><strong>评估难点</strong>：实验观察的行为（是否购买券包）不满足随机对照条件，无法进行随机AB实验评估效果。由于业务特性，影响用户下单行为的协变量较多，需要考虑如何进行匹配，能够减少选择偏差。</p><p>解决方法：采用倾向分匹配（PSM）进行观察性研究，以计算策略效果，具体流程如下：</p><ol><li>圈选购买省钱包的用户作为实验组；</li><li>圈选未购买省钱包的用户作为候选的对照组；</li><li>计算用户特征作为倾向分计算的协变量，包含用户历史交易相关数据、访问相关特征、用户分层等，训练倾向分模型；</li><li>使用可放回的抽样，根据倾向分得分，从候选的对照组中为实验组的用户进行匹配，得到对照组；</li><li>计算实验组和对照组的目标指标，评估实验的效果。</li></ol><p><strong>评估指标</strong>：**</p><p><strong>评估周期</strong>：**</p><p><strong>评估结果</strong>：</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/9cb469dfe37f65f4a01dcceb049b20a451292.png\"></p><h2>6.3 Causal Impact</h2><h3>6.3.1 概述</h3><p>在美团履约和外卖业务中，部分策略由于无法进行随机实验，同时为了避免影响用户体验，需要在城市粒度上进行实施和评估。这些策略包括线下广告投放、冬夏季城市战和时段场景营销等。然而，常用的评估方法在处理这些局部全量策略效果时存在一定的局限性：首先，单重差分法假设功能或策略是唯一的影响因素，但现实中市场环境复杂，影响因素多样，使得这一假设难以成立。其次，倾向分匹配法（PSM）虽然在特征选择和匹配质量上有其优势，但难以消除未观测的混杂因素。此外，合成控制方法（SCM）要求协变量及目标变量均相似的对照组，这在实际应用中难以获得。最后，双重差分法（DID）假设干预组和对照组在没有干预的情况下会有相同的趋势，这一假设在实践中较难成立。</p><p>为了解决这些问题，Causal Impact方法[12]应运而生。该方法基于贝叶斯结构时间序列（BSTS）模型，通过构建“虚拟对照组”来更准确地评估干预效果。Causal Impact 能够有效捕捉时间序列中的长期趋势和周期性变化，从而提供稳健的因果效应估计，为企业提供可靠的决策支持。</p><p><strong>基本思想</strong></p><p>Causal Impact方法的基本思想是通过贝叶斯结构时间序列（Bayesian Structural Time Series, BSTS）模型来评估干预措施的因果效应。其核心在于构建一个“虚拟对照组”，用于预测在没有干预措施情况下目标变量的可能表现。然后，将该预测值与实验组的真实值进行对比，从而评估策略效果。</p><p>以城市粒度实验为例，具体步骤如下图6-3：</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/03d979552d583b168d3a828a2dec5f36132409.png\"></p><p><strong>适用场景与优缺点</strong></p><p>Causal Impact方法的有效性依赖于若干重要的前提条件和假设，这些条件共同构成了确保因果效应估计准确性和可靠性的基础。首先，需要有可用且平稳的时序数据，即足够的历史数据，涵盖完整的周期性模式，且时间序列中的趋势和季节性成分是平稳的。其次，须有相似、独立、稳定的对照组，与目标市场行为模式相似且未受干预影响，并在实验期间保持稳定。此外，时间序列数据需符合状态空间模型的基本假设，包括线性关系、正态分布误差和马尔可夫性质。模型中应包含所有重要的控制变量，确保没有遗漏关键的影响因素。最后，数据中应没有显著的异常值或极端情况，或已妥善处理这些问题。</p><p>在应用Causal Impact方法进行因果效应分析时，了解其优势和局限性对于确保分析的准确性和可靠性至关重要。Causal Impact方法结合了贝叶斯结构时间序列模型和反事实预测技术，能够在复杂的时间序列数据中提供稳健的因果效应估计，具体而言，其优势在于：</p><ul><li><strong>灵活的时间序列建模</strong>：适用于复杂时间依赖结构的数据集，能够捕捉数据中的趋势、季节性和异常值。</li><li><strong>无需随机对照试验</strong>：能够在没有随机实验的情况下估计因果效应，通过构建“虚拟对照组”来进行因果推断。</li><li><strong>不确定性量化</strong>：提供完整的后验分布，能够量化不确定性，从而提供更为全面的因果效应评估。</li><li><strong>动态适应性</strong>：支持动态回归系数，能够根据时间变化动态调整模型，增强模型的灵活性和适应性。</li></ul><p>尽管Causal Impact方法具有显著的优势，但在实际应用中也需注意其局限性，以确保分析结果的可靠性。这些局限性包括：</p><ul><li><strong>依赖高质量对照组</strong>：方法的准确性高度依赖于对照组的选择。如果对照组选择不当，可能导致估计偏差。</li><li><strong>假设严格</strong>：方法假设目标市场和对照组的行为模式相似，且对照组不受干预影响。这一假设在实际应用中可能不完全成立。</li><li><strong>难以处理复杂因果关系</strong>：对于复杂的多因素交互作用或长期滞后效应，方法可能不够准确。</li><li><strong>需要足够长的历史数据</strong>：需要足够长的历史数据来训练模型，以捕捉数据中的长期趋势和季节性变化。</li></ul><p>通过明确这些优势和局限性，可以更好地应用Causal Impact方法进行因果效应分析，从而确保分析的准确性和可靠性。</p><h3>6.3.2 原理</h3><p>在本节，我们将详细介绍Causal impact的基本原理。</p><p><strong>模型设定</strong></p><p>Causal Impact通过采用贝叶斯结构时间序列（Bayesian Structural Time Series, BSTS）模型，结合状态空间模型（State-Space Models）与贝叶斯推断（Bayesian Inference）方法来构建反事实预测模型，从而估计在没有干预措施的情况下结果变量的预期表现。考虑一个常规的BSTS模型：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/135975b207f3d087e609f78fc175ee21303002.png\"></p><p><strong>贝叶斯推断</strong></p><p>在Causal Impact中，对于上述介绍的BSTS模型，我们通常会使用贝叶斯后验推断来估计反事实预测值，即：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/061986f93791414c2f259c7c2377adb787738.png\"></p><p><strong>后验推断</strong>：一般情况下，因为模型的复杂性，我们无法直接得到反事实预测值后验分布的显示表达式。因此，我们可以考虑利用MCMC（Markov Chain Monte Carlo）方法，通过构建一个马尔可夫链（Markov Chain），使得该链的极限分布（平稳分布）为目标后验分布，从而实现从后验分布中的有效采样进行后验推断。以上面的Local Level模型为例，一个完整的Causal Impact过程可见图6-4 ：</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/948faedb6ba0ee7482720f5cd6b82019337276.png\"></p><p><strong>因果效应评估</strong></p><p>通过贝叶斯后验推断，我们可以得到反事实预测（Counterfactual Prediction）结果，即：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/4822878bd43d57759fab251698839d4176366.png\"></p><h3>6.3.3 实际案例</h3><p>为了更直观地展示Causal Impact方法的运行机制，这里举一个外卖一体化营销的例子。</p><p><strong>背景介绍</strong>：以往在城市维度进行营销时，业务主要依赖站内补贴资源来推动城市交易额的增长，而站内外、线上线下资源的协同效应相对较弱。前几年，美团外卖推出了一种全新的一体化营销模式，通过组织统筹和综合效应，促进站外广告营销、一线运营的协同作用。当前，美团外卖在一体化营销城市战中投入了大量人力和物力，这样的投入是否值得？为此，我们需要构建一个评估方法来衡量一体化营销策略对业务的影响。</p><p><strong>评估难点</strong>：由于涉及站外和站内、线上和线下的多策略组合，评估面临一些挑战，无法通过A/B测试和倾向评分匹配（PSM）进行有效评估。同时，不同城市的天气等外部因素差异显著，难以找到满足平行趋势的对照组城市，这也使得双重差分法不适用。此外，为避免影响用户体验，策略不能频繁变更，因此时间片轮转也不可行。</p><p><strong>解决方法</strong>：考虑在全城范围内实施站内站外、线上线下的组合策略，可以利用Causal Impact方法进行评估。具体做法是，从暂未实施该策略的城市中选择一些作为候选城市，并结合天气等外生变量，拟合出一个虚拟的“对照城市”进行评估。</p><p><strong>评估指标</strong>：**</p><p><strong>评估周期</strong>：**</p><p><strong>评估结果</strong>：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/81dc3c5ac1369a811a0979207ac411c943383.png\"></p><h2>6.4 展望与拓展</h2><p>在上文中，我们主要介绍了合成控制法、匹配方法以及Causal Impact等方法。此外，还有许多广泛应用于观察性研究的方法值得进一步探讨，尤其是在上述方法不满足评估需求时，可以考虑使用以下方法：</p><ul><li><strong>逆概率加权</strong>（Inverse Probability Weighting, IPW）：通过为每个样本分配权重来调整样本分布，以有效控制混杂变量的影响，从而更准确地估计处理效果。</li><li><strong>双重稳健估计</strong>（Doubly Robust Estimation）：结合倾向得分模型和结果模型的优点，即使其中一个模型不完全正确，依然能够提供一致的因果效应估计。</li><li><strong>工具变量法</strong>（Instrumental Variable, IV）：通过引入一个工具变量（IV），该变量与处理变量相关但与结果变量无关（仅通过处理变量影响结果），从而解决内生性问题，准确估计因果效应。工具变量法特别适用于处理变量与误差项相关的情况，例如遗漏变量偏差或测量误差。</li><li><strong>双重机器学习</strong>（Double Machine Learning, DML）：结合了机器学习与因果推断方法，旨在高维数据环境下准确估计因果效应。该方法通过使用机器学习模型分别估计处理变量和结果变量与协变量之间的关系，并通过残差化（residualization）与交叉验证（cross-fitting）技术，有效控制潜在的混杂因素，减少模型误差带来的偏差。</li></ul><p>这些方法各具特色，为我们提供了多样化的评估工具。如果能够合理选择并使用这些方法，我们可以在复杂的业务环境中更好地进行效果评估，得到科学的评估结果，进而为决策提供科学依据。</p><h2>参考资料</h2><ul><li>[1] 业务特征：各运力线的承托比、骑手规模、总完单量、拼好饭单占比、跑腿单占比、推订单完成率等等。</li><li>[2] Abadie和Gardeazabal（2003）：Abadie, A., &amp; Gardeazabal, J. (2003). The economic costs of conflict: A case study of the Basque Country. American economic review, 93(1), 113-132.</li><li>[3] Rubin证得：Rosenbaum, P. R. and Rubin, D. B. (1983). The central role of the propensity score in observational studies for causal effects. Biometrika, 70:41–55.</li><li>[4] Stuart（2010）：Stuart, E. A. (2010). Matching methods for causal inference: A review and a look forward. Statistical science: a review journal of the Institute of Mathematical Statistics, 25(1), 1.</li><li>[5] Ho 等人（2007）：Ho DE, Imai K, King G, Stuart EA. Matching as nonparametric preprocessing for reducing model dependence in parametric causal inference. Political Analysis 2007;15(3):199–236.</li><li>[6] badie 和 Imbens（2008）：Abadie, A. and Imbens, G. W. (2008). On the failure of the bootstrap for matching estimators. Econometrica, 76:1537–1557.</li><li>[7] Otsu 和 Rai（2017）：Otsu, T. and Rai, Y. (2017). Bootstrap inference of matching estimators for average treatment effects. Journal of the American Statistical Association,112:1720–1732.</li><li>[8] Rubin和Thomas（2000）：Rubin, Donald B., and Neal Thomas. Combining propensity score matching with additional adjustments for prognostic covariates.“Journal of the American Statistical Association 95.450 (2000): 573-585.</li><li>[9] Anthony和Gutman(2019)：Scotina, Anthony D., and Roee Gutman. Matching algorithms for causal inference with multiple treatments. Statistics in medicine 38.17 (2019): 3139-3167.</li><li>[10] Dehejia 和 Wahba(1999)：Dehejia, Rajeev H., and Sadek Wahba. Causal effects in nonexperimental studies: Reevaluating the evaluation of training programs. Journal of the American statistical Association 94.448 (1999): 1053-1062.</li><li>[1] Greenland和Finkle(1995)：Greenland S, Finkle WD. A critical look at methods for handling missing covariates in epidemiologic regression analyses. American Journal of Epidemiology 1995;142:1255–1264.</li><li>[12] Causal Impact 方法：Brodersen, K. H., Gallusser, F., Koehler, J., Remy, N., &amp; Scott, S. L. (2015). Inferring causal impact using Bayesian structural time-series models.</li><li>[13] Spike-and-Slab先验：结合了“尖峰”（Spike）和“平板”（Slab）两个部分，尖峰（Spike）部分是一个集中在零附近的分布，表示某个参数可能为零或接近零，反映了变量不被选择或对模型贡献很小的情况；平板（Slab）部分是一个较为宽松的分布，允许参数有较大的值，表示该变量可能对模型有显著贡献。</li></ul>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "48b059939eb8",
      "blog_name": "美团技术团队",
      "title": "可信实验白皮书系列05：准实验",
      "link": "https://tech.meituan.com/2025/06/16/meituan-ab-online-controlled-experiment-05.html",
      "published": "2025-06-16T00:00:00+00:00",
      "timestamp": 1750032000,
      "summary": "本文系《可信实验白皮书》系列的第五篇文章，上一篇我们围绕随机轮转实验展开，内容主要包括抛硬币随机轮转、完全随机轮转、配对随机轮转等几个实验方法的介绍。本篇我们会介绍准实验，然后会重点介绍双重差分法，包括概述、评估原理及美团的一些实践案例。",
      "content": "\n<p><strong>准实验（Quasi-experiment）适用于“实验设计者”可干预分组，但无法随机分配实验单元至实验组和对照组的场景</strong>。经典随机对照实验通过随机分配实验单元，保证了实验组和对照组的可观测特征和不可观测特征分布都是相同的，差异仅在于样本是否受策略影响，因此两组观测结果的差异可以归因于策略影响。然而，在一些无法随机分配样本的场景下，实验组和对照组的特征分布往往不一致，进而导致两个组在未施加策略时就存在差异，此时需在满足部分特定条件假设的前提下使用准实验评估方法，才能够比较准确地估计策略的效果。</p><p>以美团履约业务场景为例，以下几个因素可能阻碍进行时空粒度的随机实验。</p><p><strong>溢出效应+小样本等多重约束下无法开展时空随机实验</strong>：</p><ul><li><strong>溢出效应</strong>：履约业务是一个典型的多边场景，容易造成实验单元间相互依赖和影响，而简单的随机对照实验，通常会违背个体处理稳定性假设（SUTVA），进而造成实验偏差。在这种存在溢出效应的履约业务场景中，实验有时需要在地理上隔离样本，以避免或者减少溢出效应，一种典型的做法是依据地理位置将一个城市划分为两个半城，将实验组和对照组之间的运力溢出等限制在半城交界处，将溢出效应的影响尽量降至最低。</li><li><strong>小样本</strong>：履约策略大多以配送区域为基本单元，即使是区域溢入溢出效应模型也通常要求配送区域数量至少超过20个。但是部分城市规模较小，可供分析建模的配送区域数量达不到该要求，因此也无法采用随机分组+溢出效应建模的实验方案。</li></ul><p><strong>策略和产品的特殊性</strong>：部分策略和产品的特殊性限制了随机分组。例如，配送区域优化策略考虑在保障整体覆盖范围不变且区域之间不重叠的约束下，对区域进行边界优化甚至合并，然而对于2个相邻的区域，在该约束下，优化A区域边界必然会导致B边界跟随变化，因此从产品形态上无法实现A区域边界变更但B区域边界维持不变，此时不能考虑按区域随机分流。</p><p>综上所述，考虑到美团履约业务场景的特殊性，许多实验无法采用随机对照实验准确量化策略效果，因此发展一套标准的准实验设计与评估流程尤为必要。接下来，我们着重介绍经典的准实验方法——双重差分法，关于双重差分法的衍生和其他准实验方法，请参考文末的拓展部分。</p><h2>5.1 双重差分法</h2><h3>5.1.1 方法概述</h3><p><strong>双重差分法</strong>（Difference in differences，简称DID）的基本思想，就是用<strong>实验后的实验组、对照组差异减去实验前的实验组、对照组差异</strong>，来估计策略在实验组上的效果（ATT），图5-1直观展示了该思想。下面先从单重差分开始，逐步解析双重差分法。</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/97f150cbca49dc427a512551a633df8891225.png\"></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/15f0d264468028688b675d312a168c93314524.png\"></p><p>消除了两组之间的固有差异，这就是双重差分法的基本原理。</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/cb87c4ee2889dfc8ec60e12a50cc905d99822.png\"></p><h3>5.1.2 评估原理</h3><p>本节我们将详细介绍双重差分法的数学模型和原理，包括传统DID模型、固定效应模型、平行趋势假设合理性检验等。</p><p><strong>传统DID模型</strong></p><p>基本双重差分法模型的形式为：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/ba5ceb28d21bd126112ae3f5cd6ed452153095.png\"></p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/e78a1ef33b7f2f0e378b3b8488adb5bd163011.png\"></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/5f69170f2acb5a70660d50a1c6b4d6c5129508.png\"></p><p><strong>固定效应模型</strong></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/a73abd31b1b417c32e03fa8dcea6c615394900.png\"></p><p><strong>平行趋势假设合理性检验</strong></p><p>平行趋势假设是使用双重差分法估计策略效果的关键假设。平行趋势假设要求，在没有策略影响的情况下，实验组和对照组的差异不随时间变化是恒定的，即实验组和对照组的趋势保持平行。一种简单的平行趋势检验方法是通过画图观察平行趋势是否满足，但是这种方法比较粗糙。为了得到更加严谨的量化结果，可以使用模型进行平行趋势检验。在此基础上一种方法是将DID模型拓展为以下形式：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/71ddb005632c99887ead0a201d531f6b33446.png\"></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/36947aef7876f17496b769cfe0b1761c142533.png\"></p><h3>5.1.3 平行趋势分组</h3><p>不难看出，平行趋势假设是影响双重差分实验结论可信度的关键。因此，为了尽量保证实验结论的可信度，我们建议采取下述平行趋势分组，以尽量保障“实验组”、“对照组”平行趋势假设的合理性：</p><ol><li>随机划分2个半城为实验组和对照组；</li><li>使用实验前数据，对所有目标指标和护栏指标做平行趋势检验，根据通过检验的模型和实验组对照组差异对本次分组进行打分（通过固定效应模型平行趋势检验的分组得分更高，两组差异更小的分组得分更高）；</li><li>重复步骤1和步骤2若干次，选取得分最高的分组作为最终分组。</li></ol><p>尽管采取平行趋势分组的做法在实验设计上尽量保障平行趋势假设的合理性，但在实际场景中仍存在以下潜在风险，因此在实践中优先考虑随机实验，随机实验不可行时才考虑双重差分实验：</p><ol><li>平行趋势是一个比较强的假设，在样本量较少时，有时难以划分满足平行趋势的实验组和对照组；</li><li>平行趋势检验只能检验实验前的平行趋势以证明假设的合理性，实验后的平行趋势是否满足是无法得知的，并且无法得到完全保证，在某些情况下平行趋势假设会受到挑战：</li></ol><p>a. 有不可控的外部因素影响时，平行趋势假设可能被打破，此时可考虑适当剔除不可控因素影响日期再进行评估分析；</p><p>b. 评估指标的数值限定范围，可能影响到平行趋势。在履约场景中准时率指标时常被关注，准时率的数值范围在0～100%之间并且通常处于较高水位，在某些极端情况下如果平行趋势成立，实验组准时率的反事实结果可能会超过其上限100%，这时平行趋势假设与实际情况会略有出入。</p><h3>5.1.4 实验案例</h3><p><strong>实验案例</strong>：配送区域优化实验</p><p><strong>实验背景</strong>：为解决现有配送区域划分畸形、切割商户热力等问题，提升配送效率，通过算法智能规划对各城市配送区域进行重新规划。</p><p><strong>实验目标</strong>：降低运单超出配送区域范围占比，提高配送效率。</p><p><strong>实验指标</strong>：</p><ul><li><strong>目标指标</strong>：xxxx；</li><li><strong>护栏指标</strong>：xxxx。</li></ul><p><strong>实验难点及约束</strong>：</p><ul><li><strong>策略和产品的特殊性</strong>：配送区域优化策略考虑在保障整体覆盖范围不变且区域之间不重叠的约束下，对加盟区域进行边界优化甚至合并，然而对于2个相邻的区域，在该约束下，优化A区域边界必然会导致B边界跟随变化，因此从产品形态上无法实现A区域边界变更但B区域边界维持不变，此时不能考虑按区域随机分流。这种情况下可以考虑将城市划分为两个半城，在实验半城内部调整优化区域边界，对照半城维持不变。</li></ul><p><strong>实验方案</strong>：考虑到实验难点及约束，采用半城平行趋势分组，并使用双重差分法进行评估。</p><p><strong>实验设计</strong>：采用半城划分+平行趋势检验的实验设计机制，对城市中配送区域进行分组，详细流程可见图5-2：</p><p><img alt=\"\" src=\"https://p1.meituan.net/meituantechblog/5be07427132c04582cb322bcf4c9e1ac445385.png\"></p><p><strong>实验评估</strong>：根据实验前通过哪个模型的平行趋势检验来决定用哪个模型来评估实验后策略效果，详细流程可见图5-3，评估结果以下表为例：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/dc83fb755ff320e9c99584edfef6cc2f119087.png\"></p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/5cbdc12aaab6f1c907a9836f7e2ad4e3118096.png\"></p><h2>5.2 拓展与展望</h2><h3>5.2.1 双重差分法拓展</h3><p>在传统DID模型设定中，一个隐含假设是，实验组的所有个体开始实验的时间均相同。但有时我们也会遇到每个个体的实验时间不完全一致的情形（Staggered Timing），比如有的实验经过逐步放量，一部分个体从实验第1天就开始接受策略处理，而另一部分个体则等到放量之后，第8天才开始接受策略。这时我们就可以用<strong>多时点DID模型</strong>来同时考察多次实验的效果，模型设定如下：</p><p><img alt=\"\" src=\"https://p0.meituan.net/meituantechblog/26d2cab85db392d12f7a573c36585542230356.png\"></p><p>在实践中当出现<strong>平行趋势不成立</strong>的情况时（建议尽量在实验设计上采取更合理的分组，如果现实中已经结束实验并平行趋势检验表明假设不合理时），通常可以尝试如下做法：</p><ol><li><strong>放宽平行趋势假设</strong>：例如学界的Honest DID为一种在平行趋势假设可能不成立的前提下，进行稳健推断（Robust Inference）和敏感性分析（Sensitivity Analysis）的方法。与直接假设平行趋势成立不同，Honest DID允许实验后平行趋势的违背，但是限制违背程度与实验前趋势（pre-trends）的违背并不存在太大差异或至少有迹可循。</li><li><strong>条件平行趋势假设</strong>：通过匹配等方法寻找满足平行趋势的群体，例如基于实验群体PSM匹配合适的对照组群体，再应用DID进行评估等。</li><li><strong>三重差分法</strong>：在双重差分基础上引入第三个差异维度（不受干预影响）更精确评估政策或干预措施影响的计量经济学方法，但也增加了数据需求和模型复杂性。</li></ol><h3>5.2.2 其他准实验方法</h3><p>本文在准实验上着重介绍了双重差分法，此外还有一些断点回归、中断时间序列等类准实验方法可供读者参考。</p><ol><li>断点回归（Regression Discontinuity Design, RDD）根据某个可观测变量的阈值（断点）划分为实验组和对照组，分析主要集中在断点附近的样本上。断点附近可以认为有局部随机性，即断点附近的样本是否受处置是随机的，并且在是否处置之外的特征上没有系统性差异。</li><li>中断时间序列（Interrupted Time Series Analysis, ITSA）具体做法为在干预之前，使用不同时间的多次测量来创建一个模型（例如时间序列分析ARIMA模型），该模型可以估计干预介入后的相关指标的虚拟事实。干预后，再进行多次测量，并将关注指标的实际值和模型的预测值之间的平均差作为实验效应的估计。当然中断时间序列同样可应用于多个实验对象并且各个实验对象可在不同时间点接受实验干预（即设计上类似于多基线实验）。此外简单中断时间序列的一种拓展是引入实验变动然后将其反转，并可以选择多次重复此过程。</li></ol>",
      "author": "美团技术团队",
      "tags": [],
      "category": "技术",
      "source_icon": "🚀",
      "source_color": "#FFD93D"
    },
    {
      "id": "8dfbac2da544",
      "blog_name": "潮流周刊",
      "title": "第225期 - 中国美院",
      "link": "https://weekly.tw93.fun/posts/225-%E4%B8%AD%E5%9B%BD%E7%BE%8E%E9%99%A2/",
      "published": "2025-06-16T00:00:00",
      "timestamp": 1750003200,
      "summary": "<img src=\"https://cdn.fliggy.com/uPic/22520.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍于周末去中国美院象山校区看毕业生的作品，其中雕塑学院的挺喜欢的，门口有一个看手机的人马，哈哈哈，看着笑死我了。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>GKD：Android 自动去除各种软件开屏广告</strong><br>\n<a href=\"https://gkd.li/\">https://gkd.li/</a><br>\n假如你用 Android 手机，可以试试 GKD 这款自动去除各种软件开屏广告以及自动操作的工具，非常方便，官方定义是「基于无障碍，高级选择器，订阅规则的自定义屏幕点击 Android 应用」，我认为这是一款升级版本的李跳跳，开源，持续更新，可订阅规则，很强大很易用。<br>\n<img src=\"https://cdn.fliggy.com/uPic/661shots_so20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一款内置 ADB 并基于其功能编写用户界面的桌面应用 AYA</strong><br>\n<a href=\"https://aya.liriliri.io/zh/\">https://aya.liriliri.io/zh/</a><br>\n最近用上了 Android 手机，找到一款内置 ADB 并基于其功能编写用户界面的桌面应用 AYA，相比于原始的 ADB 命令行输入，安装简单，功能齐全，全图形化界面，使用起来很简单。<br>\n<img src=\"https://cdn.fliggy.com/uPic/29I3H920.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>这个 PayQrcode 方案有点意思</strong><br>\n<a href=\"https://pay-qrcode.4ce.cn/\">https://pay-qrcode.4ce.cn/</a><br>\n这个 PayQrcode 方案有点意思，当前线下很多店铺一般是微信/支付宝两个码，其实不方便，这个方案通过物理图片合并技术，将微信与支付宝收款码融合为单张图片，实现离线场景下的双码兼容识别，本地试了试，识别很好。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ZgiBUi20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一个开源的统一多模态模型 BAGEL</strong><br>\n<a href=\"https://bagel-ai.org/\">https://bagel-ai.org/</a><br>\n一个开源的统一多模态模型 BAGEL，基于图片的聊天对话、编辑、改写、文生图、风格转换、图片变换方向等 AI 能力，说是和 GPT-4o、Gemini 2.0 的能力相当。<br>\n<video width=\"800px\"></video></p>\n<p><strong>Quarkdown 这个排版方案挺好的</strong><br>\n<a href=\"https://github.com/iamgio/quarkdown\">https://github.com/iamgio/quarkdown</a><br>\n非常喜欢 Markdown 这种格式化写作的规范，灵活且规范，Quarkdown 这个排版方案就是基于 md 方式来弄得，比如你在准备印刷的书籍、论文这种文稿，可以试试这个工具，加了一些有用的扩展能力，可以试试看，相比 Word 这类会更适合工程师些。<br>\n<img src=\"https://cdn.fliggy.com/uPic/Mcfgal20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>简单风格一致的图标库 Lucide 做得挺好的</strong><br>\n<a href=\"https://lucide.dev/\">https://lucide.dev/</a><br>\n这个简单风格一致的图标库 Lucide 做得挺好的，当你需要风格统一，主题色一致，不想麻烦的选择 icon，可以试试这个，对于正常的 App 或者 网站场景够用了。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250608-tmly20.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一个用于构建 Terminal 用户界面的 Rust 库 Ratatui</strong><br>\n<a href=\"https://ratatui.rs\">https://ratatui.rs</a><br>\n一个用于构建 Terminal 用户界面的 Rust 库 Ratatui，刚好你的命令行工具使用 Rust 写的，可以试试这个开箱即用的 TUI 工具，不过要是我去写，我会用 Node 调用 Rust 能力的方式去整，这样会更简单些。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250608-tkkn20.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>换回 Spotify 了，还是这个听歌舒服</strong><br>\n换回 Spotify 了，非常好的一点就是歌推荐得很好，相比调教了两年的 Apple Music 要聪明很多，而且有很多被封禁的歌，你用哪一个音乐播放器？<br>\n<img src=\"https://cdn.fliggy.com/uPic/RvxKU920.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>去中国美院看到的其他有意思的作品</strong><br>\n中国美院这个毕业作品做得非常好，杭州小伙伴可以公众号预约去看毕业展，我这个去的象山校区。</p>\n\n\n    \n        \n          <video width=\"400px\"></video>\n        \n        \n            <video width=\"400px\"></video>\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG2025061415525620.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n    \n",
      "content": "<img src=\"https://cdn.fliggy.com/uPic/22520.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍于周末去中国美院象山校区看毕业生的作品，其中雕塑学院的挺喜欢的，门口有一个看手机的人马，哈哈哈，看着笑死我了。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>GKD：Android 自动去除各种软件开屏广告</strong><br>\n<a href=\"https://gkd.li/\">https://gkd.li/</a><br>\n假如你用 Android 手机，可以试试 GKD 这款自动去除各种软件开屏广告以及自动操作的工具，非常方便，官方定义是「基于无障碍，高级选择器，订阅规则的自定义屏幕点击 Android 应用」，我认为这是一款升级版本的李跳跳，开源，持续更新，可订阅规则，很强大很易用。<br>\n<img src=\"https://cdn.fliggy.com/uPic/661shots_so20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一款内置 ADB 并基于其功能编写用户界面的桌面应用 AYA</strong><br>\n<a href=\"https://aya.liriliri.io/zh/\">https://aya.liriliri.io/zh/</a><br>\n最近用上了 Android 手机，找到一款内置 ADB 并基于其功能编写用户界面的桌面应用 AYA，相比于原始的 ADB 命令行输入，安装简单，功能齐全，全图形化界面，使用起来很简单。<br>\n<img src=\"https://cdn.fliggy.com/uPic/29I3H920.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>这个 PayQrcode 方案有点意思</strong><br>\n<a href=\"https://pay-qrcode.4ce.cn/\">https://pay-qrcode.4ce.cn/</a><br>\n这个 PayQrcode 方案有点意思，当前线下很多店铺一般是微信/支付宝两个码，其实不方便，这个方案通过物理图片合并技术，将微信与支付宝收款码融合为单张图片，实现离线场景下的双码兼容识别，本地试了试，识别很好。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ZgiBUi20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一个开源的统一多模态模型 BAGEL</strong><br>\n<a href=\"https://bagel-ai.org/\">https://bagel-ai.org/</a><br>\n一个开源的统一多模态模型 BAGEL，基于图片的聊天对话、编辑、改写、文生图、风格转换、图片变换方向等 AI 能力，说是和 GPT-4o、Gemini 2.0 的能力相当。<br>\n<video width=\"800px\"></video></p>\n<p><strong>Quarkdown 这个排版方案挺好的</strong><br>\n<a href=\"https://github.com/iamgio/quarkdown\">https://github.com/iamgio/quarkdown</a><br>\n非常喜欢 Markdown 这种格式化写作的规范，灵活且规范，Quarkdown 这个排版方案就是基于 md 方式来弄得，比如你在准备印刷的书籍、论文这种文稿，可以试试这个工具，加了一些有用的扩展能力，可以试试看，相比 Word 这类会更适合工程师些。<br>\n<img src=\"https://cdn.fliggy.com/uPic/Mcfgal20.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>简单风格一致的图标库 Lucide 做得挺好的</strong><br>\n<a href=\"https://lucide.dev/\">https://lucide.dev/</a><br>\n这个简单风格一致的图标库 Lucide 做得挺好的，当你需要风格统一，主题色一致，不想麻烦的选择 icon，可以试试这个，对于正常的 App 或者 网站场景够用了。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250608-tmly20.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一个用于构建 Terminal 用户界面的 Rust 库 Ratatui</strong><br>\n<a href=\"https://ratatui.rs\">https://ratatui.rs</a><br>\n一个用于构建 Terminal 用户界面的 Rust 库 Ratatui，刚好你的命令行工具使用 Rust 写的，可以试试这个开箱即用的 TUI 工具，不过要是我去写，我会用 Node 调用 Rust 能力的方式去整，这样会更简单些。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250608-tkkn20.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>换回 Spotify 了，还是这个听歌舒服</strong><br>\n换回 Spotify 了，非常好的一点就是歌推荐得很好，相比调教了两年的 Apple Music 要聪明很多，而且有很多被封禁的歌，你用哪一个音乐播放器？<br>\n<img src=\"https://cdn.fliggy.com/uPic/RvxKU920.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>去中国美院看到的其他有意思的作品</strong><br>\n中国美院这个毕业作品做得非常好，杭州小伙伴可以公众号预约去看毕业展，我这个去的象山校区。</p>\n\n\n    \n        \n          <video width=\"400px\"></video>\n        \n        \n            <video width=\"400px\"></video>\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG2025061415525620.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n    \n",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "ffb891c014b9",
      "blog_name": "潮流周刊",
      "title": "第224期 - 初见杨梅",
      "link": "https://weekly.tw93.fun/posts/224-%E5%88%9D%E8%A7%81%E6%9D%A8%E6%A2%85/",
      "published": "2025-06-09T00:00:00",
      "timestamp": 1749398400,
      "summary": "<img src=\"https://cdn.fliggy.com/uPic/22423.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍于小区看到一颗杨梅树上长着不错的杨梅，好久没有见过这种长在树上的杨梅了，小时候吃这种会要先用盐水泡，然后加糖吃，还没有开始一股酸味就来了。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>NewsNow：一个咨询聚合排行榜平台</strong><br>\n<a href=\"https://newsnow.busiyi.world/\">https://newsnow.busiyi.world/</a><br>\n我比较喜欢看 V2EX 的最热和 Github 的趋势，偶尔刷一刷还挺好玩。<br>\n<img src=\"https://cdn.fliggy.com/uPic/4qIKMk23.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>微调大语言模型的 Google Colab</strong><br>\n<a href=\"https://github.com/unslothai/notebooks\">https://github.com/unslothai/notebooks</a><br>\n有人把当前开源大语言模型的 Google Colab 的在线运行版本分门别类的整理出来了，你可以借助这些指导笔记本预处理数据、训练、评估并保存你的模型。<br>\n<img src=\"https://cdn.fliggy.com/uPic/MQtNTd23.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>网站的明暗主题一键实现</strong><br>\n<a href=\"https://theme-toggle.rdsx.dev/\">https://theme-toggle.rdsx.dev/</a><br>\n这个网站的明暗主题一键实现的效果挺好的，使用 view transitions api，直接 Copy 代码就可以使用，省去了一些自己写适配的成本。<br>\n<img src=\"https://cdn.fliggy.com/uPic/v0zELh23.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一个关于使用 llms.txt 文件进行标准化的建议</strong><br>\n<a href=\"https://llmstxt.org/\">https://llmstxt.org/</a><br>\n一个关于使用 llms.txt 文件进行标准化的建议，以提供信息来帮助 LLM 在推理时使用网站，这个思路挺好的，原来的内容都是给人阅读的，假如给 AI 阅读是否需要提供一个单独的版本？我认为是很需要的。<br>\n<img src=\"https://cdn.fliggy.com/uPic/oRfUBN23.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>如何评价 2025 各地高考英语试卷？今年的英语作文你会怎么写？</strong><br>\n<a href=\"https://www.zhihu.com/question/1915084221267026167\">https://www.zhihu.com/question/1915084221267026167</a><br>\n知乎上的一个问题，有点儿意思，还好我工作后不做那种考试的梦。</p>\n<p><strong>假设 AI 未来真的能在写代码和系统设计上超过人类，那还有必要学习编程和系统设计吗？</strong><br>\n<a href=\"https://baoyu.io/blog/ai-surpass-humans-coding-necessary\">https://baoyu.io/blog/ai-surpass-humans-coding-necessary</a><br>\n宝玉的一篇文章，里面这 2 句话说得很好「程序员的时间窗口不会太短，架构师的时间窗口会很长」，「没有人知道未来的 AI 时代需要什么样的知识和技能，但是保持学习的人总是能最快跟上未来的趋势的」。</p>\n<p><strong>V2EX：跑了一晚上京东外卖，记录一下</strong><br>\n<a href=\"https://www.v2ex.com/t/1136194\">https://www.v2ex.com/t/1136194</a><br>\n作者由于近期深圳交通不便，附近商场地铁无法直达，打车等待时间过长，因此购入电动车（小电驴），本着体验生活的想法，尝试了一晚京东外卖，然后把一些东西记录到这里了，每次点击“开工”，都必须缴纳 3 元平安保险费是我没有想到的。</p>\n<p><strong>10 年 iPhone 党，买一个 Android 机器玩玩</strong><br>\n想着不想被苹果生态把我困住，整了一个 OPPO Find X8S 小屏 Android 手机，手感很小很好，自定义的能力非常强，不过 Android 有少量软件的适配性不如 iPhone，但是有很多功能会自由很多，话说你用了多久 iPhone 了？好久没有摸过 Android 了？</p>\n\n\n    \n        \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_436823.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_436723.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_436923.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n    \n",
      "content": "<img src=\"https://cdn.fliggy.com/uPic/22423.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍于小区看到一颗杨梅树上长着不错的杨梅，好久没有见过这种长在树上的杨梅了，小时候吃这种会要先用盐水泡，然后加糖吃，还没有开始一股酸味就来了。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>NewsNow：一个咨询聚合排行榜平台</strong><br>\n<a href=\"https://newsnow.busiyi.world/\">https://newsnow.busiyi.world/</a><br>\n我比较喜欢看 V2EX 的最热和 Github 的趋势，偶尔刷一刷还挺好玩。<br>\n<img src=\"https://cdn.fliggy.com/uPic/4qIKMk23.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>微调大语言模型的 Google Colab</strong><br>\n<a href=\"https://github.com/unslothai/notebooks\">https://github.com/unslothai/notebooks</a><br>\n有人把当前开源大语言模型的 Google Colab 的在线运行版本分门别类的整理出来了，你可以借助这些指导笔记本预处理数据、训练、评估并保存你的模型。<br>\n<img src=\"https://cdn.fliggy.com/uPic/MQtNTd23.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>网站的明暗主题一键实现</strong><br>\n<a href=\"https://theme-toggle.rdsx.dev/\">https://theme-toggle.rdsx.dev/</a><br>\n这个网站的明暗主题一键实现的效果挺好的，使用 view transitions api，直接 Copy 代码就可以使用，省去了一些自己写适配的成本。<br>\n<img src=\"https://cdn.fliggy.com/uPic/v0zELh23.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一个关于使用 llms.txt 文件进行标准化的建议</strong><br>\n<a href=\"https://llmstxt.org/\">https://llmstxt.org/</a><br>\n一个关于使用 llms.txt 文件进行标准化的建议，以提供信息来帮助 LLM 在推理时使用网站，这个思路挺好的，原来的内容都是给人阅读的，假如给 AI 阅读是否需要提供一个单独的版本？我认为是很需要的。<br>\n<img src=\"https://cdn.fliggy.com/uPic/oRfUBN23.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>如何评价 2025 各地高考英语试卷？今年的英语作文你会怎么写？</strong><br>\n<a href=\"https://www.zhihu.com/question/1915084221267026167\">https://www.zhihu.com/question/1915084221267026167</a><br>\n知乎上的一个问题，有点儿意思，还好我工作后不做那种考试的梦。</p>\n<p><strong>假设 AI 未来真的能在写代码和系统设计上超过人类，那还有必要学习编程和系统设计吗？</strong><br>\n<a href=\"https://baoyu.io/blog/ai-surpass-humans-coding-necessary\">https://baoyu.io/blog/ai-surpass-humans-coding-necessary</a><br>\n宝玉的一篇文章，里面这 2 句话说得很好「程序员的时间窗口不会太短，架构师的时间窗口会很长」，「没有人知道未来的 AI 时代需要什么样的知识和技能，但是保持学习的人总是能最快跟上未来的趋势的」。</p>\n<p><strong>V2EX：跑了一晚上京东外卖，记录一下</strong><br>\n<a href=\"https://www.v2ex.com/t/1136194\">https://www.v2ex.com/t/1136194</a><br>\n作者由于近期深圳交通不便，附近商场地铁无法直达，打车等待时间过长，因此购入电动车（小电驴），本着体验生活的想法，尝试了一晚京东外卖，然后把一些东西记录到这里了，每次点击“开工”，都必须缴纳 3 元平安保险费是我没有想到的。</p>\n<p><strong>10 年 iPhone 党，买一个 Android 机器玩玩</strong><br>\n想着不想被苹果生态把我困住，整了一个 OPPO Find X8S 小屏 Android 手机，手感很小很好，自定义的能力非常强，不过 Android 有少量软件的适配性不如 iPhone，但是有很多功能会自由很多，话说你用了多久 iPhone 了？好久没有摸过 Android 了？</p>\n\n\n    \n        \n          <img src=\"https://cdn.fliggy.com/uPic/IMG_436823.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_436723.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n        \n            <img src=\"https://cdn.fliggy.com/uPic/IMG_436923.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"400\">\n        \n    \n",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "b9a0ccfc4b3a",
      "blog_name": "潮流周刊",
      "title": "第223期 - 孤独身影",
      "link": "https://weekly.tw93.fun/posts/223-%E5%AD%A4%E7%8B%AC%E8%BA%AB%E5%BD%B1/",
      "published": "2025-05-26T00:00:00",
      "timestamp": 1748188800,
      "summary": "<img src=\"https://gw.alipayobjects.com/zos/k/45/223.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍于社区医院对面正在建筑的工地，早上一个很大的钢筋网位置站了一个工人在维护着东西，随手一拍。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>一键生成高清短视频 MoneyPrinterTurbo</strong><br>\n<a href=\"https://github.com/harry0703/MoneyPrinterTurbo\">https://github.com/harry0703/MoneyPrinterTurbo</a><br>\n这个开源的利用 AI 大模型，一键生成高清短视频 MoneyPrinterTurbo 效果挺好的，不过视频召回其实有很多地方可优化，提供一个视频 主题 或 关键词 ，就可以全自动生成视频文案、视频素材、视频字幕、视频背景音乐，然后合成一个高清的短视频。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/5n/MMhwWf.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一站式视频翻译本地化配音工具 VideoLingo</strong><br>\n<a href=\"https://github.com/Huanshere/VideoLingo\">https://github.com/Huanshere/VideoLingo</a><br>\n国内的工具感觉还挺会搞钱的，一个一站式视频翻译本地化配音工具，能够一键生成 Netflix 级别的高质量字幕，告别生硬机翻，告别多行字幕，还能加上高质量的克隆配音，不过请注意版权风险。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/cz/b3pPT1.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>ProNotes：支持苹果备忘录的插件</strong><br>\n<a href=\"https://www.pronotes.app/\">https://www.pronotes.app/</a><br>\n不得不说，这个产品思路挺好的，让你 Mac 的 Notes 支持 markdown 的写法使用以及提供了不少便捷的操作。<br>\n<video width=\"800px\"></video></p>\n<p><strong>一个 UIUC 的计算机博士生整理的在读论文</strong><br>\n<a href=\"https://github.com/Yangyi-Chen/Multimodal-AND-Large-Language-Models\">https://github.com/Yangyi-Chen/Multimodal-AND-Large-Language-Models</a><br>\n一个 UIUC 的计算机博士生整理的自己从 24 年到现在在阅读的一些不错观点的多模态和大规模语言模型的论文列表。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/vn/WtfMCW.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>AI RaaS 和 AI 包工头模式</strong><br>\n<a href=\"https://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw==&#x26;mid=2247516258&#x26;idx=1&#x26;sn=09aec44e46b8e7bf0dc995e0919a0444\">https://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw==&#x26;mid=2247516258&#x26;idx=1&#x26;sn=09aec44e46b8e7bf0dc995e0919a0444</a><br>\nAI 包工头模式分为 L1-L4 的四大进化层级，L1 解决初级效率问题，L2 解决综合效率问题，L3 实现利益共享，L4 则完成从被动到主动、从服务到掌控资源的质变，映射了人工智能从劳动替代到价值创造的进化路径。</p>\n<p><strong>好读的一本大模型书籍「图解大模型」</strong><br>\n今年看到的最好读的一本大模型书籍，深入浅出，加上了图解，让不少原本偏不好懂的部分顿时简单了。<br>\n<a href=\"https://book.douban.com/subject/37339504/\">https://book.douban.com/subject/37339504/</a></p>\n\n\n    \n        \n          <img src=\"https://gw.alipayobjects.com/zos/k/pc/1.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"350\">\n        \n        \n            <img src=\"https://gw.alipayobjects.com/zos/k/3j/GryXvf_XMAA4ka7.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"600\">\n        \n    \n\n<p><strong>V2EX：28 岁突发性耳聋，给脑力劳动的各位朋友们提个醒</strong><br>\n<a href=\"https://www.v2ex.com/t/1134171\">https://www.v2ex.com/t/1134171</a><br>\n如果你哪怕只是感觉身体有点不对劲，一定要第一时间就医，这个还挺重要的，以及身体健康是革命的本钱。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/sy/zutBJP.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "content": "<img src=\"https://gw.alipayobjects.com/zos/k/45/223.jpg?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\">\n<p>封面图拍于社区医院对面正在建筑的工地，早上一个很大的钢筋网位置站了一个工人在维护着东西，随手一拍。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>一键生成高清短视频 MoneyPrinterTurbo</strong><br>\n<a href=\"https://github.com/harry0703/MoneyPrinterTurbo\">https://github.com/harry0703/MoneyPrinterTurbo</a><br>\n这个开源的利用 AI 大模型，一键生成高清短视频 MoneyPrinterTurbo 效果挺好的，不过视频召回其实有很多地方可优化，提供一个视频 主题 或 关键词 ，就可以全自动生成视频文案、视频素材、视频字幕、视频背景音乐，然后合成一个高清的短视频。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/5n/MMhwWf.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>一站式视频翻译本地化配音工具 VideoLingo</strong><br>\n<a href=\"https://github.com/Huanshere/VideoLingo\">https://github.com/Huanshere/VideoLingo</a><br>\n国内的工具感觉还挺会搞钱的，一个一站式视频翻译本地化配音工具，能够一键生成 Netflix 级别的高质量字幕，告别生硬机翻，告别多行字幕，还能加上高质量的克隆配音，不过请注意版权风险。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/cz/b3pPT1.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>ProNotes：支持苹果备忘录的插件</strong><br>\n<a href=\"https://www.pronotes.app/\">https://www.pronotes.app/</a><br>\n不得不说，这个产品思路挺好的，让你 Mac 的 Notes 支持 markdown 的写法使用以及提供了不少便捷的操作。<br>\n<video width=\"800px\"></video></p>\n<p><strong>一个 UIUC 的计算机博士生整理的在读论文</strong><br>\n<a href=\"https://github.com/Yangyi-Chen/Multimodal-AND-Large-Language-Models\">https://github.com/Yangyi-Chen/Multimodal-AND-Large-Language-Models</a><br>\n一个 UIUC 的计算机博士生整理的自己从 24 年到现在在阅读的一些不错观点的多模态和大规模语言模型的论文列表。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/vn/WtfMCW.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>AI RaaS 和 AI 包工头模式</strong><br>\n<a href=\"https://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw==&#x26;mid=2247516258&#x26;idx=1&#x26;sn=09aec44e46b8e7bf0dc995e0919a0444\">https://mp.weixin.qq.com/s?__biz=Mzg5NTc0MjgwMw==&#x26;mid=2247516258&#x26;idx=1&#x26;sn=09aec44e46b8e7bf0dc995e0919a0444</a><br>\nAI 包工头模式分为 L1-L4 的四大进化层级，L1 解决初级效率问题，L2 解决综合效率问题，L3 实现利益共享，L4 则完成从被动到主动、从服务到掌控资源的质变，映射了人工智能从劳动替代到价值创造的进化路径。</p>\n<p><strong>好读的一本大模型书籍「图解大模型」</strong><br>\n今年看到的最好读的一本大模型书籍，深入浅出，加上了图解，让不少原本偏不好懂的部分顿时简单了。<br>\n<a href=\"https://book.douban.com/subject/37339504/\">https://book.douban.com/subject/37339504/</a></p>\n\n\n    \n        \n          <img src=\"https://gw.alipayobjects.com/zos/k/pc/1.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"350\">\n        \n        \n            <img src=\"https://gw.alipayobjects.com/zos/k/3j/GryXvf_XMAA4ka7.jpeg?x-oss-process=image/resize,w_3600/format,webp\" width=\"600\">\n        \n    \n\n<p><strong>V2EX：28 岁突发性耳聋，给脑力劳动的各位朋友们提个醒</strong><br>\n<a href=\"https://www.v2ex.com/t/1134171\">https://www.v2ex.com/t/1134171</a><br>\n如果你哪怕只是感觉身体有点不对劲，一定要第一时间就医，这个还挺重要的，以及身体健康是革命的本钱。<br>\n<img src=\"https://gw.alipayobjects.com/zos/k/sy/zutBJP.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "a6d2c4592a1d",
      "blog_name": "潮流周刊",
      "title": "第222期 - 爱磁带机",
      "link": "https://weekly.tw93.fun/posts/222-%E7%88%B1%E7%A3%81%E5%B8%A6%E6%9C%BA/",
      "published": "2025-05-19T00:00:00",
      "timestamp": 1747584000,
      "summary": "<p><video controls width=\"800px\"></video></p>\n<p>封面图拍于上周淘的索尼磁带 CD 一体机，买了 10 盒磁带，非常喜欢这个质感和复古听音乐的感觉，可太喜欢了，每天晚上一盘磁带，很有感觉。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>这个 TS AI Agent 框架 Mastra 真优雅</strong><br>\n<a href=\"https://mastra.ai/\">https://mastra.ai/</a><br>\n这个 TS AI Agent 框架 Mastra 真优雅，好久没有看到这么简洁美的库了，提供记忆功能框架、执行 Workflow、RAG 等功能，我感觉对于搭建低码版本的 AI 应用开发，还是需要一个 ProCode 版本的，适合工程师更自定义的开发 AI 应用。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250511-tjre21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>开源版本的类 Cursor AI 代码编辑器</strong><br>\n<a href=\"https://github.com/voideditor/void\">https://github.com/voideditor/void</a><br>\n开源版本的类 Cursor AI 代码编辑器，看了看交互和 Cursor 挺像，可以使用任何模型，数据自己控制，也是 Fork 的 VS Code，配置可以无缝迁移。<br>\n<img src=\"https://cdn.fliggy.com/uPic/S2YF3521.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Yfinance 可以简单访问到雅虎财经的股票 API 数据</strong><br>\n<a href=\"https://ranaroussi.github.io/yfinance/\">https://ranaroussi.github.io/yfinance/</a><br>\nYfinance 这个 Python 库很可以简单访问到雅虎财经的股票 API 数据，包括查询股票信息价格、下载历史市场数据等功能，使用起来 API 还听简洁的，适合基于这个做点儿小玩意。<br>\n<img src=\"https://cdn.fliggy.com/uPic/HLLnUT21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>本地运行 GitHub Actions 的工具</strong><br>\n<a href=\"https://github.com/nektos/act\">https://github.com/nektos/act</a><br>\n假如你有 GitHub Actions 需要更高效的调试效果，可以试试 act 这个本地运行 GitHub Actions 的工具，安装后直接读取 .github/workflows/ 里面的文件去执行，相比每次改动去看云端的变化可以提高开发效率。<br>\n<img src=\"https://cdn.fliggy.com/uPic/act-quickstart-221.gif\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>投资书《漫步华尔街》好读</strong><br>\n<a href=\"https://book.douban.com/subject/10606457/\">https://book.douban.com/subject/10606457/</a><br>\n最近在看《漫步华尔街》，挺好读的一本投资学习书籍，缺书看小伙伴可以看看！<br>\n“倘若投资者买入并持有以大型指数为基础的指数基金，而不是勉为其难地买卖个股或主动管理型基金，那么他们的财务境遇便会好得多。”<br>\n<img src=\"https://cdn.fliggy.com/uPic/IMG_401821.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\"></p>\n<p><strong>如何让用户体验良好的同时，提高产品转化率？</strong><br>\n<a href=\"https://www.uisdc.com/ux-rights-balance\">https://www.uisdc.com/ux-rights-balance</a><br>\n用户引导不该是“温柔的陷阱”，而应该是“清晰的邀请”；产品设计也不该是“只求你上钩”，而应该是“愿你心甘情愿留下”。在这个体验为王、信任稀缺的时代，设计师们不妨多问自己几遍：这条路径，是不是公平的？用户是否理解并同意？他能不能随时反悔？如果答案是“是”，那说明你在做“良性设计”；如果答案有点模糊，那就值得再琢磨琢磨了。毕竟，产品可以靠一次转化赢得数据，但只有建立在尊重和透明上的体验，才能赢得人心。把短期指标做成长期信任，才是设计方案的通关密钥。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ZjjjGl22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>科普下磁带录音机的工作原理</strong><br>\n<a href=\"https://g.co/gemini/share/447c46b00acc\">https://g.co/gemini/share/447c46b00acc</a><br>\n通过 gemini 了解磁带和磁带机的原理说明，相比知乎上的写得好，下面是我买的磁带。<br>\n<img src=\"https://cdn.fliggy.com/uPic/IMG_396022.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "content": "<p><video controls width=\"800px\"></video></p>\n<p>封面图拍于上周淘的索尼磁带 CD 一体机，买了 10 盒磁带，非常喜欢这个质感和复古听音乐的感觉，可太喜欢了，每天晚上一盘磁带，很有感觉。</p>\n<blockquote>\n<p><strong>记录每周看到的接地气的潮流技术，筛选后发布于此，觉得不错可关注此周刊，方便获取更新通知</strong></p>\n</blockquote>\n<h2>潮流工具</h2>\n<p><strong>这个 TS AI Agent 框架 Mastra 真优雅</strong><br>\n<a href=\"https://mastra.ai/\">https://mastra.ai/</a><br>\n这个 TS AI Agent 框架 Mastra 真优雅，好久没有看到这么简洁美的库了，提供记忆功能框架、执行 Workflow、RAG 等功能，我感觉对于搭建低码版本的 AI 应用开发，还是需要一个 ProCode 版本的，适合工程师更自定义的开发 AI 应用。<br>\n<img src=\"https://cdn.fliggy.com/uPic/SCR-20250511-tjre21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>开源版本的类 Cursor AI 代码编辑器</strong><br>\n<a href=\"https://github.com/voideditor/void\">https://github.com/voideditor/void</a><br>\n开源版本的类 Cursor AI 代码编辑器，看了看交互和 Cursor 挺像，可以使用任何模型，数据自己控制，也是 Fork 的 VS Code，配置可以无缝迁移。<br>\n<img src=\"https://cdn.fliggy.com/uPic/S2YF3521.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>Yfinance 可以简单访问到雅虎财经的股票 API 数据</strong><br>\n<a href=\"https://ranaroussi.github.io/yfinance/\">https://ranaroussi.github.io/yfinance/</a><br>\nYfinance 这个 Python 库很可以简单访问到雅虎财经的股票 API 数据，包括查询股票信息价格、下载历史市场数据等功能，使用起来 API 还听简洁的，适合基于这个做点儿小玩意。<br>\n<img src=\"https://cdn.fliggy.com/uPic/HLLnUT21.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>本地运行 GitHub Actions 的工具</strong><br>\n<a href=\"https://github.com/nektos/act\">https://github.com/nektos/act</a><br>\n假如你有 GitHub Actions 需要更高效的调试效果，可以试试 act 这个本地运行 GitHub Actions 的工具，安装后直接读取 .github/workflows/ 里面的文件去执行，相比每次改动去看云端的变化可以提高开发效率。<br>\n<img src=\"https://cdn.fliggy.com/uPic/act-quickstart-221.gif\" width=\"800\"></p>\n<h2>随便看看</h2>\n<p><strong>投资书《漫步华尔街》好读</strong><br>\n<a href=\"https://book.douban.com/subject/10606457/\">https://book.douban.com/subject/10606457/</a><br>\n最近在看《漫步华尔街》，挺好读的一本投资学习书籍，缺书看小伙伴可以看看！<br>\n“倘若投资者买入并持有以大型指数为基础的指数基金，而不是勉为其难地买卖个股或主动管理型基金，那么他们的财务境遇便会好得多。”<br>\n<img src=\"https://cdn.fliggy.com/uPic/IMG_401821.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"500\"></p>\n<p><strong>如何让用户体验良好的同时，提高产品转化率？</strong><br>\n<a href=\"https://www.uisdc.com/ux-rights-balance\">https://www.uisdc.com/ux-rights-balance</a><br>\n用户引导不该是“温柔的陷阱”，而应该是“清晰的邀请”；产品设计也不该是“只求你上钩”，而应该是“愿你心甘情愿留下”。在这个体验为王、信任稀缺的时代，设计师们不妨多问自己几遍：这条路径，是不是公平的？用户是否理解并同意？他能不能随时反悔？如果答案是“是”，那说明你在做“良性设计”；如果答案有点模糊，那就值得再琢磨琢磨了。毕竟，产品可以靠一次转化赢得数据，但只有建立在尊重和透明上的体验，才能赢得人心。把短期指标做成长期信任，才是设计方案的通关密钥。<br>\n<img src=\"https://cdn.fliggy.com/uPic/ZjjjGl22.png?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>\n<p><strong>科普下磁带录音机的工作原理</strong><br>\n<a href=\"https://g.co/gemini/share/447c46b00acc\">https://g.co/gemini/share/447c46b00acc</a><br>\n通过 gemini 了解磁带和磁带机的原理说明，相比知乎上的写得好，下面是我买的磁带。<br>\n<img src=\"https://cdn.fliggy.com/uPic/IMG_396022.JPG?x-oss-process=image/resize,w_3600/format,webp\" width=\"800\"></p>",
      "author": "未知",
      "tags": [],
      "category": "资讯",
      "source_icon": "📰",
      "source_color": "#FCA5A5"
    },
    {
      "id": "eac36f42faea",
      "blog_name": "V2EX酷工作",
      "title": "[实习] Casbin 开源社区《Talent 2025》远程开源项目预选生招募中！",
      "link": "https://www.v2ex.com/t/1102920#reply2",
      "published": "2025-01-06T07:04:49+00:00",
      "timestamp": 1736147089,
      "summary": "\n<h2>Casbin 明日之星预选生计划-Talent for Casbin 2025</h2>\n<h3>“Casbin 明日之星预选生计划-Talent for Casbin 2025”是什么？</h3>\n<p>“Casbin 明日之星预选生计划-Talent for Casbin 2025”（以下简称 Talent 2025 ）是由 Casbin 开源社区举办的一项面向高校学生的编程活动，旨在鼓励在校学生积极参与 Casbin 社区旗下开源软件的开发维护，促进国内优秀开源软件的蓬勃发展。</p>\n<p>2020 年，Casbin 以开源社区的身份首次参加了由 Google 公司主办的<a href=\"https://summerofcode.withgoogle.com/archive/2020/organizations/6587176113930240/\">Google Summer of Code 2020</a> 和由中科院软件所、OpenEuler 社区主办的<a href=\"https://isrc.iscas.ac.cn/summer2020\">开源软件供应链点亮计划-开源之夏 2020</a> 。在上述活动中，Casbin 社区共派出 7 位来自国内外（中国、法国等）互联网一线的资深社区导师，共培养、指导了国内外 15 名学生（ 14 位中国同学、1 位印度同学）进行为期 3 个月的开源编程活动。Casbin 项目已毕业的同学，有的成长为 Casbin 项目核心维护者、以开源大牛的身份活跃于 GitHub ，有的毕业后全职加入腾讯微信事业部等互联网头部公司，有的凭借在 Casbin 社区的出色经历拿到全球顶级投行 Morgan Stanley （摩根士丹利）的 offer ，在工业界和学术界发挥着重要作用。</p>\n<p>2021 年和 2022 年，Casbin 社区继续参加上述两项活动，Google Summer of Code 和开源软件供应链点亮计划-编程之夏，题目的数量与招纳的学生人数均创下新高。</p>\n\n\n\n\n活动\n学生人数\n最终考核通过人数\n\n\n\n\nGSoC 2020\n3\n3\n\n\n开源之夏 2020\n12\n10\n\n\nGSoC 2021\n9\n9\n\n\n开源之夏 2021\n11\n11\n\n\nGSoC 2022\n12\n11\n\n\n开源之夏 2022\n6\n5\n\n<p>为了在非暑期时间能够继续促进 Casbin 开源软件的发展，同时挖掘有潜力的学生作为 Google Summer of Code 2025 和开源之夏 2025 （若该赛事仍举行并且 Casbin 社区获得参加资格）的有力竞争者，Casbin 社区将自筹资金，在 Google Summer of Code 等活动的闭幕期间，开展常态化的“Casbin 明日之星预选生计划-Talent for Casbin 2025”活动，针对 Casbin 社区旗下开源软件的开发与维护提供 mini 项目，并向全国高校学生开放报名。学生可自主选择感兴趣的项目进行申请，并在中选后获得该软件资深维护者（社区导师）亲自指导的机会。</p>\n<p>根据项目的难易程度和完成情况，参与者可获取“Casbin 明日之星预选生计划-Talent for Casbin 2025”活动奖金和加盖 Casbin 社区公章的参与（实习）证明。</p>\n<p><strong>“Talent 2025”项目在 2025 年第五次举办，与 Google Summer of Code 等活动类似，不同点是“Talent 2025”在非 GSoC 申请时间举行，与 GSoC 等活动是互补的关系。</strong></p>\n<ol>\n<li>Casbin 明日之星预选生计划-Talent for Casbin 2025 官网： <a href=\"https://github.com/casbin/Talent2025\">https://github.com/casbin/Talent2025</a></li>\n<li>Google Summer of Code 官网： <a href=\"https://summerofcode.withgoogle.com/\">https://summerofcode.withgoogle.com/</a></li>\n<li>Google Summer of Code 中文介绍： <a href=\"https://github.com/gsoc-cn/gsoc-cn\">https://github.com/gsoc-cn/gsoc-cn</a> 或 <a href=\"https://zhuanlan.zhihu.com/p/27823910\">https://zhuanlan.zhihu.com/p/27823910</a> 或 <a href=\"https://zhuanlan.zhihu.com/p/27330699\">https://zhuanlan.zhihu.com/p/27330699</a></li>\n<li>开源软件供应链点亮计划-开源之夏活动官网： <a href=\"https://summer.iscas.ac.cn/\">https://summer.iscas.ac.cn/</a></li>\n</ol>\n<h3>活动的主要参与方有哪些？</h3>\n<p>活动组织方：Casbin 开源软件社区。</p>\n<p>活动参与方主要角色为学生和导师。</p>\n<ol>\n<li>学生：学生自由选择项目，与导师沟通实现方案并撰写项目计划书。被选中的学生将在导师指导下，按计划完成开发工作，并将成果贡献给社区。社区评估学生的完成度，主办方根据评估结果发放资助金额给学生。</li>\n<li>社区：社区提供项目列表和描述，并安排项目对应的导师，导师与申请者沟通方案、并从申请者中选中一位承接项目。在为期三个月的开发周期中，导师指导学生进行对应项目的开发工作。</li>\n<li>导师：社区针对每一个项目指定一个导师，与学生一起制定合适的开发计划和方案，指导学生按计划完成开发。</li>\n</ol>\n<h3>本项目的资助额度是多少？</h3>\n<p>资助金按月发放，分为基础资助金：600 元 + 奖金：0~400 元\n（均为每月税后，根据上手快慢程度及技术栈匹配程度会有浮动，项目开始前会协商好。）</p>\n<h2>Casbin 开源项目介绍</h2>\n<p>Casbin 是一个强大的、高效的开源访问控制框架，支持 Go, Java, Node.js, Javascript (React), Python, PHP, .NET, C++, Rust 等十几种语言。Casbin 开源项目由北京大学罗杨博士创立于 2017 年，核心维护团队有二十多人。Casbin 在业界具有广泛影响力。目前已经被 Intel 、VMware 、Orange 、RedHat 、T-Mobile 等公司开源使用，被腾讯云、Cisco 、Verizon 等公司闭源使用。具体详见 Casbin 主页。Casbin Go 主项目目前 GitHub 10000+ stars ，加上所有语言的实现、插件等可达到 15000+ stars 。</p>\n<p>Casbin 技术已经被列入多个国内外权威机构、政府部门的白皮书：</p>\n<ol>\n<li>国家广电总局《广播电视和网络视听区块链系统》白皮书（第 85 页）： <a href=\"http://www.nrta.gov.cn/module/download/downfile.jsp?classid=0&amp;filename=e2ed95c223c34e38aa163b01030655aa.pdf\">http://www.nrta.gov.cn/module/download/downfile.jsp?classid=0&amp;filename=e2ed95c223c34e38aa163b01030655aa.pdf</a></li>\n<li>美国国家标准与技术研究院（ NIST ）《 Attribute-based Access Control for Microservices-based Applications Using a Service Mesh 》白皮书（第 10 页）： <a href=\"https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-204B.pdf\">https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-204B.pdf</a></li>\n</ol>\n<p>Casbin 也曾经在国际上进行多次线下宣讲：</p>\n<ol>\n<li>新加坡政府技术部 Open Government Products： <a href=\"https://www.youtube.com/watch?v=OTT84oplR9o\">https://www.youtube.com/watch?v=OTT84oplR9o</a></li>\n<li>俄罗斯最大在线旅游平台 <a href=\"http://tutu.ru\">tutu.ru</a>： <a href=\"https://www.youtube.com/watch?v=Z5dUxH4PqYM\">https://www.youtube.com/watch?v=Z5dUxH4PqYM</a></li>\n</ol>\n<p>具体请了解 Casbin 官网： <a href=\"https://casbin.org/\">https://casbin.org/</a></p>\n<h2>可选项目列表</h2>\n<p>所有可选项目详见： <a href=\"https://github.com/casbin/Talent2025#%E5%8F%AF%E9%80%89%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8\">https://github.com/casbin/Talent2025#可选项目列表</a></p>\n<h2>候选人要求</h2>\n<h3>工作职责：</h3>\n<ul>\n<li>每周与项目导师进行线上讨论，完成项目规定的开发任务。项目导师由开源项目创始人或其他核心成员担任；</li>\n<li>积极参与开源社区的建设，参与代码提交、解决 Issue 、审核 PR 等日常工作；</li>\n<li>配合完成官方要求的材料提交等事项，包括项目申请书撰写、社区反馈任务完成度追踪等。</li>\n</ul>\n<h3>职位要求：</h3>\n<ul>\n<li>本科、硕士或博士在读（已毕业、工作的无法参加）；</li>\n<li>对开源软件、开源社区感兴趣；</li>\n<li>熟悉一种或多种编程语言，有较强的工程能力，代码格式清晰规范，善于团队协作；</li>\n<li>有一定英文读写能力，能够熟练运用英语在 GitHub 进行开发、协作；</li>\n<li>较强的沟通能力和逻辑表达能力。</li>\n</ul>\n<h3>具有以下条件者优先：</h3>\n<ul>\n<li>熟悉 Go, Javascript 、React 等语言或框架、Web 系统、分布式系统、微服务架构，有相关项目经验；</li>\n<li>在 GitHub 较为活跃，有自己的开源项目，或参与过知名开源项目；</li>\n<li>可以在项目结束后继续长期参与开源社区的开发、建设或维护。</li>\n</ul>\n<h2>投递要求</h2>\n<p>申请学生需要同时完成以下“联系社区”和“官网投递”两个环节：</p>\n<h3>1. 联系社区（ 2025 年 1 月 1 日 - 2025 年 12 月 31 日）</h3>\n<ol>\n<li>加入《 Casbin 访问控制社区群》（ QQ 大群）：<a href=\"https://shang.qq.com/wpa/qunwpa?idkey=8ac8b91fc97ace3d383d0035f7aa06f7d670fd8e8d4837347354a31c18fac885\">546057381</a></li>\n<li>加入《 Casbin 明日之星预选生计划-Talent for Casbin 2025-群》（ QQ 小群）：<a href=\"https://qm.qq.com/cgi-bin/qm/qr?k=5MjIdZuPmAio6lfAr-NTxBY0CcoGL1yl&amp;jump_from=webapi\">540163681</a> ，联系导师，与导师沟通项目细节和方案，完成社区指定的 Easy Tasks</li>\n</ol>\n\n\n<img alt=\"qrcode-casbin\" class=\"embedded_image\" src=\"https://cdn.casbin.com/activity/qrcode-casbin.png\">\n<img alt=\"qrcode-talent\" class=\"embedded_image\" src=\"https://cdn.casbin.com/activity/qrcode-talent.png\">\n\n<h3>2. 官网投递（ 2025 年 1 月 1 日 - 2025 年 12 月 31 日）</h3>\n<p>发送 [中文简历 PDF ] 至 Casbin 社区官方邮箱： <a href=\"mailto:admin@casbin.org\">admin@casbin.org</a></p>\n",
      "content": "\n<h2>Casbin 明日之星预选生计划-Talent for Casbin 2025</h2>\n<h3>“Casbin 明日之星预选生计划-Talent for Casbin 2025”是什么？</h3>\n<p>“Casbin 明日之星预选生计划-Talent for Casbin 2025”（以下简称 Talent 2025 ）是由 Casbin 开源社区举办的一项面向高校学生的编程活动，旨在鼓励在校学生积极参与 Casbin 社区旗下开源软件的开发维护，促进国内优秀开源软件的蓬勃发展。</p>\n<p>2020 年，Casbin 以开源社区的身份首次参加了由 Google 公司主办的<a href=\"https://summerofcode.withgoogle.com/archive/2020/organizations/6587176113930240/\">Google Summer of Code 2020</a> 和由中科院软件所、OpenEuler 社区主办的<a href=\"https://isrc.iscas.ac.cn/summer2020\">开源软件供应链点亮计划-开源之夏 2020</a> 。在上述活动中，Casbin 社区共派出 7 位来自国内外（中国、法国等）互联网一线的资深社区导师，共培养、指导了国内外 15 名学生（ 14 位中国同学、1 位印度同学）进行为期 3 个月的开源编程活动。Casbin 项目已毕业的同学，有的成长为 Casbin 项目核心维护者、以开源大牛的身份活跃于 GitHub ，有的毕业后全职加入腾讯微信事业部等互联网头部公司，有的凭借在 Casbin 社区的出色经历拿到全球顶级投行 Morgan Stanley （摩根士丹利）的 offer ，在工业界和学术界发挥着重要作用。</p>\n<p>2021 年和 2022 年，Casbin 社区继续参加上述两项活动，Google Summer of Code 和开源软件供应链点亮计划-编程之夏，题目的数量与招纳的学生人数均创下新高。</p>\n\n\n\n\n活动\n学生人数\n最终考核通过人数\n\n\n\n\nGSoC 2020\n3\n3\n\n\n开源之夏 2020\n12\n10\n\n\nGSoC 2021\n9\n9\n\n\n开源之夏 2021\n11\n11\n\n\nGSoC 2022\n12\n11\n\n\n开源之夏 2022\n6\n5\n\n<p>为了在非暑期时间能够继续促进 Casbin 开源软件的发展，同时挖掘有潜力的学生作为 Google Summer of Code 2025 和开源之夏 2025 （若该赛事仍举行并且 Casbin 社区获得参加资格）的有力竞争者，Casbin 社区将自筹资金，在 Google Summer of Code 等活动的闭幕期间，开展常态化的“Casbin 明日之星预选生计划-Talent for Casbin 2025”活动，针对 Casbin 社区旗下开源软件的开发与维护提供 mini 项目，并向全国高校学生开放报名。学生可自主选择感兴趣的项目进行申请，并在中选后获得该软件资深维护者（社区导师）亲自指导的机会。</p>\n<p>根据项目的难易程度和完成情况，参与者可获取“Casbin 明日之星预选生计划-Talent for Casbin 2025”活动奖金和加盖 Casbin 社区公章的参与（实习）证明。</p>\n<p><strong>“Talent 2025”项目在 2025 年第五次举办，与 Google Summer of Code 等活动类似，不同点是“Talent 2025”在非 GSoC 申请时间举行，与 GSoC 等活动是互补的关系。</strong></p>\n<ol>\n<li>Casbin 明日之星预选生计划-Talent for Casbin 2025 官网： <a href=\"https://github.com/casbin/Talent2025\">https://github.com/casbin/Talent2025</a></li>\n<li>Google Summer of Code 官网： <a href=\"https://summerofcode.withgoogle.com/\">https://summerofcode.withgoogle.com/</a></li>\n<li>Google Summer of Code 中文介绍： <a href=\"https://github.com/gsoc-cn/gsoc-cn\">https://github.com/gsoc-cn/gsoc-cn</a> 或 <a href=\"https://zhuanlan.zhihu.com/p/27823910\">https://zhuanlan.zhihu.com/p/27823910</a> 或 <a href=\"https://zhuanlan.zhihu.com/p/27330699\">https://zhuanlan.zhihu.com/p/27330699</a></li>\n<li>开源软件供应链点亮计划-开源之夏活动官网： <a href=\"https://summer.iscas.ac.cn/\">https://summer.iscas.ac.cn/</a></li>\n</ol>\n<h3>活动的主要参与方有哪些？</h3>\n<p>活动组织方：Casbin 开源软件社区。</p>\n<p>活动参与方主要角色为学生和导师。</p>\n<ol>\n<li>学生：学生自由选择项目，与导师沟通实现方案并撰写项目计划书。被选中的学生将在导师指导下，按计划完成开发工作，并将成果贡献给社区。社区评估学生的完成度，主办方根据评估结果发放资助金额给学生。</li>\n<li>社区：社区提供项目列表和描述，并安排项目对应的导师，导师与申请者沟通方案、并从申请者中选中一位承接项目。在为期三个月的开发周期中，导师指导学生进行对应项目的开发工作。</li>\n<li>导师：社区针对每一个项目指定一个导师，与学生一起制定合适的开发计划和方案，指导学生按计划完成开发。</li>\n</ol>\n<h3>本项目的资助额度是多少？</h3>\n<p>资助金按月发放，分为基础资助金：600 元 + 奖金：0~400 元\n（均为每月税后，根据上手快慢程度及技术栈匹配程度会有浮动，项目开始前会协商好。）</p>\n<h2>Casbin 开源项目介绍</h2>\n<p>Casbin 是一个强大的、高效的开源访问控制框架，支持 Go, Java, Node.js, Javascript (React), Python, PHP, .NET, C++, Rust 等十几种语言。Casbin 开源项目由北京大学罗杨博士创立于 2017 年，核心维护团队有二十多人。Casbin 在业界具有广泛影响力。目前已经被 Intel 、VMware 、Orange 、RedHat 、T-Mobile 等公司开源使用，被腾讯云、Cisco 、Verizon 等公司闭源使用。具体详见 Casbin 主页。Casbin Go 主项目目前 GitHub 10000+ stars ，加上所有语言的实现、插件等可达到 15000+ stars 。</p>\n<p>Casbin 技术已经被列入多个国内外权威机构、政府部门的白皮书：</p>\n<ol>\n<li>国家广电总局《广播电视和网络视听区块链系统》白皮书（第 85 页）： <a href=\"http://www.nrta.gov.cn/module/download/downfile.jsp?classid=0&amp;filename=e2ed95c223c34e38aa163b01030655aa.pdf\">http://www.nrta.gov.cn/module/download/downfile.jsp?classid=0&amp;filename=e2ed95c223c34e38aa163b01030655aa.pdf</a></li>\n<li>美国国家标准与技术研究院（ NIST ）《 Attribute-based Access Control for Microservices-based Applications Using a Service Mesh 》白皮书（第 10 页）： <a href=\"https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-204B.pdf\">https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-204B.pdf</a></li>\n</ol>\n<p>Casbin 也曾经在国际上进行多次线下宣讲：</p>\n<ol>\n<li>新加坡政府技术部 Open Government Products： <a href=\"https://www.youtube.com/watch?v=OTT84oplR9o\">https://www.youtube.com/watch?v=OTT84oplR9o</a></li>\n<li>俄罗斯最大在线旅游平台 <a href=\"http://tutu.ru\">tutu.ru</a>： <a href=\"https://www.youtube.com/watch?v=Z5dUxH4PqYM\">https://www.youtube.com/watch?v=Z5dUxH4PqYM</a></li>\n</ol>\n<p>具体请了解 Casbin 官网： <a href=\"https://casbin.org/\">https://casbin.org/</a></p>\n<h2>可选项目列表</h2>\n<p>所有可选项目详见： <a href=\"https://github.com/casbin/Talent2025#%E5%8F%AF%E9%80%89%E9%A1%B9%E7%9B%AE%E5%88%97%E8%A1%A8\">https://github.com/casbin/Talent2025#可选项目列表</a></p>\n<h2>候选人要求</h2>\n<h3>工作职责：</h3>\n<ul>\n<li>每周与项目导师进行线上讨论，完成项目规定的开发任务。项目导师由开源项目创始人或其他核心成员担任；</li>\n<li>积极参与开源社区的建设，参与代码提交、解决 Issue 、审核 PR 等日常工作；</li>\n<li>配合完成官方要求的材料提交等事项，包括项目申请书撰写、社区反馈任务完成度追踪等。</li>\n</ul>\n<h3>职位要求：</h3>\n<ul>\n<li>本科、硕士或博士在读（已毕业、工作的无法参加）；</li>\n<li>对开源软件、开源社区感兴趣；</li>\n<li>熟悉一种或多种编程语言，有较强的工程能力，代码格式清晰规范，善于团队协作；</li>\n<li>有一定英文读写能力，能够熟练运用英语在 GitHub 进行开发、协作；</li>\n<li>较强的沟通能力和逻辑表达能力。</li>\n</ul>\n<h3>具有以下条件者优先：</h3>\n<ul>\n<li>熟悉 Go, Javascript 、React 等语言或框架、Web 系统、分布式系统、微服务架构，有相关项目经验；</li>\n<li>在 GitHub 较为活跃，有自己的开源项目，或参与过知名开源项目；</li>\n<li>可以在项目结束后继续长期参与开源社区的开发、建设或维护。</li>\n</ul>\n<h2>投递要求</h2>\n<p>申请学生需要同时完成以下“联系社区”和“官网投递”两个环节：</p>\n<h3>1. 联系社区（ 2025 年 1 月 1 日 - 2025 年 12 月 31 日）</h3>\n<ol>\n<li>加入《 Casbin 访问控制社区群》（ QQ 大群）：<a href=\"https://shang.qq.com/wpa/qunwpa?idkey=8ac8b91fc97ace3d383d0035f7aa06f7d670fd8e8d4837347354a31c18fac885\">546057381</a></li>\n<li>加入《 Casbin 明日之星预选生计划-Talent for Casbin 2025-群》（ QQ 小群）：<a href=\"https://qm.qq.com/cgi-bin/qm/qr?k=5MjIdZuPmAio6lfAr-NTxBY0CcoGL1yl&amp;jump_from=webapi\">540163681</a> ，联系导师，与导师沟通项目细节和方案，完成社区指定的 Easy Tasks</li>\n</ol>\n\n\n<img alt=\"qrcode-casbin\" class=\"embedded_image\" src=\"https://cdn.casbin.com/activity/qrcode-casbin.png\">\n<img alt=\"qrcode-talent\" class=\"embedded_image\" src=\"https://cdn.casbin.com/activity/qrcode-talent.png\">\n\n<h3>2. 官网投递（ 2025 年 1 月 1 日 - 2025 年 12 月 31 日）</h3>\n<p>发送 [中文简历 PDF ] 至 Casbin 社区官方邮箱： <a href=\"mailto:admin@casbin.org\">admin@casbin.org</a></p>\n",
      "author": "hsluoyz",
      "tags": [],
      "category": "工作",
      "source_icon": "💼",
      "source_color": "#A7F3D0"
    }
  ]
}